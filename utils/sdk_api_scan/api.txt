### io.modelcontextprotocol.kotlin.sdk.Annotations
  ctor  fun `<init>`(kotlin.Int, kotlin.collections.List<io.modelcontextprotocol.kotlin.sdk.Role>?, kotlin.time.Instant?, kotlin.Double?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.Annotations
  ctor  fun `<init>`(kotlin.collections.List<io.modelcontextprotocol.kotlin.sdk.Role>?, kotlin.time.Instant?, kotlin.Double?): io.modelcontextprotocol.kotlin.sdk.Annotations
  fun    fun io.modelcontextprotocol.kotlin.sdk.Annotations.component1(): kotlin.collections.List<io.modelcontextprotocol.kotlin.sdk.Role>?
  fun    fun io.modelcontextprotocol.kotlin.sdk.Annotations.component2(): kotlin.time.Instant?
  fun    fun io.modelcontextprotocol.kotlin.sdk.Annotations.component3(): kotlin.Double?
  fun    fun io.modelcontextprotocol.kotlin.sdk.Annotations.copy(kotlin.collections.List<io.modelcontextprotocol.kotlin.sdk.Role>?, kotlin.time.Instant?, kotlin.Double?): io.modelcontextprotocol.kotlin.sdk.Annotations
  fun    fun io.modelcontextprotocol.kotlin.sdk.Annotations.equals(kotlin.Any?): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.Annotations.hashCode(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.Annotations.toString(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.Annotations.`write$Self`(io.modelcontextprotocol.kotlin.sdk.Annotations, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.Annotations.audience: kotlin.collections.List<io.modelcontextprotocol.kotlin.sdk.Role>?
  val/var val io.modelcontextprotocol.kotlin.sdk.Annotations.lastModified: kotlin.time.Instant?
  val/var val io.modelcontextprotocol.kotlin.sdk.Annotations.priority: kotlin.Double?

### io.modelcontextprotocol.kotlin.sdk.Annotations.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.Annotations.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.Annotations.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.Annotations
  fun    fun io.modelcontextprotocol.kotlin.sdk.Annotations.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.Annotations): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.Annotations.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.Annotations.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.Annotations.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.Annotations>

### io.modelcontextprotocol.kotlin.sdk.AudioContent
  ctor  fun `<init>`(kotlin.Int, kotlin.String?, kotlin.String?, io.modelcontextprotocol.kotlin.sdk.Annotations?, kotlin.String?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.AudioContent
  ctor  fun `<init>`(kotlin.String, kotlin.String, io.modelcontextprotocol.kotlin.sdk.Annotations?): io.modelcontextprotocol.kotlin.sdk.AudioContent
  fun    fun io.modelcontextprotocol.kotlin.sdk.AudioContent.component1(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.AudioContent.component2(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.AudioContent.component3(): io.modelcontextprotocol.kotlin.sdk.Annotations?
  fun    fun io.modelcontextprotocol.kotlin.sdk.AudioContent.copy(kotlin.String, kotlin.String, io.modelcontextprotocol.kotlin.sdk.Annotations?): io.modelcontextprotocol.kotlin.sdk.AudioContent
  fun    fun io.modelcontextprotocol.kotlin.sdk.AudioContent.equals(kotlin.Any?): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.AudioContent.hashCode(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.AudioContent.toString(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.AudioContent.`write$Self`(io.modelcontextprotocol.kotlin.sdk.AudioContent, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.AudioContent.annotations: io.modelcontextprotocol.kotlin.sdk.Annotations?
  val/var val io.modelcontextprotocol.kotlin.sdk.AudioContent.data: kotlin.String
  val/var val io.modelcontextprotocol.kotlin.sdk.AudioContent.mimeType: kotlin.String
  val/var val io.modelcontextprotocol.kotlin.sdk.AudioContent.type: kotlin.String

### io.modelcontextprotocol.kotlin.sdk.AudioContent.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.AudioContent.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.AudioContent.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.AudioContent
  fun    fun io.modelcontextprotocol.kotlin.sdk.AudioContent.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.AudioContent): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.AudioContent.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.AudioContent.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.AudioContent.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.AudioContent>
  val/var val io.modelcontextprotocol.kotlin.sdk.AudioContent.Companion.TYPE: kotlin.String

### io.modelcontextprotocol.kotlin.sdk.BlobResourceContents
  ctor  fun `<init>`(kotlin.Int, kotlin.String?, kotlin.String?, kotlin.String?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.BlobResourceContents
  ctor  fun `<init>`(kotlin.String, kotlin.String, kotlin.String?): io.modelcontextprotocol.kotlin.sdk.BlobResourceContents
  fun    fun io.modelcontextprotocol.kotlin.sdk.BlobResourceContents.component1(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.BlobResourceContents.component2(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.BlobResourceContents.component3(): kotlin.String?
  fun    fun io.modelcontextprotocol.kotlin.sdk.BlobResourceContents.copy(kotlin.String, kotlin.String, kotlin.String?): io.modelcontextprotocol.kotlin.sdk.BlobResourceContents
  fun    fun io.modelcontextprotocol.kotlin.sdk.BlobResourceContents.equals(kotlin.Any?): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.BlobResourceContents.hashCode(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.BlobResourceContents.toString(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.BlobResourceContents.`write$Self`(io.modelcontextprotocol.kotlin.sdk.BlobResourceContents, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.BlobResourceContents.blob: kotlin.String
  val/var val io.modelcontextprotocol.kotlin.sdk.BlobResourceContents.mimeType: kotlin.String?
  val/var val io.modelcontextprotocol.kotlin.sdk.BlobResourceContents.uri: kotlin.String

### io.modelcontextprotocol.kotlin.sdk.BlobResourceContents.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.BlobResourceContents.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.BlobResourceContents.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.BlobResourceContents
  fun    fun io.modelcontextprotocol.kotlin.sdk.BlobResourceContents.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.BlobResourceContents): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.BlobResourceContents.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.BlobResourceContents.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.BlobResourceContents.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.BlobResourceContents>

### io.modelcontextprotocol.kotlin.sdk.CallToolRequest
  ctor  fun `<init>`(kotlin.Int, kotlin.String?, kotlinx.serialization.json.JsonObject?, kotlinx.serialization.json.JsonObject?, io.modelcontextprotocol.kotlin.sdk.Method?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.CallToolRequest
  ctor  fun `<init>`(kotlin.String, kotlinx.serialization.json.JsonObject, kotlinx.serialization.json.JsonObject): io.modelcontextprotocol.kotlin.sdk.CallToolRequest
  fun    fun io.modelcontextprotocol.kotlin.sdk.CallToolRequest.component1(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.CallToolRequest.component2(): kotlinx.serialization.json.JsonObject
  fun    fun io.modelcontextprotocol.kotlin.sdk.CallToolRequest.component3(): kotlinx.serialization.json.JsonObject
  fun    fun io.modelcontextprotocol.kotlin.sdk.CallToolRequest.copy(kotlin.String, kotlinx.serialization.json.JsonObject, kotlinx.serialization.json.JsonObject): io.modelcontextprotocol.kotlin.sdk.CallToolRequest
  fun    fun io.modelcontextprotocol.kotlin.sdk.CallToolRequest.equals(kotlin.Any?): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.CallToolRequest.hashCode(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.CallToolRequest.toString(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.CallToolRequest.`write$Self`(io.modelcontextprotocol.kotlin.sdk.CallToolRequest, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.CallToolRequest._meta: kotlinx.serialization.json.JsonObject
  val/var val io.modelcontextprotocol.kotlin.sdk.CallToolRequest.arguments: kotlinx.serialization.json.JsonObject
  val/var val io.modelcontextprotocol.kotlin.sdk.CallToolRequest.method: io.modelcontextprotocol.kotlin.sdk.Method
  val/var val io.modelcontextprotocol.kotlin.sdk.CallToolRequest.name: kotlin.String

### io.modelcontextprotocol.kotlin.sdk.CallToolRequest.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.CallToolRequest.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.CallToolRequest.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.CallToolRequest
  fun    fun io.modelcontextprotocol.kotlin.sdk.CallToolRequest.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.CallToolRequest): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.CallToolRequest.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.CallToolRequest.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.CallToolRequest.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.CallToolRequest>

### io.modelcontextprotocol.kotlin.sdk.CallToolResult
  ctor  fun `<init>`(kotlin.Int, kotlin.collections.List<io.modelcontextprotocol.kotlin.sdk.PromptMessageContent>?, kotlinx.serialization.json.JsonObject?, kotlin.Boolean?, kotlinx.serialization.json.JsonObject?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.CallToolResult
  ctor  fun `<init>`(kotlin.collections.List<io.modelcontextprotocol.kotlin.sdk.PromptMessageContent>, kotlinx.serialization.json.JsonObject?, kotlin.Boolean?, kotlinx.serialization.json.JsonObject): io.modelcontextprotocol.kotlin.sdk.CallToolResult
  fun    fun io.modelcontextprotocol.kotlin.sdk.CallToolResult.`write$Self`(io.modelcontextprotocol.kotlin.sdk.CallToolResult, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.CallToolResult._meta: kotlinx.serialization.json.JsonObject
  val/var val io.modelcontextprotocol.kotlin.sdk.CallToolResult.content: kotlin.collections.List<io.modelcontextprotocol.kotlin.sdk.PromptMessageContent>
  val/var val io.modelcontextprotocol.kotlin.sdk.CallToolResult.isError: kotlin.Boolean?
  val/var val io.modelcontextprotocol.kotlin.sdk.CallToolResult.structuredContent: kotlinx.serialization.json.JsonObject?

### io.modelcontextprotocol.kotlin.sdk.CallToolResult.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.CallToolResult.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.CallToolResult.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.CallToolResult
  fun    fun io.modelcontextprotocol.kotlin.sdk.CallToolResult.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.CallToolResult): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.CallToolResult.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.CallToolResult.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.CallToolResult.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.CallToolResult>

### io.modelcontextprotocol.kotlin.sdk.CallToolResultBase
  val/var val io.modelcontextprotocol.kotlin.sdk.CallToolResultBase.content: kotlin.collections.List<io.modelcontextprotocol.kotlin.sdk.PromptMessageContent>
  val/var val io.modelcontextprotocol.kotlin.sdk.CallToolResultBase.isError: kotlin.Boolean?
  val/var val io.modelcontextprotocol.kotlin.sdk.CallToolResultBase.structuredContent: kotlinx.serialization.json.JsonObject?

### io.modelcontextprotocol.kotlin.sdk.CallToolResultBase.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.CallToolResultBase.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.CallToolResultBase>

### io.modelcontextprotocol.kotlin.sdk.CallToolResultBase.DefaultImpls

### io.modelcontextprotocol.kotlin.sdk.CancelledNotification
  ctor  fun `<init>`(kotlin.Int, io.modelcontextprotocol.kotlin.sdk.CancelledNotification.Params?, io.modelcontextprotocol.kotlin.sdk.Method?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.CancelledNotification
  ctor  fun `<init>`(io.modelcontextprotocol.kotlin.sdk.CancelledNotification.Params): io.modelcontextprotocol.kotlin.sdk.CancelledNotification
  fun    fun io.modelcontextprotocol.kotlin.sdk.CancelledNotification.component1(): io.modelcontextprotocol.kotlin.sdk.CancelledNotification.Params
  fun    fun io.modelcontextprotocol.kotlin.sdk.CancelledNotification.copy(io.modelcontextprotocol.kotlin.sdk.CancelledNotification.Params): io.modelcontextprotocol.kotlin.sdk.CancelledNotification
  fun    fun io.modelcontextprotocol.kotlin.sdk.CancelledNotification.equals(kotlin.Any?): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.CancelledNotification.hashCode(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.CancelledNotification.toString(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.CancelledNotification.`write$Self`(io.modelcontextprotocol.kotlin.sdk.CancelledNotification, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.CancelledNotification.method: io.modelcontextprotocol.kotlin.sdk.Method
  val/var val io.modelcontextprotocol.kotlin.sdk.CancelledNotification.params: io.modelcontextprotocol.kotlin.sdk.CancelledNotification.Params

### io.modelcontextprotocol.kotlin.sdk.CancelledNotification.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.CancelledNotification.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.CancelledNotification.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.CancelledNotification
  fun    fun io.modelcontextprotocol.kotlin.sdk.CancelledNotification.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.CancelledNotification): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.CancelledNotification.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.CancelledNotification.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.CancelledNotification.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.CancelledNotification>

### io.modelcontextprotocol.kotlin.sdk.CancelledNotification.Params
  ctor  fun `<init>`(kotlin.Int, io.modelcontextprotocol.kotlin.sdk.RequestId?, kotlin.String?, kotlinx.serialization.json.JsonObject?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.CancelledNotification.Params
  ctor  fun `<init>`(io.modelcontextprotocol.kotlin.sdk.RequestId, kotlin.String?, kotlinx.serialization.json.JsonObject): io.modelcontextprotocol.kotlin.sdk.CancelledNotification.Params
  fun    fun io.modelcontextprotocol.kotlin.sdk.CancelledNotification.Params.component1(): io.modelcontextprotocol.kotlin.sdk.RequestId
  fun    fun io.modelcontextprotocol.kotlin.sdk.CancelledNotification.Params.component2(): kotlin.String?
  fun    fun io.modelcontextprotocol.kotlin.sdk.CancelledNotification.Params.component3(): kotlinx.serialization.json.JsonObject
  fun    fun io.modelcontextprotocol.kotlin.sdk.CancelledNotification.Params.copy(io.modelcontextprotocol.kotlin.sdk.RequestId, kotlin.String?, kotlinx.serialization.json.JsonObject): io.modelcontextprotocol.kotlin.sdk.CancelledNotification.Params
  fun    fun io.modelcontextprotocol.kotlin.sdk.CancelledNotification.Params.equals(kotlin.Any?): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.CancelledNotification.Params.hashCode(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.CancelledNotification.Params.toString(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.CancelledNotification.Params.`write$Self`(io.modelcontextprotocol.kotlin.sdk.CancelledNotification.Params, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.CancelledNotification.Params._meta: kotlinx.serialization.json.JsonObject
  val/var val io.modelcontextprotocol.kotlin.sdk.CancelledNotification.Params.reason: kotlin.String?
  val/var val io.modelcontextprotocol.kotlin.sdk.CancelledNotification.Params.requestId: io.modelcontextprotocol.kotlin.sdk.RequestId

### io.modelcontextprotocol.kotlin.sdk.CancelledNotification.Params.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.CancelledNotification.Params.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.CancelledNotification.Params.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.CancelledNotification.Params
  fun    fun io.modelcontextprotocol.kotlin.sdk.CancelledNotification.Params.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.CancelledNotification.Params): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.CancelledNotification.Params.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.CancelledNotification.Params.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.CancelledNotification.Params.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.CancelledNotification.Params>

### io.modelcontextprotocol.kotlin.sdk.ClientCapabilities
  ctor  fun `<init>`(kotlin.Int, kotlinx.serialization.json.JsonObject?, kotlinx.serialization.json.JsonObject?, io.modelcontextprotocol.kotlin.sdk.ClientCapabilities.Roots?, kotlinx.serialization.json.JsonObject?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.ClientCapabilities
  ctor  fun `<init>`(kotlinx.serialization.json.JsonObject?, kotlinx.serialization.json.JsonObject?, io.modelcontextprotocol.kotlin.sdk.ClientCapabilities.Roots?, kotlinx.serialization.json.JsonObject?): io.modelcontextprotocol.kotlin.sdk.ClientCapabilities
  fun    fun io.modelcontextprotocol.kotlin.sdk.ClientCapabilities.component1(): kotlinx.serialization.json.JsonObject?
  fun    fun io.modelcontextprotocol.kotlin.sdk.ClientCapabilities.component2(): kotlinx.serialization.json.JsonObject?
  fun    fun io.modelcontextprotocol.kotlin.sdk.ClientCapabilities.component3(): io.modelcontextprotocol.kotlin.sdk.ClientCapabilities.Roots?
  fun    fun io.modelcontextprotocol.kotlin.sdk.ClientCapabilities.component4(): kotlinx.serialization.json.JsonObject?
  fun    fun io.modelcontextprotocol.kotlin.sdk.ClientCapabilities.copy(kotlinx.serialization.json.JsonObject?, kotlinx.serialization.json.JsonObject?, io.modelcontextprotocol.kotlin.sdk.ClientCapabilities.Roots?, kotlinx.serialization.json.JsonObject?): io.modelcontextprotocol.kotlin.sdk.ClientCapabilities
  fun    fun io.modelcontextprotocol.kotlin.sdk.ClientCapabilities.equals(kotlin.Any?): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.ClientCapabilities.hashCode(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.ClientCapabilities.toString(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.ClientCapabilities.`write$Self`(io.modelcontextprotocol.kotlin.sdk.ClientCapabilities, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.ClientCapabilities.elicitation: kotlinx.serialization.json.JsonObject?
  val/var val io.modelcontextprotocol.kotlin.sdk.ClientCapabilities.experimental: kotlinx.serialization.json.JsonObject?
  val/var val io.modelcontextprotocol.kotlin.sdk.ClientCapabilities.roots: io.modelcontextprotocol.kotlin.sdk.ClientCapabilities.Roots?
  val/var val io.modelcontextprotocol.kotlin.sdk.ClientCapabilities.sampling: kotlinx.serialization.json.JsonObject?

### io.modelcontextprotocol.kotlin.sdk.ClientCapabilities.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.ClientCapabilities.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.ClientCapabilities.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.ClientCapabilities
  fun    fun io.modelcontextprotocol.kotlin.sdk.ClientCapabilities.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.ClientCapabilities): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.ClientCapabilities.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.ClientCapabilities.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.ClientCapabilities.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.ClientCapabilities>

### io.modelcontextprotocol.kotlin.sdk.ClientCapabilities.Roots
  ctor  fun `<init>`(kotlin.Int, kotlin.Boolean?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.ClientCapabilities.Roots
  ctor  fun `<init>`(kotlin.Boolean?): io.modelcontextprotocol.kotlin.sdk.ClientCapabilities.Roots
  fun    fun io.modelcontextprotocol.kotlin.sdk.ClientCapabilities.Roots.component1(): kotlin.Boolean?
  fun    fun io.modelcontextprotocol.kotlin.sdk.ClientCapabilities.Roots.copy(kotlin.Boolean?): io.modelcontextprotocol.kotlin.sdk.ClientCapabilities.Roots
  fun    fun io.modelcontextprotocol.kotlin.sdk.ClientCapabilities.Roots.equals(kotlin.Any?): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.ClientCapabilities.Roots.hashCode(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.ClientCapabilities.Roots.toString(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.ClientCapabilities.Roots.`write$Self`(io.modelcontextprotocol.kotlin.sdk.ClientCapabilities.Roots, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.ClientCapabilities.Roots.listChanged: kotlin.Boolean?

### io.modelcontextprotocol.kotlin.sdk.ClientCapabilities.Roots.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.ClientCapabilities.Roots.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.ClientCapabilities.Roots.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.ClientCapabilities.Roots
  fun    fun io.modelcontextprotocol.kotlin.sdk.ClientCapabilities.Roots.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.ClientCapabilities.Roots): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.ClientCapabilities.Roots.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.ClientCapabilities.Roots.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.ClientCapabilities.Roots.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.ClientCapabilities.Roots>

### io.modelcontextprotocol.kotlin.sdk.ClientNotification

### io.modelcontextprotocol.kotlin.sdk.ClientNotification.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.ClientNotification.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.ClientNotification>

### io.modelcontextprotocol.kotlin.sdk.ClientNotificationPolymorphicSerializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.ClientNotificationPolymorphicSerializer.selectDeserializer(kotlinx.serialization.json.JsonElement): kotlinx.serialization.DeserializationStrategy<io.modelcontextprotocol.kotlin.sdk.ClientNotification>

### io.modelcontextprotocol.kotlin.sdk.ClientRequest

### io.modelcontextprotocol.kotlin.sdk.ClientResult

### io.modelcontextprotocol.kotlin.sdk.ClientResult.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.ClientResult.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.ClientResult>

### io.modelcontextprotocol.kotlin.sdk.ClientResultPolymorphicSerializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.ClientResultPolymorphicSerializer.selectDeserializer(kotlinx.serialization.json.JsonElement): kotlinx.serialization.DeserializationStrategy<io.modelcontextprotocol.kotlin.sdk.ClientResult>

### io.modelcontextprotocol.kotlin.sdk.CompatibilityCallToolResult
  ctor  fun `<init>`(kotlin.Int, kotlin.collections.List<io.modelcontextprotocol.kotlin.sdk.PromptMessageContent>?, kotlinx.serialization.json.JsonObject?, kotlin.Boolean?, kotlinx.serialization.json.JsonObject?, kotlinx.serialization.json.JsonObject?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.CompatibilityCallToolResult
  ctor  fun `<init>`(kotlin.collections.List<io.modelcontextprotocol.kotlin.sdk.PromptMessageContent>, kotlinx.serialization.json.JsonObject?, kotlin.Boolean?, kotlinx.serialization.json.JsonObject, kotlinx.serialization.json.JsonObject): io.modelcontextprotocol.kotlin.sdk.CompatibilityCallToolResult
  fun    fun io.modelcontextprotocol.kotlin.sdk.CompatibilityCallToolResult.`write$Self`(io.modelcontextprotocol.kotlin.sdk.CompatibilityCallToolResult, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.CompatibilityCallToolResult._meta: kotlinx.serialization.json.JsonObject
  val/var val io.modelcontextprotocol.kotlin.sdk.CompatibilityCallToolResult.content: kotlin.collections.List<io.modelcontextprotocol.kotlin.sdk.PromptMessageContent>
  val/var val io.modelcontextprotocol.kotlin.sdk.CompatibilityCallToolResult.isError: kotlin.Boolean?
  val/var val io.modelcontextprotocol.kotlin.sdk.CompatibilityCallToolResult.structuredContent: kotlinx.serialization.json.JsonObject?
  val/var val io.modelcontextprotocol.kotlin.sdk.CompatibilityCallToolResult.toolResult: kotlinx.serialization.json.JsonObject

### io.modelcontextprotocol.kotlin.sdk.CompatibilityCallToolResult.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.CompatibilityCallToolResult.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.CompatibilityCallToolResult.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.CompatibilityCallToolResult
  fun    fun io.modelcontextprotocol.kotlin.sdk.CompatibilityCallToolResult.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.CompatibilityCallToolResult): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.CompatibilityCallToolResult.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.CompatibilityCallToolResult.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.CompatibilityCallToolResult.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.CompatibilityCallToolResult>

### io.modelcontextprotocol.kotlin.sdk.CompleteRequest
  ctor  fun `<init>`(kotlin.Int, io.modelcontextprotocol.kotlin.sdk.Reference?, io.modelcontextprotocol.kotlin.sdk.CompleteRequest.Argument?, kotlinx.serialization.json.JsonObject?, io.modelcontextprotocol.kotlin.sdk.Method?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.CompleteRequest
  ctor  fun `<init>`(io.modelcontextprotocol.kotlin.sdk.Reference, io.modelcontextprotocol.kotlin.sdk.CompleteRequest.Argument, kotlinx.serialization.json.JsonObject): io.modelcontextprotocol.kotlin.sdk.CompleteRequest
  fun    fun io.modelcontextprotocol.kotlin.sdk.CompleteRequest.component1(): io.modelcontextprotocol.kotlin.sdk.Reference
  fun    fun io.modelcontextprotocol.kotlin.sdk.CompleteRequest.component2(): io.modelcontextprotocol.kotlin.sdk.CompleteRequest.Argument
  fun    fun io.modelcontextprotocol.kotlin.sdk.CompleteRequest.component3(): kotlinx.serialization.json.JsonObject
  fun    fun io.modelcontextprotocol.kotlin.sdk.CompleteRequest.copy(io.modelcontextprotocol.kotlin.sdk.Reference, io.modelcontextprotocol.kotlin.sdk.CompleteRequest.Argument, kotlinx.serialization.json.JsonObject): io.modelcontextprotocol.kotlin.sdk.CompleteRequest
  fun    fun io.modelcontextprotocol.kotlin.sdk.CompleteRequest.equals(kotlin.Any?): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.CompleteRequest.hashCode(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.CompleteRequest.toString(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.CompleteRequest.`write$Self`(io.modelcontextprotocol.kotlin.sdk.CompleteRequest, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.CompleteRequest._meta: kotlinx.serialization.json.JsonObject
  val/var val io.modelcontextprotocol.kotlin.sdk.CompleteRequest.argument: io.modelcontextprotocol.kotlin.sdk.CompleteRequest.Argument
  val/var val io.modelcontextprotocol.kotlin.sdk.CompleteRequest.method: io.modelcontextprotocol.kotlin.sdk.Method
  val/var val io.modelcontextprotocol.kotlin.sdk.CompleteRequest.ref: io.modelcontextprotocol.kotlin.sdk.Reference

### io.modelcontextprotocol.kotlin.sdk.CompleteRequest.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.CompleteRequest.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.CompleteRequest.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.CompleteRequest
  fun    fun io.modelcontextprotocol.kotlin.sdk.CompleteRequest.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.CompleteRequest): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.CompleteRequest.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.CompleteRequest.Argument
  ctor  fun `<init>`(kotlin.Int, kotlin.String?, kotlin.String?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.CompleteRequest.Argument
  ctor  fun `<init>`(kotlin.String, kotlin.String): io.modelcontextprotocol.kotlin.sdk.CompleteRequest.Argument
  fun    fun io.modelcontextprotocol.kotlin.sdk.CompleteRequest.Argument.component1(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.CompleteRequest.Argument.component2(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.CompleteRequest.Argument.copy(kotlin.String, kotlin.String): io.modelcontextprotocol.kotlin.sdk.CompleteRequest.Argument
  fun    fun io.modelcontextprotocol.kotlin.sdk.CompleteRequest.Argument.equals(kotlin.Any?): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.CompleteRequest.Argument.hashCode(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.CompleteRequest.Argument.toString(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.CompleteRequest.Argument.`write$Self`(io.modelcontextprotocol.kotlin.sdk.CompleteRequest.Argument, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.CompleteRequest.Argument.name: kotlin.String
  val/var val io.modelcontextprotocol.kotlin.sdk.CompleteRequest.Argument.value: kotlin.String

### io.modelcontextprotocol.kotlin.sdk.CompleteRequest.Argument.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.CompleteRequest.Argument.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.CompleteRequest.Argument.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.CompleteRequest.Argument
  fun    fun io.modelcontextprotocol.kotlin.sdk.CompleteRequest.Argument.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.CompleteRequest.Argument): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.CompleteRequest.Argument.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.CompleteRequest.Argument.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.CompleteRequest.Argument.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.CompleteRequest.Argument>

### io.modelcontextprotocol.kotlin.sdk.CompleteRequest.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.CompleteRequest.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.CompleteRequest>

### io.modelcontextprotocol.kotlin.sdk.CompleteResult
  ctor  fun `<init>`(kotlin.Int, io.modelcontextprotocol.kotlin.sdk.CompleteResult.Completion?, kotlinx.serialization.json.JsonObject?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.CompleteResult
  ctor  fun `<init>`(io.modelcontextprotocol.kotlin.sdk.CompleteResult.Completion, kotlinx.serialization.json.JsonObject): io.modelcontextprotocol.kotlin.sdk.CompleteResult
  fun    fun io.modelcontextprotocol.kotlin.sdk.CompleteResult.component1(): io.modelcontextprotocol.kotlin.sdk.CompleteResult.Completion
  fun    fun io.modelcontextprotocol.kotlin.sdk.CompleteResult.component2(): kotlinx.serialization.json.JsonObject
  fun    fun io.modelcontextprotocol.kotlin.sdk.CompleteResult.copy(io.modelcontextprotocol.kotlin.sdk.CompleteResult.Completion, kotlinx.serialization.json.JsonObject): io.modelcontextprotocol.kotlin.sdk.CompleteResult
  fun    fun io.modelcontextprotocol.kotlin.sdk.CompleteResult.equals(kotlin.Any?): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.CompleteResult.hashCode(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.CompleteResult.toString(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.CompleteResult.`write$Self`(io.modelcontextprotocol.kotlin.sdk.CompleteResult, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.CompleteResult._meta: kotlinx.serialization.json.JsonObject
  val/var val io.modelcontextprotocol.kotlin.sdk.CompleteResult.completion: io.modelcontextprotocol.kotlin.sdk.CompleteResult.Completion

### io.modelcontextprotocol.kotlin.sdk.CompleteResult.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.CompleteResult.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.CompleteResult.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.CompleteResult
  fun    fun io.modelcontextprotocol.kotlin.sdk.CompleteResult.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.CompleteResult): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.CompleteResult.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.CompleteResult.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.CompleteResult.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.CompleteResult>

### io.modelcontextprotocol.kotlin.sdk.CompleteResult.Completion
  ctor  fun `<init>`(kotlin.Int, kotlin.collections.List<kotlin.String>?, kotlin.Int?, kotlin.Boolean?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.CompleteResult.Completion
  ctor  fun `<init>`(kotlin.collections.List<kotlin.String>, kotlin.Int?, kotlin.Boolean?): io.modelcontextprotocol.kotlin.sdk.CompleteResult.Completion
  fun    fun io.modelcontextprotocol.kotlin.sdk.CompleteResult.Completion.`write$Self`(io.modelcontextprotocol.kotlin.sdk.CompleteResult.Completion, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.CompleteResult.Completion.hasMore: kotlin.Boolean?
  val/var val io.modelcontextprotocol.kotlin.sdk.CompleteResult.Completion.total: kotlin.Int?
  val/var val io.modelcontextprotocol.kotlin.sdk.CompleteResult.Completion.values: kotlin.collections.List<kotlin.String>

### io.modelcontextprotocol.kotlin.sdk.CompleteResult.Completion.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.CompleteResult.Completion.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.CompleteResult.Completion.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.CompleteResult.Completion
  fun    fun io.modelcontextprotocol.kotlin.sdk.CompleteResult.Completion.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.CompleteResult.Completion): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.CompleteResult.Completion.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.CompleteResult.Completion.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.CompleteResult.Completion.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.CompleteResult.Completion>

### io.modelcontextprotocol.kotlin.sdk.CreateElicitationRequest
  ctor  fun `<init>`(kotlin.Int, kotlin.String?, io.modelcontextprotocol.kotlin.sdk.CreateElicitationRequest.RequestedSchema?, kotlinx.serialization.json.JsonObject?, io.modelcontextprotocol.kotlin.sdk.Method?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.CreateElicitationRequest
  ctor  fun `<init>`(kotlin.String, io.modelcontextprotocol.kotlin.sdk.CreateElicitationRequest.RequestedSchema, kotlinx.serialization.json.JsonObject): io.modelcontextprotocol.kotlin.sdk.CreateElicitationRequest
  fun    fun io.modelcontextprotocol.kotlin.sdk.CreateElicitationRequest.component1(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.CreateElicitationRequest.component2(): io.modelcontextprotocol.kotlin.sdk.CreateElicitationRequest.RequestedSchema
  fun    fun io.modelcontextprotocol.kotlin.sdk.CreateElicitationRequest.component3(): kotlinx.serialization.json.JsonObject
  fun    fun io.modelcontextprotocol.kotlin.sdk.CreateElicitationRequest.copy(kotlin.String, io.modelcontextprotocol.kotlin.sdk.CreateElicitationRequest.RequestedSchema, kotlinx.serialization.json.JsonObject): io.modelcontextprotocol.kotlin.sdk.CreateElicitationRequest
  fun    fun io.modelcontextprotocol.kotlin.sdk.CreateElicitationRequest.equals(kotlin.Any?): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.CreateElicitationRequest.hashCode(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.CreateElicitationRequest.toString(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.CreateElicitationRequest.`write$Self`(io.modelcontextprotocol.kotlin.sdk.CreateElicitationRequest, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.CreateElicitationRequest._meta: kotlinx.serialization.json.JsonObject
  val/var val io.modelcontextprotocol.kotlin.sdk.CreateElicitationRequest.message: kotlin.String
  val/var val io.modelcontextprotocol.kotlin.sdk.CreateElicitationRequest.method: io.modelcontextprotocol.kotlin.sdk.Method
  val/var val io.modelcontextprotocol.kotlin.sdk.CreateElicitationRequest.requestedSchema: io.modelcontextprotocol.kotlin.sdk.CreateElicitationRequest.RequestedSchema

### io.modelcontextprotocol.kotlin.sdk.CreateElicitationRequest.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.CreateElicitationRequest.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.CreateElicitationRequest.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.CreateElicitationRequest
  fun    fun io.modelcontextprotocol.kotlin.sdk.CreateElicitationRequest.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.CreateElicitationRequest): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.CreateElicitationRequest.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.CreateElicitationRequest.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.CreateElicitationRequest.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.CreateElicitationRequest>

### io.modelcontextprotocol.kotlin.sdk.CreateElicitationRequest.RequestedSchema
  ctor  fun `<init>`(kotlin.Int, kotlinx.serialization.json.JsonObject?, kotlin.collections.List<kotlin.String>?, kotlin.String?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.CreateElicitationRequest.RequestedSchema
  ctor  fun `<init>`(kotlinx.serialization.json.JsonObject, kotlin.collections.List<kotlin.String>?): io.modelcontextprotocol.kotlin.sdk.CreateElicitationRequest.RequestedSchema
  fun    fun io.modelcontextprotocol.kotlin.sdk.CreateElicitationRequest.RequestedSchema.component1(): kotlinx.serialization.json.JsonObject
  fun    fun io.modelcontextprotocol.kotlin.sdk.CreateElicitationRequest.RequestedSchema.component2(): kotlin.collections.List<kotlin.String>?
  fun    fun io.modelcontextprotocol.kotlin.sdk.CreateElicitationRequest.RequestedSchema.copy(kotlinx.serialization.json.JsonObject, kotlin.collections.List<kotlin.String>?): io.modelcontextprotocol.kotlin.sdk.CreateElicitationRequest.RequestedSchema
  fun    fun io.modelcontextprotocol.kotlin.sdk.CreateElicitationRequest.RequestedSchema.equals(kotlin.Any?): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.CreateElicitationRequest.RequestedSchema.hashCode(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.CreateElicitationRequest.RequestedSchema.toString(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.CreateElicitationRequest.RequestedSchema.`write$Self`(io.modelcontextprotocol.kotlin.sdk.CreateElicitationRequest.RequestedSchema, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.CreateElicitationRequest.RequestedSchema.properties: kotlinx.serialization.json.JsonObject
  val/var val io.modelcontextprotocol.kotlin.sdk.CreateElicitationRequest.RequestedSchema.required: kotlin.collections.List<kotlin.String>?
  val/var val io.modelcontextprotocol.kotlin.sdk.CreateElicitationRequest.RequestedSchema.type: kotlin.String

### io.modelcontextprotocol.kotlin.sdk.CreateElicitationRequest.RequestedSchema.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.CreateElicitationRequest.RequestedSchema.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.CreateElicitationRequest.RequestedSchema.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.CreateElicitationRequest.RequestedSchema
  fun    fun io.modelcontextprotocol.kotlin.sdk.CreateElicitationRequest.RequestedSchema.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.CreateElicitationRequest.RequestedSchema): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.CreateElicitationRequest.RequestedSchema.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.CreateElicitationRequest.RequestedSchema.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.CreateElicitationRequest.RequestedSchema.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.CreateElicitationRequest.RequestedSchema>

### io.modelcontextprotocol.kotlin.sdk.CreateElicitationResult
  ctor  fun `<init>`(kotlin.Int, io.modelcontextprotocol.kotlin.sdk.CreateElicitationResult.Action?, kotlinx.serialization.json.JsonObject?, kotlinx.serialization.json.JsonObject?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.CreateElicitationResult
  ctor  fun `<init>`(io.modelcontextprotocol.kotlin.sdk.CreateElicitationResult.Action, kotlinx.serialization.json.JsonObject?, kotlinx.serialization.json.JsonObject): io.modelcontextprotocol.kotlin.sdk.CreateElicitationResult
  fun    fun io.modelcontextprotocol.kotlin.sdk.CreateElicitationResult.component1(): io.modelcontextprotocol.kotlin.sdk.CreateElicitationResult.Action
  fun    fun io.modelcontextprotocol.kotlin.sdk.CreateElicitationResult.component2(): kotlinx.serialization.json.JsonObject?
  fun    fun io.modelcontextprotocol.kotlin.sdk.CreateElicitationResult.component3(): kotlinx.serialization.json.JsonObject
  fun    fun io.modelcontextprotocol.kotlin.sdk.CreateElicitationResult.copy(io.modelcontextprotocol.kotlin.sdk.CreateElicitationResult.Action, kotlinx.serialization.json.JsonObject?, kotlinx.serialization.json.JsonObject): io.modelcontextprotocol.kotlin.sdk.CreateElicitationResult
  fun    fun io.modelcontextprotocol.kotlin.sdk.CreateElicitationResult.equals(kotlin.Any?): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.CreateElicitationResult.hashCode(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.CreateElicitationResult.toString(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.CreateElicitationResult.`write$Self`(io.modelcontextprotocol.kotlin.sdk.CreateElicitationResult, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.CreateElicitationResult._meta: kotlinx.serialization.json.JsonObject
  val/var val io.modelcontextprotocol.kotlin.sdk.CreateElicitationResult.action: io.modelcontextprotocol.kotlin.sdk.CreateElicitationResult.Action
  val/var val io.modelcontextprotocol.kotlin.sdk.CreateElicitationResult.content: kotlinx.serialization.json.JsonObject?

### io.modelcontextprotocol.kotlin.sdk.CreateElicitationResult.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.CreateElicitationResult.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.CreateElicitationResult.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.CreateElicitationResult
  fun    fun io.modelcontextprotocol.kotlin.sdk.CreateElicitationResult.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.CreateElicitationResult): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.CreateElicitationResult.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.CreateElicitationResult.Action
  ctor  fun `<init>`(): io.modelcontextprotocol.kotlin.sdk.CreateElicitationResult.Action
  static fun valueOf(kotlin.String): io.modelcontextprotocol.kotlin.sdk.CreateElicitationResult.Action
  static fun values(): kotlin.Array<io.modelcontextprotocol.kotlin.sdk.CreateElicitationResult.Action>
  fun    fun valueOf(kotlin.String): io.modelcontextprotocol.kotlin.sdk.CreateElicitationResult.Action
  fun    fun values(): kotlin.Array<io.modelcontextprotocol.kotlin.sdk.CreateElicitationResult.Action>

### io.modelcontextprotocol.kotlin.sdk.CreateElicitationResult.Action.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.CreateElicitationResult.Action.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.CreateElicitationResult.Action>

### io.modelcontextprotocol.kotlin.sdk.CreateElicitationResult.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.CreateElicitationResult.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.CreateElicitationResult>

### io.modelcontextprotocol.kotlin.sdk.CreateMessageRequest
  ctor  fun `<init>`(kotlin.Int, kotlin.collections.List<io.modelcontextprotocol.kotlin.sdk.SamplingMessage>?, kotlin.String?, io.modelcontextprotocol.kotlin.sdk.CreateMessageRequest.IncludeContext?, kotlin.Double?, kotlin.Int, kotlin.collections.List<kotlin.String>?, kotlinx.serialization.json.JsonObject?, io.modelcontextprotocol.kotlin.sdk.ModelPreferences?, kotlinx.serialization.json.JsonObject?, io.modelcontextprotocol.kotlin.sdk.Method?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.CreateMessageRequest
  ctor  fun `<init>`(kotlin.collections.List<io.modelcontextprotocol.kotlin.sdk.SamplingMessage>, kotlin.String?, io.modelcontextprotocol.kotlin.sdk.CreateMessageRequest.IncludeContext?, kotlin.Double?, kotlin.Int, kotlin.collections.List<kotlin.String>?, kotlinx.serialization.json.JsonObject, io.modelcontextprotocol.kotlin.sdk.ModelPreferences?, kotlinx.serialization.json.JsonObject): io.modelcontextprotocol.kotlin.sdk.CreateMessageRequest
  fun    fun io.modelcontextprotocol.kotlin.sdk.CreateMessageRequest.component1(): kotlin.collections.List<io.modelcontextprotocol.kotlin.sdk.SamplingMessage>
  fun    fun io.modelcontextprotocol.kotlin.sdk.CreateMessageRequest.component2(): kotlin.String?
  fun    fun io.modelcontextprotocol.kotlin.sdk.CreateMessageRequest.component3(): io.modelcontextprotocol.kotlin.sdk.CreateMessageRequest.IncludeContext?
  fun    fun io.modelcontextprotocol.kotlin.sdk.CreateMessageRequest.component4(): kotlin.Double?
  fun    fun io.modelcontextprotocol.kotlin.sdk.CreateMessageRequest.component5(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.CreateMessageRequest.component6(): kotlin.collections.List<kotlin.String>?
  fun    fun io.modelcontextprotocol.kotlin.sdk.CreateMessageRequest.component7(): kotlinx.serialization.json.JsonObject
  fun    fun io.modelcontextprotocol.kotlin.sdk.CreateMessageRequest.component8(): io.modelcontextprotocol.kotlin.sdk.ModelPreferences?
  fun    fun io.modelcontextprotocol.kotlin.sdk.CreateMessageRequest.component9(): kotlinx.serialization.json.JsonObject
  fun    fun io.modelcontextprotocol.kotlin.sdk.CreateMessageRequest.copy(kotlin.collections.List<io.modelcontextprotocol.kotlin.sdk.SamplingMessage>, kotlin.String?, io.modelcontextprotocol.kotlin.sdk.CreateMessageRequest.IncludeContext?, kotlin.Double?, kotlin.Int, kotlin.collections.List<kotlin.String>?, kotlinx.serialization.json.JsonObject, io.modelcontextprotocol.kotlin.sdk.ModelPreferences?, kotlinx.serialization.json.JsonObject): io.modelcontextprotocol.kotlin.sdk.CreateMessageRequest
  fun    fun io.modelcontextprotocol.kotlin.sdk.CreateMessageRequest.equals(kotlin.Any?): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.CreateMessageRequest.hashCode(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.CreateMessageRequest.toString(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.CreateMessageRequest.`write$Self`(io.modelcontextprotocol.kotlin.sdk.CreateMessageRequest, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.CreateMessageRequest._meta: kotlinx.serialization.json.JsonObject
  val/var val io.modelcontextprotocol.kotlin.sdk.CreateMessageRequest.includeContext: io.modelcontextprotocol.kotlin.sdk.CreateMessageRequest.IncludeContext?
  val/var val io.modelcontextprotocol.kotlin.sdk.CreateMessageRequest.maxTokens: kotlin.Int
  val/var val io.modelcontextprotocol.kotlin.sdk.CreateMessageRequest.messages: kotlin.collections.List<io.modelcontextprotocol.kotlin.sdk.SamplingMessage>
  val/var val io.modelcontextprotocol.kotlin.sdk.CreateMessageRequest.metadata: kotlinx.serialization.json.JsonObject
  val/var val io.modelcontextprotocol.kotlin.sdk.CreateMessageRequest.method: io.modelcontextprotocol.kotlin.sdk.Method
  val/var val io.modelcontextprotocol.kotlin.sdk.CreateMessageRequest.modelPreferences: io.modelcontextprotocol.kotlin.sdk.ModelPreferences?
  val/var val io.modelcontextprotocol.kotlin.sdk.CreateMessageRequest.stopSequences: kotlin.collections.List<kotlin.String>?
  val/var val io.modelcontextprotocol.kotlin.sdk.CreateMessageRequest.systemPrompt: kotlin.String?
  val/var val io.modelcontextprotocol.kotlin.sdk.CreateMessageRequest.temperature: kotlin.Double?

### io.modelcontextprotocol.kotlin.sdk.CreateMessageRequest.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.CreateMessageRequest.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.CreateMessageRequest.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.CreateMessageRequest
  fun    fun io.modelcontextprotocol.kotlin.sdk.CreateMessageRequest.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.CreateMessageRequest): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.CreateMessageRequest.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.CreateMessageRequest.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.CreateMessageRequest.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.CreateMessageRequest>

### io.modelcontextprotocol.kotlin.sdk.CreateMessageRequest.IncludeContext
  ctor  fun `<init>`(): io.modelcontextprotocol.kotlin.sdk.CreateMessageRequest.IncludeContext
  static fun valueOf(kotlin.String): io.modelcontextprotocol.kotlin.sdk.CreateMessageRequest.IncludeContext
  static fun values(): kotlin.Array<io.modelcontextprotocol.kotlin.sdk.CreateMessageRequest.IncludeContext>
  fun    fun valueOf(kotlin.String): io.modelcontextprotocol.kotlin.sdk.CreateMessageRequest.IncludeContext
  fun    fun values(): kotlin.Array<io.modelcontextprotocol.kotlin.sdk.CreateMessageRequest.IncludeContext>

### io.modelcontextprotocol.kotlin.sdk.CreateMessageRequest.IncludeContext.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.CreateMessageRequest.IncludeContext.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.CreateMessageRequest.IncludeContext>

### io.modelcontextprotocol.kotlin.sdk.CreateMessageResult
  ctor  fun `<init>`(kotlin.Int, kotlin.String?, io.modelcontextprotocol.kotlin.sdk.StopReason?, io.modelcontextprotocol.kotlin.sdk.Role?, io.modelcontextprotocol.kotlin.sdk.PromptMessageContentMultimodal?, kotlinx.serialization.json.JsonObject?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.CreateMessageResult
  ctor  fun `<init>`(kotlin.String, io.modelcontextprotocol.kotlin.sdk.StopReason?, io.modelcontextprotocol.kotlin.sdk.Role, io.modelcontextprotocol.kotlin.sdk.PromptMessageContentMultimodal, kotlinx.serialization.json.JsonObject): io.modelcontextprotocol.kotlin.sdk.CreateMessageResult
  fun    fun io.modelcontextprotocol.kotlin.sdk.CreateMessageResult.component1(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.CreateMessageResult.component2(): io.modelcontextprotocol.kotlin.sdk.StopReason?
  fun    fun io.modelcontextprotocol.kotlin.sdk.CreateMessageResult.component3(): io.modelcontextprotocol.kotlin.sdk.Role
  fun    fun io.modelcontextprotocol.kotlin.sdk.CreateMessageResult.component4(): io.modelcontextprotocol.kotlin.sdk.PromptMessageContentMultimodal
  fun    fun io.modelcontextprotocol.kotlin.sdk.CreateMessageResult.component5(): kotlinx.serialization.json.JsonObject
  fun    fun io.modelcontextprotocol.kotlin.sdk.CreateMessageResult.copy(kotlin.String, io.modelcontextprotocol.kotlin.sdk.StopReason?, io.modelcontextprotocol.kotlin.sdk.Role, io.modelcontextprotocol.kotlin.sdk.PromptMessageContentMultimodal, kotlinx.serialization.json.JsonObject): io.modelcontextprotocol.kotlin.sdk.CreateMessageResult
  fun    fun io.modelcontextprotocol.kotlin.sdk.CreateMessageResult.equals(kotlin.Any?): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.CreateMessageResult.hashCode(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.CreateMessageResult.toString(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.CreateMessageResult.`write$Self`(io.modelcontextprotocol.kotlin.sdk.CreateMessageResult, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.CreateMessageResult._meta: kotlinx.serialization.json.JsonObject
  val/var val io.modelcontextprotocol.kotlin.sdk.CreateMessageResult.content: io.modelcontextprotocol.kotlin.sdk.PromptMessageContentMultimodal
  val/var val io.modelcontextprotocol.kotlin.sdk.CreateMessageResult.model: kotlin.String
  val/var val io.modelcontextprotocol.kotlin.sdk.CreateMessageResult.role: io.modelcontextprotocol.kotlin.sdk.Role
  val/var val io.modelcontextprotocol.kotlin.sdk.CreateMessageResult.stopReason: io.modelcontextprotocol.kotlin.sdk.StopReason?

### io.modelcontextprotocol.kotlin.sdk.CreateMessageResult.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.CreateMessageResult.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.CreateMessageResult.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.CreateMessageResult
  fun    fun io.modelcontextprotocol.kotlin.sdk.CreateMessageResult.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.CreateMessageResult): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.CreateMessageResult.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.CreateMessageResult.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.CreateMessageResult.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.CreateMessageResult>

### io.modelcontextprotocol.kotlin.sdk.CustomMeta
  ctor  fun `<init>`(kotlin.Int, kotlinx.serialization.json.JsonObject?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.CustomMeta
  ctor  fun `<init>`(kotlinx.serialization.json.JsonObject): io.modelcontextprotocol.kotlin.sdk.CustomMeta
  fun    fun io.modelcontextprotocol.kotlin.sdk.CustomMeta.`write$Self`(io.modelcontextprotocol.kotlin.sdk.CustomMeta, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.CustomMeta._meta: kotlinx.serialization.json.JsonObject

### io.modelcontextprotocol.kotlin.sdk.CustomMeta.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.CustomMeta.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.CustomMeta.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.CustomMeta
  fun    fun io.modelcontextprotocol.kotlin.sdk.CustomMeta.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.CustomMeta): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.CustomMeta.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.CustomMeta.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.CustomMeta.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.CustomMeta>

### io.modelcontextprotocol.kotlin.sdk.CustomRequest
  ctor  fun `<init>`(kotlin.Int, io.modelcontextprotocol.kotlin.sdk.Method?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.CustomRequest
  ctor  fun `<init>`(io.modelcontextprotocol.kotlin.sdk.Method): io.modelcontextprotocol.kotlin.sdk.CustomRequest
  fun    fun io.modelcontextprotocol.kotlin.sdk.CustomRequest.`write$Self`(io.modelcontextprotocol.kotlin.sdk.CustomRequest, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.CustomRequest.method: io.modelcontextprotocol.kotlin.sdk.Method

### io.modelcontextprotocol.kotlin.sdk.CustomRequest.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.CustomRequest.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.CustomRequest.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.CustomRequest
  fun    fun io.modelcontextprotocol.kotlin.sdk.CustomRequest.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.CustomRequest): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.CustomRequest.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.CustomRequest.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.CustomRequest.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.CustomRequest>

### io.modelcontextprotocol.kotlin.sdk.EmbeddedResource
  ctor  fun `<init>`(kotlin.Int, io.modelcontextprotocol.kotlin.sdk.ResourceContents?, io.modelcontextprotocol.kotlin.sdk.Annotations?, kotlin.String?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.EmbeddedResource
  ctor  fun `<init>`(io.modelcontextprotocol.kotlin.sdk.ResourceContents, io.modelcontextprotocol.kotlin.sdk.Annotations?): io.modelcontextprotocol.kotlin.sdk.EmbeddedResource
  fun    fun io.modelcontextprotocol.kotlin.sdk.EmbeddedResource.component1(): io.modelcontextprotocol.kotlin.sdk.ResourceContents
  fun    fun io.modelcontextprotocol.kotlin.sdk.EmbeddedResource.component2(): io.modelcontextprotocol.kotlin.sdk.Annotations?
  fun    fun io.modelcontextprotocol.kotlin.sdk.EmbeddedResource.copy(io.modelcontextprotocol.kotlin.sdk.ResourceContents, io.modelcontextprotocol.kotlin.sdk.Annotations?): io.modelcontextprotocol.kotlin.sdk.EmbeddedResource
  fun    fun io.modelcontextprotocol.kotlin.sdk.EmbeddedResource.equals(kotlin.Any?): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.EmbeddedResource.hashCode(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.EmbeddedResource.toString(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.EmbeddedResource.`write$Self`(io.modelcontextprotocol.kotlin.sdk.EmbeddedResource, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.EmbeddedResource.annotations: io.modelcontextprotocol.kotlin.sdk.Annotations?
  val/var val io.modelcontextprotocol.kotlin.sdk.EmbeddedResource.resource: io.modelcontextprotocol.kotlin.sdk.ResourceContents
  val/var val io.modelcontextprotocol.kotlin.sdk.EmbeddedResource.type: kotlin.String

### io.modelcontextprotocol.kotlin.sdk.EmbeddedResource.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.EmbeddedResource.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.EmbeddedResource.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.EmbeddedResource
  fun    fun io.modelcontextprotocol.kotlin.sdk.EmbeddedResource.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.EmbeddedResource): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.EmbeddedResource.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.EmbeddedResource.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.EmbeddedResource.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.EmbeddedResource>
  val/var val io.modelcontextprotocol.kotlin.sdk.EmbeddedResource.Companion.TYPE: kotlin.String

### io.modelcontextprotocol.kotlin.sdk.EmptyRequestResult
  ctor  fun `<init>`(kotlin.Int, kotlinx.serialization.json.JsonObject?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.EmptyRequestResult
  ctor  fun `<init>`(kotlinx.serialization.json.JsonObject): io.modelcontextprotocol.kotlin.sdk.EmptyRequestResult
  fun    fun io.modelcontextprotocol.kotlin.sdk.EmptyRequestResult.component1(): kotlinx.serialization.json.JsonObject
  fun    fun io.modelcontextprotocol.kotlin.sdk.EmptyRequestResult.copy(kotlinx.serialization.json.JsonObject): io.modelcontextprotocol.kotlin.sdk.EmptyRequestResult
  fun    fun io.modelcontextprotocol.kotlin.sdk.EmptyRequestResult.equals(kotlin.Any?): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.EmptyRequestResult.hashCode(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.EmptyRequestResult.toString(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.EmptyRequestResult.`write$Self`(io.modelcontextprotocol.kotlin.sdk.EmptyRequestResult, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.EmptyRequestResult._meta: kotlinx.serialization.json.JsonObject

### io.modelcontextprotocol.kotlin.sdk.EmptyRequestResult.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.EmptyRequestResult.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.EmptyRequestResult.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.EmptyRequestResult
  fun    fun io.modelcontextprotocol.kotlin.sdk.EmptyRequestResult.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.EmptyRequestResult): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.EmptyRequestResult.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.EmptyRequestResult.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.EmptyRequestResult.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.EmptyRequestResult>

### io.modelcontextprotocol.kotlin.sdk.ErrorCode
  val/var val io.modelcontextprotocol.kotlin.sdk.ErrorCode.code: kotlin.Int

### io.modelcontextprotocol.kotlin.sdk.ErrorCode.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.ErrorCode.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.ErrorCode>

### io.modelcontextprotocol.kotlin.sdk.ErrorCode.Defined
  ctor  fun `<init>`(kotlin.Int): io.modelcontextprotocol.kotlin.sdk.ErrorCode.Defined
  static fun valueOf(kotlin.String): io.modelcontextprotocol.kotlin.sdk.ErrorCode.Defined
  static fun values(): kotlin.Array<io.modelcontextprotocol.kotlin.sdk.ErrorCode.Defined>
  fun    fun valueOf(kotlin.String): io.modelcontextprotocol.kotlin.sdk.ErrorCode.Defined
  fun    fun values(): kotlin.Array<io.modelcontextprotocol.kotlin.sdk.ErrorCode.Defined>
  val/var val io.modelcontextprotocol.kotlin.sdk.ErrorCode.Defined.code: kotlin.Int

### io.modelcontextprotocol.kotlin.sdk.ErrorCode.Defined.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.ErrorCode.Defined.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.ErrorCode.Defined>

### io.modelcontextprotocol.kotlin.sdk.ErrorCode.Unknown
  ctor  fun `<init>`(kotlin.Int, kotlin.Int, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.ErrorCode.Unknown
  ctor  fun `<init>`(kotlin.Int): io.modelcontextprotocol.kotlin.sdk.ErrorCode.Unknown
  fun    fun io.modelcontextprotocol.kotlin.sdk.ErrorCode.Unknown.component1(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.ErrorCode.Unknown.copy(kotlin.Int): io.modelcontextprotocol.kotlin.sdk.ErrorCode.Unknown
  fun    fun io.modelcontextprotocol.kotlin.sdk.ErrorCode.Unknown.equals(kotlin.Any?): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.ErrorCode.Unknown.hashCode(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.ErrorCode.Unknown.toString(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.ErrorCode.Unknown.`write$Self`(io.modelcontextprotocol.kotlin.sdk.ErrorCode.Unknown, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.ErrorCode.Unknown.code: kotlin.Int

### io.modelcontextprotocol.kotlin.sdk.ErrorCode.Unknown.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.ErrorCode.Unknown.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.ErrorCode.Unknown.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.ErrorCode.Unknown
  fun    fun io.modelcontextprotocol.kotlin.sdk.ErrorCode.Unknown.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.ErrorCode.Unknown): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.ErrorCode.Unknown.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.ErrorCode.Unknown.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.ErrorCode.Unknown.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.ErrorCode.Unknown>

### io.modelcontextprotocol.kotlin.sdk.ErrorCodeSerializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.ErrorCodeSerializer.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.ErrorCode
  fun    fun io.modelcontextprotocol.kotlin.sdk.ErrorCodeSerializer.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.ErrorCode): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.ErrorCodeSerializer.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.GetPromptRequest
  ctor  fun `<init>`(kotlin.Int, kotlin.String?, kotlin.collections.Map<kotlin.String, kotlin.String>?, kotlinx.serialization.json.JsonObject?, io.modelcontextprotocol.kotlin.sdk.Method?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.GetPromptRequest
  ctor  fun `<init>`(kotlin.String, kotlin.collections.Map<kotlin.String, kotlin.String>?, kotlinx.serialization.json.JsonObject): io.modelcontextprotocol.kotlin.sdk.GetPromptRequest
  fun    fun io.modelcontextprotocol.kotlin.sdk.GetPromptRequest.component1(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.GetPromptRequest.component2(): kotlin.collections.Map<kotlin.String, kotlin.String>?
  fun    fun io.modelcontextprotocol.kotlin.sdk.GetPromptRequest.component3(): kotlinx.serialization.json.JsonObject
  fun    fun io.modelcontextprotocol.kotlin.sdk.GetPromptRequest.copy(kotlin.String, kotlin.collections.Map<kotlin.String, kotlin.String>?, kotlinx.serialization.json.JsonObject): io.modelcontextprotocol.kotlin.sdk.GetPromptRequest
  fun    fun io.modelcontextprotocol.kotlin.sdk.GetPromptRequest.equals(kotlin.Any?): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.GetPromptRequest.hashCode(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.GetPromptRequest.toString(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.GetPromptRequest.`write$Self`(io.modelcontextprotocol.kotlin.sdk.GetPromptRequest, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.GetPromptRequest._meta: kotlinx.serialization.json.JsonObject
  val/var val io.modelcontextprotocol.kotlin.sdk.GetPromptRequest.arguments: kotlin.collections.Map<kotlin.String, kotlin.String>?
  val/var val io.modelcontextprotocol.kotlin.sdk.GetPromptRequest.method: io.modelcontextprotocol.kotlin.sdk.Method
  val/var val io.modelcontextprotocol.kotlin.sdk.GetPromptRequest.name: kotlin.String

### io.modelcontextprotocol.kotlin.sdk.GetPromptRequest.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.GetPromptRequest.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.GetPromptRequest.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.GetPromptRequest
  fun    fun io.modelcontextprotocol.kotlin.sdk.GetPromptRequest.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.GetPromptRequest): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.GetPromptRequest.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.GetPromptRequest.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.GetPromptRequest.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.GetPromptRequest>

### io.modelcontextprotocol.kotlin.sdk.GetPromptResult
  ctor  fun `<init>`(kotlin.Int, kotlin.String?, kotlin.collections.List<io.modelcontextprotocol.kotlin.sdk.PromptMessage>?, kotlinx.serialization.json.JsonObject?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.GetPromptResult
  ctor  fun `<init>`(kotlin.String?, kotlin.collections.List<io.modelcontextprotocol.kotlin.sdk.PromptMessage>, kotlinx.serialization.json.JsonObject): io.modelcontextprotocol.kotlin.sdk.GetPromptResult
  fun    fun io.modelcontextprotocol.kotlin.sdk.GetPromptResult.`write$Self`(io.modelcontextprotocol.kotlin.sdk.GetPromptResult, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.GetPromptResult._meta: kotlinx.serialization.json.JsonObject
  val/var val io.modelcontextprotocol.kotlin.sdk.GetPromptResult.description: kotlin.String?
  val/var val io.modelcontextprotocol.kotlin.sdk.GetPromptResult.messages: kotlin.collections.List<io.modelcontextprotocol.kotlin.sdk.PromptMessage>

### io.modelcontextprotocol.kotlin.sdk.GetPromptResult.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.GetPromptResult.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.GetPromptResult.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.GetPromptResult
  fun    fun io.modelcontextprotocol.kotlin.sdk.GetPromptResult.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.GetPromptResult): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.GetPromptResult.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.GetPromptResult.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.GetPromptResult.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.GetPromptResult>

### io.modelcontextprotocol.kotlin.sdk.ImageContent
  ctor  fun `<init>`(kotlin.Int, kotlin.String?, kotlin.String?, io.modelcontextprotocol.kotlin.sdk.Annotations?, kotlin.String?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.ImageContent
  ctor  fun `<init>`(kotlin.String, kotlin.String, io.modelcontextprotocol.kotlin.sdk.Annotations?): io.modelcontextprotocol.kotlin.sdk.ImageContent
  fun    fun io.modelcontextprotocol.kotlin.sdk.ImageContent.component1(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.ImageContent.component2(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.ImageContent.component3(): io.modelcontextprotocol.kotlin.sdk.Annotations?
  fun    fun io.modelcontextprotocol.kotlin.sdk.ImageContent.copy(kotlin.String, kotlin.String, io.modelcontextprotocol.kotlin.sdk.Annotations?): io.modelcontextprotocol.kotlin.sdk.ImageContent
  fun    fun io.modelcontextprotocol.kotlin.sdk.ImageContent.equals(kotlin.Any?): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.ImageContent.hashCode(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.ImageContent.toString(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.ImageContent.`write$Self`(io.modelcontextprotocol.kotlin.sdk.ImageContent, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.ImageContent.annotations: io.modelcontextprotocol.kotlin.sdk.Annotations?
  val/var val io.modelcontextprotocol.kotlin.sdk.ImageContent.data: kotlin.String
  val/var val io.modelcontextprotocol.kotlin.sdk.ImageContent.mimeType: kotlin.String
  val/var val io.modelcontextprotocol.kotlin.sdk.ImageContent.type: kotlin.String

### io.modelcontextprotocol.kotlin.sdk.ImageContent.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.ImageContent.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.ImageContent.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.ImageContent
  fun    fun io.modelcontextprotocol.kotlin.sdk.ImageContent.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.ImageContent): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.ImageContent.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.ImageContent.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.ImageContent.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.ImageContent>
  val/var val io.modelcontextprotocol.kotlin.sdk.ImageContent.Companion.TYPE: kotlin.String

### io.modelcontextprotocol.kotlin.sdk.Implementation
  ctor  fun `<init>`(kotlin.Int, kotlin.String?, kotlin.String?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.Implementation
  ctor  fun `<init>`(kotlin.String, kotlin.String): io.modelcontextprotocol.kotlin.sdk.Implementation
  fun    fun io.modelcontextprotocol.kotlin.sdk.Implementation.component1(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.Implementation.component2(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.Implementation.copy(kotlin.String, kotlin.String): io.modelcontextprotocol.kotlin.sdk.Implementation
  fun    fun io.modelcontextprotocol.kotlin.sdk.Implementation.equals(kotlin.Any?): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.Implementation.hashCode(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.Implementation.toString(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.Implementation.`write$Self`(io.modelcontextprotocol.kotlin.sdk.Implementation, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.Implementation.name: kotlin.String
  val/var val io.modelcontextprotocol.kotlin.sdk.Implementation.version: kotlin.String

### io.modelcontextprotocol.kotlin.sdk.Implementation.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.Implementation.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.Implementation.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.Implementation
  fun    fun io.modelcontextprotocol.kotlin.sdk.Implementation.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.Implementation): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.Implementation.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.Implementation.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.Implementation.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.Implementation>

### io.modelcontextprotocol.kotlin.sdk.InitializeRequest
  ctor  fun `<init>`(kotlin.Int, kotlin.String?, io.modelcontextprotocol.kotlin.sdk.ClientCapabilities?, io.modelcontextprotocol.kotlin.sdk.Implementation?, kotlinx.serialization.json.JsonObject?, io.modelcontextprotocol.kotlin.sdk.Method?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.InitializeRequest
  ctor  fun `<init>`(kotlin.String, io.modelcontextprotocol.kotlin.sdk.ClientCapabilities, io.modelcontextprotocol.kotlin.sdk.Implementation, kotlinx.serialization.json.JsonObject): io.modelcontextprotocol.kotlin.sdk.InitializeRequest
  fun    fun io.modelcontextprotocol.kotlin.sdk.InitializeRequest.component1(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.InitializeRequest.component2(): io.modelcontextprotocol.kotlin.sdk.ClientCapabilities
  fun    fun io.modelcontextprotocol.kotlin.sdk.InitializeRequest.component3(): io.modelcontextprotocol.kotlin.sdk.Implementation
  fun    fun io.modelcontextprotocol.kotlin.sdk.InitializeRequest.component4(): kotlinx.serialization.json.JsonObject
  fun    fun io.modelcontextprotocol.kotlin.sdk.InitializeRequest.copy(kotlin.String, io.modelcontextprotocol.kotlin.sdk.ClientCapabilities, io.modelcontextprotocol.kotlin.sdk.Implementation, kotlinx.serialization.json.JsonObject): io.modelcontextprotocol.kotlin.sdk.InitializeRequest
  fun    fun io.modelcontextprotocol.kotlin.sdk.InitializeRequest.equals(kotlin.Any?): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.InitializeRequest.hashCode(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.InitializeRequest.toString(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.InitializeRequest.`write$Self`(io.modelcontextprotocol.kotlin.sdk.InitializeRequest, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.InitializeRequest._meta: kotlinx.serialization.json.JsonObject
  val/var val io.modelcontextprotocol.kotlin.sdk.InitializeRequest.capabilities: io.modelcontextprotocol.kotlin.sdk.ClientCapabilities
  val/var val io.modelcontextprotocol.kotlin.sdk.InitializeRequest.clientInfo: io.modelcontextprotocol.kotlin.sdk.Implementation
  val/var val io.modelcontextprotocol.kotlin.sdk.InitializeRequest.method: io.modelcontextprotocol.kotlin.sdk.Method
  val/var val io.modelcontextprotocol.kotlin.sdk.InitializeRequest.protocolVersion: kotlin.String

### io.modelcontextprotocol.kotlin.sdk.InitializeRequest.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.InitializeRequest.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.InitializeRequest.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.InitializeRequest
  fun    fun io.modelcontextprotocol.kotlin.sdk.InitializeRequest.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.InitializeRequest): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.InitializeRequest.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.InitializeRequest.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.InitializeRequest.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.InitializeRequest>

### io.modelcontextprotocol.kotlin.sdk.InitializeResult
  ctor  fun `<init>`(kotlin.Int, kotlin.String?, io.modelcontextprotocol.kotlin.sdk.ServerCapabilities?, io.modelcontextprotocol.kotlin.sdk.Implementation?, kotlin.String?, kotlinx.serialization.json.JsonObject?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.InitializeResult
  ctor  fun `<init>`(kotlin.String, io.modelcontextprotocol.kotlin.sdk.ServerCapabilities, io.modelcontextprotocol.kotlin.sdk.Implementation, kotlin.String?, kotlinx.serialization.json.JsonObject): io.modelcontextprotocol.kotlin.sdk.InitializeResult
  fun    fun io.modelcontextprotocol.kotlin.sdk.InitializeResult.component1(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.InitializeResult.component2(): io.modelcontextprotocol.kotlin.sdk.ServerCapabilities
  fun    fun io.modelcontextprotocol.kotlin.sdk.InitializeResult.component3(): io.modelcontextprotocol.kotlin.sdk.Implementation
  fun    fun io.modelcontextprotocol.kotlin.sdk.InitializeResult.component4(): kotlin.String?
  fun    fun io.modelcontextprotocol.kotlin.sdk.InitializeResult.component5(): kotlinx.serialization.json.JsonObject
  fun    fun io.modelcontextprotocol.kotlin.sdk.InitializeResult.copy(kotlin.String, io.modelcontextprotocol.kotlin.sdk.ServerCapabilities, io.modelcontextprotocol.kotlin.sdk.Implementation, kotlin.String?, kotlinx.serialization.json.JsonObject): io.modelcontextprotocol.kotlin.sdk.InitializeResult
  fun    fun io.modelcontextprotocol.kotlin.sdk.InitializeResult.equals(kotlin.Any?): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.InitializeResult.hashCode(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.InitializeResult.toString(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.InitializeResult.`write$Self`(io.modelcontextprotocol.kotlin.sdk.InitializeResult, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.InitializeResult._meta: kotlinx.serialization.json.JsonObject
  val/var val io.modelcontextprotocol.kotlin.sdk.InitializeResult.capabilities: io.modelcontextprotocol.kotlin.sdk.ServerCapabilities
  val/var val io.modelcontextprotocol.kotlin.sdk.InitializeResult.instructions: kotlin.String?
  val/var val io.modelcontextprotocol.kotlin.sdk.InitializeResult.protocolVersion: kotlin.String
  val/var val io.modelcontextprotocol.kotlin.sdk.InitializeResult.serverInfo: io.modelcontextprotocol.kotlin.sdk.Implementation

### io.modelcontextprotocol.kotlin.sdk.InitializeResult.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.InitializeResult.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.InitializeResult.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.InitializeResult
  fun    fun io.modelcontextprotocol.kotlin.sdk.InitializeResult.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.InitializeResult): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.InitializeResult.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.InitializeResult.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.InitializeResult.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.InitializeResult>

### io.modelcontextprotocol.kotlin.sdk.InitializedNotification
  ctor  fun `<init>`(kotlin.Int, io.modelcontextprotocol.kotlin.sdk.InitializedNotification.Params?, io.modelcontextprotocol.kotlin.sdk.Method?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.InitializedNotification
  ctor  fun `<init>`(io.modelcontextprotocol.kotlin.sdk.InitializedNotification.Params): io.modelcontextprotocol.kotlin.sdk.InitializedNotification
  fun    fun io.modelcontextprotocol.kotlin.sdk.InitializedNotification.component1(): io.modelcontextprotocol.kotlin.sdk.InitializedNotification.Params
  fun    fun io.modelcontextprotocol.kotlin.sdk.InitializedNotification.copy(io.modelcontextprotocol.kotlin.sdk.InitializedNotification.Params): io.modelcontextprotocol.kotlin.sdk.InitializedNotification
  fun    fun io.modelcontextprotocol.kotlin.sdk.InitializedNotification.equals(kotlin.Any?): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.InitializedNotification.hashCode(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.InitializedNotification.toString(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.InitializedNotification.`write$Self`(io.modelcontextprotocol.kotlin.sdk.InitializedNotification, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.InitializedNotification.method: io.modelcontextprotocol.kotlin.sdk.Method
  val/var val io.modelcontextprotocol.kotlin.sdk.InitializedNotification.params: io.modelcontextprotocol.kotlin.sdk.InitializedNotification.Params

### io.modelcontextprotocol.kotlin.sdk.InitializedNotification.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.InitializedNotification.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.InitializedNotification.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.InitializedNotification
  fun    fun io.modelcontextprotocol.kotlin.sdk.InitializedNotification.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.InitializedNotification): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.InitializedNotification.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.InitializedNotification.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.InitializedNotification.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.InitializedNotification>

### io.modelcontextprotocol.kotlin.sdk.InitializedNotification.Params
  ctor  fun `<init>`(kotlin.Int, kotlinx.serialization.json.JsonObject?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.InitializedNotification.Params
  ctor  fun `<init>`(kotlinx.serialization.json.JsonObject): io.modelcontextprotocol.kotlin.sdk.InitializedNotification.Params
  fun    fun io.modelcontextprotocol.kotlin.sdk.InitializedNotification.Params.component1(): kotlinx.serialization.json.JsonObject
  fun    fun io.modelcontextprotocol.kotlin.sdk.InitializedNotification.Params.copy(kotlinx.serialization.json.JsonObject): io.modelcontextprotocol.kotlin.sdk.InitializedNotification.Params
  fun    fun io.modelcontextprotocol.kotlin.sdk.InitializedNotification.Params.equals(kotlin.Any?): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.InitializedNotification.Params.hashCode(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.InitializedNotification.Params.toString(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.InitializedNotification.Params.`write$Self`(io.modelcontextprotocol.kotlin.sdk.InitializedNotification.Params, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.InitializedNotification.Params._meta: kotlinx.serialization.json.JsonObject

### io.modelcontextprotocol.kotlin.sdk.InitializedNotification.Params.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.InitializedNotification.Params.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.InitializedNotification.Params.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.InitializedNotification.Params
  fun    fun io.modelcontextprotocol.kotlin.sdk.InitializedNotification.Params.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.InitializedNotification.Params): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.InitializedNotification.Params.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.InitializedNotification.Params.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.InitializedNotification.Params.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.InitializedNotification.Params>

### io.modelcontextprotocol.kotlin.sdk.JSONRPCError
  ctor  fun `<init>`(kotlin.Int, io.modelcontextprotocol.kotlin.sdk.ErrorCode?, kotlin.String?, kotlinx.serialization.json.JsonObject?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.JSONRPCError
  ctor  fun `<init>`(io.modelcontextprotocol.kotlin.sdk.ErrorCode, kotlin.String, kotlinx.serialization.json.JsonObject): io.modelcontextprotocol.kotlin.sdk.JSONRPCError
  fun    fun io.modelcontextprotocol.kotlin.sdk.JSONRPCError.component1(): io.modelcontextprotocol.kotlin.sdk.ErrorCode
  fun    fun io.modelcontextprotocol.kotlin.sdk.JSONRPCError.component2(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.JSONRPCError.component3(): kotlinx.serialization.json.JsonObject
  fun    fun io.modelcontextprotocol.kotlin.sdk.JSONRPCError.copy(io.modelcontextprotocol.kotlin.sdk.ErrorCode, kotlin.String, kotlinx.serialization.json.JsonObject): io.modelcontextprotocol.kotlin.sdk.JSONRPCError
  fun    fun io.modelcontextprotocol.kotlin.sdk.JSONRPCError.equals(kotlin.Any?): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.JSONRPCError.hashCode(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.JSONRPCError.toString(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.JSONRPCError.`write$Self`(io.modelcontextprotocol.kotlin.sdk.JSONRPCError, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.JSONRPCError.code: io.modelcontextprotocol.kotlin.sdk.ErrorCode
  val/var val io.modelcontextprotocol.kotlin.sdk.JSONRPCError.data: kotlinx.serialization.json.JsonObject
  val/var val io.modelcontextprotocol.kotlin.sdk.JSONRPCError.message: kotlin.String

### io.modelcontextprotocol.kotlin.sdk.JSONRPCError.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.JSONRPCError.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.JSONRPCError.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.JSONRPCError
  fun    fun io.modelcontextprotocol.kotlin.sdk.JSONRPCError.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.JSONRPCError): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.JSONRPCError.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.JSONRPCError.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.JSONRPCError.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.JSONRPCError>

### io.modelcontextprotocol.kotlin.sdk.JSONRPCMessage

### io.modelcontextprotocol.kotlin.sdk.JSONRPCMessage.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.JSONRPCMessage.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.JSONRPCMessage>

### io.modelcontextprotocol.kotlin.sdk.JSONRPCMessagePolymorphicSerializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.JSONRPCMessagePolymorphicSerializer.selectDeserializer(kotlinx.serialization.json.JsonElement): kotlinx.serialization.DeserializationStrategy<io.modelcontextprotocol.kotlin.sdk.JSONRPCMessage>

### io.modelcontextprotocol.kotlin.sdk.JSONRPCNotification
  ctor  fun `<init>`(kotlin.Int, kotlin.String?, kotlinx.serialization.json.JsonElement?, kotlin.String?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.JSONRPCNotification
  ctor  fun `<init>`(kotlin.String, kotlinx.serialization.json.JsonElement, kotlin.String): io.modelcontextprotocol.kotlin.sdk.JSONRPCNotification
  fun    fun io.modelcontextprotocol.kotlin.sdk.JSONRPCNotification.component1(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.JSONRPCNotification.component2(): kotlinx.serialization.json.JsonElement
  fun    fun io.modelcontextprotocol.kotlin.sdk.JSONRPCNotification.component3(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.JSONRPCNotification.copy(kotlin.String, kotlinx.serialization.json.JsonElement, kotlin.String): io.modelcontextprotocol.kotlin.sdk.JSONRPCNotification
  fun    fun io.modelcontextprotocol.kotlin.sdk.JSONRPCNotification.equals(kotlin.Any?): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.JSONRPCNotification.hashCode(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.JSONRPCNotification.toString(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.JSONRPCNotification.`write$Self`(io.modelcontextprotocol.kotlin.sdk.JSONRPCNotification, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.JSONRPCNotification.jsonrpc: kotlin.String
  val/var val io.modelcontextprotocol.kotlin.sdk.JSONRPCNotification.method: kotlin.String
  val/var val io.modelcontextprotocol.kotlin.sdk.JSONRPCNotification.params: kotlinx.serialization.json.JsonElement

### io.modelcontextprotocol.kotlin.sdk.JSONRPCNotification.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.JSONRPCNotification.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.JSONRPCNotification.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.JSONRPCNotification
  fun    fun io.modelcontextprotocol.kotlin.sdk.JSONRPCNotification.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.JSONRPCNotification): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.JSONRPCNotification.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.JSONRPCNotification.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.JSONRPCNotification.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.JSONRPCNotification>

### io.modelcontextprotocol.kotlin.sdk.JSONRPCRequest
  ctor  fun `<init>`(kotlin.Int, io.modelcontextprotocol.kotlin.sdk.RequestId?, kotlin.String?, kotlinx.serialization.json.JsonElement?, kotlin.String?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.JSONRPCRequest
  ctor  fun `<init>`(io.modelcontextprotocol.kotlin.sdk.RequestId, kotlin.String, kotlinx.serialization.json.JsonElement, kotlin.String): io.modelcontextprotocol.kotlin.sdk.JSONRPCRequest
  fun    fun io.modelcontextprotocol.kotlin.sdk.JSONRPCRequest.component1(): io.modelcontextprotocol.kotlin.sdk.RequestId
  fun    fun io.modelcontextprotocol.kotlin.sdk.JSONRPCRequest.component2(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.JSONRPCRequest.component3(): kotlinx.serialization.json.JsonElement
  fun    fun io.modelcontextprotocol.kotlin.sdk.JSONRPCRequest.component4(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.JSONRPCRequest.copy(io.modelcontextprotocol.kotlin.sdk.RequestId, kotlin.String, kotlinx.serialization.json.JsonElement, kotlin.String): io.modelcontextprotocol.kotlin.sdk.JSONRPCRequest
  fun    fun io.modelcontextprotocol.kotlin.sdk.JSONRPCRequest.equals(kotlin.Any?): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.JSONRPCRequest.hashCode(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.JSONRPCRequest.toString(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.JSONRPCRequest.`write$Self`(io.modelcontextprotocol.kotlin.sdk.JSONRPCRequest, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.JSONRPCRequest.id: io.modelcontextprotocol.kotlin.sdk.RequestId
  val/var val io.modelcontextprotocol.kotlin.sdk.JSONRPCRequest.jsonrpc: kotlin.String
  val/var val io.modelcontextprotocol.kotlin.sdk.JSONRPCRequest.method: kotlin.String
  val/var val io.modelcontextprotocol.kotlin.sdk.JSONRPCRequest.params: kotlinx.serialization.json.JsonElement

### io.modelcontextprotocol.kotlin.sdk.JSONRPCRequest.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.JSONRPCRequest.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.JSONRPCRequest.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.JSONRPCRequest
  fun    fun io.modelcontextprotocol.kotlin.sdk.JSONRPCRequest.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.JSONRPCRequest): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.JSONRPCRequest.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.JSONRPCRequest.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.JSONRPCRequest.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.JSONRPCRequest>

### io.modelcontextprotocol.kotlin.sdk.JSONRPCResponse
  ctor  fun `<init>`(kotlin.Int, io.modelcontextprotocol.kotlin.sdk.RequestId?, kotlin.String?, io.modelcontextprotocol.kotlin.sdk.RequestResult?, io.modelcontextprotocol.kotlin.sdk.JSONRPCError?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.JSONRPCResponse
  ctor  fun `<init>`(io.modelcontextprotocol.kotlin.sdk.RequestId, kotlin.String, io.modelcontextprotocol.kotlin.sdk.RequestResult?, io.modelcontextprotocol.kotlin.sdk.JSONRPCError?): io.modelcontextprotocol.kotlin.sdk.JSONRPCResponse
  fun    fun io.modelcontextprotocol.kotlin.sdk.JSONRPCResponse.copy(io.modelcontextprotocol.kotlin.sdk.RequestId, kotlin.String, io.modelcontextprotocol.kotlin.sdk.RequestResult?, io.modelcontextprotocol.kotlin.sdk.JSONRPCError?): io.modelcontextprotocol.kotlin.sdk.JSONRPCResponse
  fun    fun io.modelcontextprotocol.kotlin.sdk.JSONRPCResponse.`write$Self`(io.modelcontextprotocol.kotlin.sdk.JSONRPCResponse, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.JSONRPCResponse.error: io.modelcontextprotocol.kotlin.sdk.JSONRPCError?
  val/var val io.modelcontextprotocol.kotlin.sdk.JSONRPCResponse.id: io.modelcontextprotocol.kotlin.sdk.RequestId
  val/var val io.modelcontextprotocol.kotlin.sdk.JSONRPCResponse.jsonrpc: kotlin.String
  val/var val io.modelcontextprotocol.kotlin.sdk.JSONRPCResponse.result: io.modelcontextprotocol.kotlin.sdk.RequestResult?

### io.modelcontextprotocol.kotlin.sdk.JSONRPCResponse.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.JSONRPCResponse.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.JSONRPCResponse.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.JSONRPCResponse
  fun    fun io.modelcontextprotocol.kotlin.sdk.JSONRPCResponse.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.JSONRPCResponse): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.JSONRPCResponse.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.JSONRPCResponse.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.JSONRPCResponse.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.JSONRPCResponse>

### io.modelcontextprotocol.kotlin.sdk.LibVersionKt

### io.modelcontextprotocol.kotlin.sdk.ListPromptsRequest
  ctor  fun `<init>`(kotlin.Int, kotlin.String?, kotlinx.serialization.json.JsonObject?, io.modelcontextprotocol.kotlin.sdk.Method?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.ListPromptsRequest
  ctor  fun `<init>`(io.modelcontextprotocol.kotlin.sdk.Cursor? /* = kotlin.String? */, kotlinx.serialization.json.JsonObject): io.modelcontextprotocol.kotlin.sdk.ListPromptsRequest
  fun    fun io.modelcontextprotocol.kotlin.sdk.ListPromptsRequest.component1(): io.modelcontextprotocol.kotlin.sdk.Cursor? /* = kotlin.String? */
  fun    fun io.modelcontextprotocol.kotlin.sdk.ListPromptsRequest.component2(): kotlinx.serialization.json.JsonObject
  fun    fun io.modelcontextprotocol.kotlin.sdk.ListPromptsRequest.copy(io.modelcontextprotocol.kotlin.sdk.Cursor? /* = kotlin.String? */, kotlinx.serialization.json.JsonObject): io.modelcontextprotocol.kotlin.sdk.ListPromptsRequest
  fun    fun io.modelcontextprotocol.kotlin.sdk.ListPromptsRequest.equals(kotlin.Any?): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.ListPromptsRequest.hashCode(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.ListPromptsRequest.toString(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.ListPromptsRequest.`write$Self`(io.modelcontextprotocol.kotlin.sdk.ListPromptsRequest, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.ListPromptsRequest._meta: kotlinx.serialization.json.JsonObject
  val/var val io.modelcontextprotocol.kotlin.sdk.ListPromptsRequest.cursor: io.modelcontextprotocol.kotlin.sdk.Cursor? /* = kotlin.String? */
  val/var val io.modelcontextprotocol.kotlin.sdk.ListPromptsRequest.method: io.modelcontextprotocol.kotlin.sdk.Method

### io.modelcontextprotocol.kotlin.sdk.ListPromptsRequest.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.ListPromptsRequest.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.ListPromptsRequest.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.ListPromptsRequest
  fun    fun io.modelcontextprotocol.kotlin.sdk.ListPromptsRequest.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.ListPromptsRequest): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.ListPromptsRequest.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.ListPromptsRequest.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.ListPromptsRequest.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.ListPromptsRequest>

### io.modelcontextprotocol.kotlin.sdk.ListPromptsResult
  ctor  fun `<init>`(kotlin.Int, kotlin.collections.List<io.modelcontextprotocol.kotlin.sdk.Prompt>?, kotlin.String?, kotlinx.serialization.json.JsonObject?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.ListPromptsResult
  ctor  fun `<init>`(kotlin.collections.List<io.modelcontextprotocol.kotlin.sdk.Prompt>, io.modelcontextprotocol.kotlin.sdk.Cursor? /* = kotlin.String? */, kotlinx.serialization.json.JsonObject): io.modelcontextprotocol.kotlin.sdk.ListPromptsResult
  fun    fun io.modelcontextprotocol.kotlin.sdk.ListPromptsResult.`write$Self`(io.modelcontextprotocol.kotlin.sdk.ListPromptsResult, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.ListPromptsResult._meta: kotlinx.serialization.json.JsonObject
  val/var val io.modelcontextprotocol.kotlin.sdk.ListPromptsResult.nextCursor: io.modelcontextprotocol.kotlin.sdk.Cursor? /* = kotlin.String? */
  val/var val io.modelcontextprotocol.kotlin.sdk.ListPromptsResult.prompts: kotlin.collections.List<io.modelcontextprotocol.kotlin.sdk.Prompt>

### io.modelcontextprotocol.kotlin.sdk.ListPromptsResult.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.ListPromptsResult.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.ListPromptsResult.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.ListPromptsResult
  fun    fun io.modelcontextprotocol.kotlin.sdk.ListPromptsResult.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.ListPromptsResult): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.ListPromptsResult.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.ListPromptsResult.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.ListPromptsResult.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.ListPromptsResult>

### io.modelcontextprotocol.kotlin.sdk.ListResourceTemplatesRequest
  ctor  fun `<init>`(kotlin.Int, kotlin.String?, kotlinx.serialization.json.JsonObject?, io.modelcontextprotocol.kotlin.sdk.Method?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.ListResourceTemplatesRequest
  ctor  fun `<init>`(io.modelcontextprotocol.kotlin.sdk.Cursor? /* = kotlin.String? */, kotlinx.serialization.json.JsonObject): io.modelcontextprotocol.kotlin.sdk.ListResourceTemplatesRequest
  fun    fun io.modelcontextprotocol.kotlin.sdk.ListResourceTemplatesRequest.component1(): io.modelcontextprotocol.kotlin.sdk.Cursor? /* = kotlin.String? */
  fun    fun io.modelcontextprotocol.kotlin.sdk.ListResourceTemplatesRequest.component2(): kotlinx.serialization.json.JsonObject
  fun    fun io.modelcontextprotocol.kotlin.sdk.ListResourceTemplatesRequest.copy(io.modelcontextprotocol.kotlin.sdk.Cursor? /* = kotlin.String? */, kotlinx.serialization.json.JsonObject): io.modelcontextprotocol.kotlin.sdk.ListResourceTemplatesRequest
  fun    fun io.modelcontextprotocol.kotlin.sdk.ListResourceTemplatesRequest.equals(kotlin.Any?): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.ListResourceTemplatesRequest.hashCode(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.ListResourceTemplatesRequest.toString(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.ListResourceTemplatesRequest.`write$Self`(io.modelcontextprotocol.kotlin.sdk.ListResourceTemplatesRequest, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.ListResourceTemplatesRequest._meta: kotlinx.serialization.json.JsonObject
  val/var val io.modelcontextprotocol.kotlin.sdk.ListResourceTemplatesRequest.cursor: io.modelcontextprotocol.kotlin.sdk.Cursor? /* = kotlin.String? */
  val/var val io.modelcontextprotocol.kotlin.sdk.ListResourceTemplatesRequest.method: io.modelcontextprotocol.kotlin.sdk.Method

### io.modelcontextprotocol.kotlin.sdk.ListResourceTemplatesRequest.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.ListResourceTemplatesRequest.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.ListResourceTemplatesRequest.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.ListResourceTemplatesRequest
  fun    fun io.modelcontextprotocol.kotlin.sdk.ListResourceTemplatesRequest.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.ListResourceTemplatesRequest): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.ListResourceTemplatesRequest.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.ListResourceTemplatesRequest.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.ListResourceTemplatesRequest.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.ListResourceTemplatesRequest>

### io.modelcontextprotocol.kotlin.sdk.ListResourceTemplatesResult
  ctor  fun `<init>`(kotlin.Int, kotlin.collections.List<io.modelcontextprotocol.kotlin.sdk.ResourceTemplate>?, kotlin.String?, kotlinx.serialization.json.JsonObject?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.ListResourceTemplatesResult
  ctor  fun `<init>`(kotlin.collections.List<io.modelcontextprotocol.kotlin.sdk.ResourceTemplate>, io.modelcontextprotocol.kotlin.sdk.Cursor? /* = kotlin.String? */, kotlinx.serialization.json.JsonObject): io.modelcontextprotocol.kotlin.sdk.ListResourceTemplatesResult
  fun    fun io.modelcontextprotocol.kotlin.sdk.ListResourceTemplatesResult.`write$Self`(io.modelcontextprotocol.kotlin.sdk.ListResourceTemplatesResult, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.ListResourceTemplatesResult._meta: kotlinx.serialization.json.JsonObject
  val/var val io.modelcontextprotocol.kotlin.sdk.ListResourceTemplatesResult.nextCursor: io.modelcontextprotocol.kotlin.sdk.Cursor? /* = kotlin.String? */
  val/var val io.modelcontextprotocol.kotlin.sdk.ListResourceTemplatesResult.resourceTemplates: kotlin.collections.List<io.modelcontextprotocol.kotlin.sdk.ResourceTemplate>

### io.modelcontextprotocol.kotlin.sdk.ListResourceTemplatesResult.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.ListResourceTemplatesResult.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.ListResourceTemplatesResult.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.ListResourceTemplatesResult
  fun    fun io.modelcontextprotocol.kotlin.sdk.ListResourceTemplatesResult.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.ListResourceTemplatesResult): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.ListResourceTemplatesResult.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.ListResourceTemplatesResult.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.ListResourceTemplatesResult.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.ListResourceTemplatesResult>

### io.modelcontextprotocol.kotlin.sdk.ListResourcesRequest
  ctor  fun `<init>`(kotlin.Int, kotlin.String?, kotlinx.serialization.json.JsonObject?, io.modelcontextprotocol.kotlin.sdk.Method?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.ListResourcesRequest
  ctor  fun `<init>`(io.modelcontextprotocol.kotlin.sdk.Cursor? /* = kotlin.String? */, kotlinx.serialization.json.JsonObject): io.modelcontextprotocol.kotlin.sdk.ListResourcesRequest
  fun    fun io.modelcontextprotocol.kotlin.sdk.ListResourcesRequest.component1(): io.modelcontextprotocol.kotlin.sdk.Cursor? /* = kotlin.String? */
  fun    fun io.modelcontextprotocol.kotlin.sdk.ListResourcesRequest.component2(): kotlinx.serialization.json.JsonObject
  fun    fun io.modelcontextprotocol.kotlin.sdk.ListResourcesRequest.copy(io.modelcontextprotocol.kotlin.sdk.Cursor? /* = kotlin.String? */, kotlinx.serialization.json.JsonObject): io.modelcontextprotocol.kotlin.sdk.ListResourcesRequest
  fun    fun io.modelcontextprotocol.kotlin.sdk.ListResourcesRequest.equals(kotlin.Any?): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.ListResourcesRequest.hashCode(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.ListResourcesRequest.toString(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.ListResourcesRequest.`write$Self`(io.modelcontextprotocol.kotlin.sdk.ListResourcesRequest, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.ListResourcesRequest._meta: kotlinx.serialization.json.JsonObject
  val/var val io.modelcontextprotocol.kotlin.sdk.ListResourcesRequest.cursor: io.modelcontextprotocol.kotlin.sdk.Cursor? /* = kotlin.String? */
  val/var val io.modelcontextprotocol.kotlin.sdk.ListResourcesRequest.method: io.modelcontextprotocol.kotlin.sdk.Method

### io.modelcontextprotocol.kotlin.sdk.ListResourcesRequest.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.ListResourcesRequest.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.ListResourcesRequest.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.ListResourcesRequest
  fun    fun io.modelcontextprotocol.kotlin.sdk.ListResourcesRequest.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.ListResourcesRequest): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.ListResourcesRequest.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.ListResourcesRequest.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.ListResourcesRequest.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.ListResourcesRequest>

### io.modelcontextprotocol.kotlin.sdk.ListResourcesResult
  ctor  fun `<init>`(kotlin.Int, kotlin.collections.List<io.modelcontextprotocol.kotlin.sdk.Resource>?, kotlin.String?, kotlinx.serialization.json.JsonObject?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.ListResourcesResult
  ctor  fun `<init>`(kotlin.collections.List<io.modelcontextprotocol.kotlin.sdk.Resource>, io.modelcontextprotocol.kotlin.sdk.Cursor? /* = kotlin.String? */, kotlinx.serialization.json.JsonObject): io.modelcontextprotocol.kotlin.sdk.ListResourcesResult
  fun    fun io.modelcontextprotocol.kotlin.sdk.ListResourcesResult.`write$Self`(io.modelcontextprotocol.kotlin.sdk.ListResourcesResult, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.ListResourcesResult._meta: kotlinx.serialization.json.JsonObject
  val/var val io.modelcontextprotocol.kotlin.sdk.ListResourcesResult.nextCursor: io.modelcontextprotocol.kotlin.sdk.Cursor? /* = kotlin.String? */
  val/var val io.modelcontextprotocol.kotlin.sdk.ListResourcesResult.resources: kotlin.collections.List<io.modelcontextprotocol.kotlin.sdk.Resource>

### io.modelcontextprotocol.kotlin.sdk.ListResourcesResult.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.ListResourcesResult.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.ListResourcesResult.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.ListResourcesResult
  fun    fun io.modelcontextprotocol.kotlin.sdk.ListResourcesResult.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.ListResourcesResult): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.ListResourcesResult.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.ListResourcesResult.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.ListResourcesResult.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.ListResourcesResult>

### io.modelcontextprotocol.kotlin.sdk.ListRootsRequest
  ctor  fun `<init>`(kotlin.Int, kotlinx.serialization.json.JsonObject?, io.modelcontextprotocol.kotlin.sdk.Method?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.ListRootsRequest
  ctor  fun `<init>`(kotlinx.serialization.json.JsonObject): io.modelcontextprotocol.kotlin.sdk.ListRootsRequest
  fun    fun io.modelcontextprotocol.kotlin.sdk.ListRootsRequest.`write$Self`(io.modelcontextprotocol.kotlin.sdk.ListRootsRequest, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.ListRootsRequest._meta: kotlinx.serialization.json.JsonObject
  val/var val io.modelcontextprotocol.kotlin.sdk.ListRootsRequest.method: io.modelcontextprotocol.kotlin.sdk.Method

### io.modelcontextprotocol.kotlin.sdk.ListRootsRequest.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.ListRootsRequest.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.ListRootsRequest.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.ListRootsRequest
  fun    fun io.modelcontextprotocol.kotlin.sdk.ListRootsRequest.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.ListRootsRequest): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.ListRootsRequest.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.ListRootsRequest.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.ListRootsRequest.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.ListRootsRequest>

### io.modelcontextprotocol.kotlin.sdk.ListRootsResult
  ctor  fun `<init>`(kotlin.Int, kotlin.collections.List<io.modelcontextprotocol.kotlin.sdk.Root>?, kotlinx.serialization.json.JsonObject?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.ListRootsResult
  ctor  fun `<init>`(kotlin.collections.List<io.modelcontextprotocol.kotlin.sdk.Root>, kotlinx.serialization.json.JsonObject): io.modelcontextprotocol.kotlin.sdk.ListRootsResult
  fun    fun io.modelcontextprotocol.kotlin.sdk.ListRootsResult.`write$Self`(io.modelcontextprotocol.kotlin.sdk.ListRootsResult, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.ListRootsResult._meta: kotlinx.serialization.json.JsonObject
  val/var val io.modelcontextprotocol.kotlin.sdk.ListRootsResult.roots: kotlin.collections.List<io.modelcontextprotocol.kotlin.sdk.Root>

### io.modelcontextprotocol.kotlin.sdk.ListRootsResult.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.ListRootsResult.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.ListRootsResult.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.ListRootsResult
  fun    fun io.modelcontextprotocol.kotlin.sdk.ListRootsResult.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.ListRootsResult): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.ListRootsResult.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.ListRootsResult.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.ListRootsResult.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.ListRootsResult>

### io.modelcontextprotocol.kotlin.sdk.ListToolsRequest
  ctor  fun `<init>`(kotlin.Int, kotlin.String?, kotlinx.serialization.json.JsonObject?, io.modelcontextprotocol.kotlin.sdk.Method?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.ListToolsRequest
  ctor  fun `<init>`(io.modelcontextprotocol.kotlin.sdk.Cursor? /* = kotlin.String? */, kotlinx.serialization.json.JsonObject): io.modelcontextprotocol.kotlin.sdk.ListToolsRequest
  fun    fun io.modelcontextprotocol.kotlin.sdk.ListToolsRequest.component1(): io.modelcontextprotocol.kotlin.sdk.Cursor? /* = kotlin.String? */
  fun    fun io.modelcontextprotocol.kotlin.sdk.ListToolsRequest.component2(): kotlinx.serialization.json.JsonObject
  fun    fun io.modelcontextprotocol.kotlin.sdk.ListToolsRequest.copy(io.modelcontextprotocol.kotlin.sdk.Cursor? /* = kotlin.String? */, kotlinx.serialization.json.JsonObject): io.modelcontextprotocol.kotlin.sdk.ListToolsRequest
  fun    fun io.modelcontextprotocol.kotlin.sdk.ListToolsRequest.equals(kotlin.Any?): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.ListToolsRequest.hashCode(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.ListToolsRequest.toString(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.ListToolsRequest.`write$Self`(io.modelcontextprotocol.kotlin.sdk.ListToolsRequest, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.ListToolsRequest._meta: kotlinx.serialization.json.JsonObject
  val/var val io.modelcontextprotocol.kotlin.sdk.ListToolsRequest.cursor: io.modelcontextprotocol.kotlin.sdk.Cursor? /* = kotlin.String? */
  val/var val io.modelcontextprotocol.kotlin.sdk.ListToolsRequest.method: io.modelcontextprotocol.kotlin.sdk.Method

### io.modelcontextprotocol.kotlin.sdk.ListToolsRequest.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.ListToolsRequest.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.ListToolsRequest.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.ListToolsRequest
  fun    fun io.modelcontextprotocol.kotlin.sdk.ListToolsRequest.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.ListToolsRequest): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.ListToolsRequest.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.ListToolsRequest.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.ListToolsRequest.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.ListToolsRequest>

### io.modelcontextprotocol.kotlin.sdk.ListToolsResult
  ctor  fun `<init>`(kotlin.Int, kotlin.collections.List<io.modelcontextprotocol.kotlin.sdk.Tool>?, kotlin.String?, kotlinx.serialization.json.JsonObject?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.ListToolsResult
  ctor  fun `<init>`(kotlin.collections.List<io.modelcontextprotocol.kotlin.sdk.Tool>, io.modelcontextprotocol.kotlin.sdk.Cursor? /* = kotlin.String? */, kotlinx.serialization.json.JsonObject): io.modelcontextprotocol.kotlin.sdk.ListToolsResult
  fun    fun io.modelcontextprotocol.kotlin.sdk.ListToolsResult.`write$Self`(io.modelcontextprotocol.kotlin.sdk.ListToolsResult, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.ListToolsResult._meta: kotlinx.serialization.json.JsonObject
  val/var val io.modelcontextprotocol.kotlin.sdk.ListToolsResult.nextCursor: io.modelcontextprotocol.kotlin.sdk.Cursor? /* = kotlin.String? */
  val/var val io.modelcontextprotocol.kotlin.sdk.ListToolsResult.tools: kotlin.collections.List<io.modelcontextprotocol.kotlin.sdk.Tool>

### io.modelcontextprotocol.kotlin.sdk.ListToolsResult.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.ListToolsResult.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.ListToolsResult.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.ListToolsResult
  fun    fun io.modelcontextprotocol.kotlin.sdk.ListToolsResult.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.ListToolsResult): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.ListToolsResult.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.ListToolsResult.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.ListToolsResult.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.ListToolsResult>

### io.modelcontextprotocol.kotlin.sdk.LoggingLevel
  ctor  fun `<init>`(): io.modelcontextprotocol.kotlin.sdk.LoggingLevel
  static fun valueOf(kotlin.String): io.modelcontextprotocol.kotlin.sdk.LoggingLevel
  static fun values(): kotlin.Array<io.modelcontextprotocol.kotlin.sdk.LoggingLevel>
  fun    fun valueOf(kotlin.String): io.modelcontextprotocol.kotlin.sdk.LoggingLevel
  fun    fun values(): kotlin.Array<io.modelcontextprotocol.kotlin.sdk.LoggingLevel>

### io.modelcontextprotocol.kotlin.sdk.LoggingLevel.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.LoggingLevel.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.LoggingLevel>

### io.modelcontextprotocol.kotlin.sdk.LoggingMessageNotification
  ctor  fun `<init>`(kotlin.Int, io.modelcontextprotocol.kotlin.sdk.LoggingMessageNotification.Params?, io.modelcontextprotocol.kotlin.sdk.Method?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.LoggingMessageNotification
  ctor  fun `<init>`(io.modelcontextprotocol.kotlin.sdk.LoggingMessageNotification.Params): io.modelcontextprotocol.kotlin.sdk.LoggingMessageNotification
  fun    fun io.modelcontextprotocol.kotlin.sdk.LoggingMessageNotification.component1(): io.modelcontextprotocol.kotlin.sdk.LoggingMessageNotification.Params
  fun    fun io.modelcontextprotocol.kotlin.sdk.LoggingMessageNotification.copy(io.modelcontextprotocol.kotlin.sdk.LoggingMessageNotification.Params): io.modelcontextprotocol.kotlin.sdk.LoggingMessageNotification
  fun    fun io.modelcontextprotocol.kotlin.sdk.LoggingMessageNotification.equals(kotlin.Any?): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.LoggingMessageNotification.hashCode(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.LoggingMessageNotification.toString(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.LoggingMessageNotification.`write$Self`(io.modelcontextprotocol.kotlin.sdk.LoggingMessageNotification, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.LoggingMessageNotification.method: io.modelcontextprotocol.kotlin.sdk.Method
  val/var val io.modelcontextprotocol.kotlin.sdk.LoggingMessageNotification.params: io.modelcontextprotocol.kotlin.sdk.LoggingMessageNotification.Params

### io.modelcontextprotocol.kotlin.sdk.LoggingMessageNotification.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.LoggingMessageNotification.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.LoggingMessageNotification.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.LoggingMessageNotification
  fun    fun io.modelcontextprotocol.kotlin.sdk.LoggingMessageNotification.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.LoggingMessageNotification): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.LoggingMessageNotification.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.LoggingMessageNotification.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.LoggingMessageNotification.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.LoggingMessageNotification>

### io.modelcontextprotocol.kotlin.sdk.LoggingMessageNotification.Params
  ctor  fun `<init>`(kotlin.Int, io.modelcontextprotocol.kotlin.sdk.LoggingLevel?, kotlin.String?, kotlinx.serialization.json.JsonElement?, kotlinx.serialization.json.JsonObject?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.LoggingMessageNotification.Params
  ctor  fun `<init>`(io.modelcontextprotocol.kotlin.sdk.LoggingLevel, kotlin.String?, kotlinx.serialization.json.JsonElement, kotlinx.serialization.json.JsonObject): io.modelcontextprotocol.kotlin.sdk.LoggingMessageNotification.Params
  fun    fun io.modelcontextprotocol.kotlin.sdk.LoggingMessageNotification.Params.component1(): io.modelcontextprotocol.kotlin.sdk.LoggingLevel
  fun    fun io.modelcontextprotocol.kotlin.sdk.LoggingMessageNotification.Params.component2(): kotlin.String?
  fun    fun io.modelcontextprotocol.kotlin.sdk.LoggingMessageNotification.Params.component3(): kotlinx.serialization.json.JsonElement
  fun    fun io.modelcontextprotocol.kotlin.sdk.LoggingMessageNotification.Params.component4(): kotlinx.serialization.json.JsonObject
  fun    fun io.modelcontextprotocol.kotlin.sdk.LoggingMessageNotification.Params.copy(io.modelcontextprotocol.kotlin.sdk.LoggingLevel, kotlin.String?, kotlinx.serialization.json.JsonElement, kotlinx.serialization.json.JsonObject): io.modelcontextprotocol.kotlin.sdk.LoggingMessageNotification.Params
  fun    fun io.modelcontextprotocol.kotlin.sdk.LoggingMessageNotification.Params.equals(kotlin.Any?): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.LoggingMessageNotification.Params.hashCode(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.LoggingMessageNotification.Params.toString(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.LoggingMessageNotification.Params.`write$Self`(io.modelcontextprotocol.kotlin.sdk.LoggingMessageNotification.Params, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.LoggingMessageNotification.Params._meta: kotlinx.serialization.json.JsonObject
  val/var val io.modelcontextprotocol.kotlin.sdk.LoggingMessageNotification.Params.data: kotlinx.serialization.json.JsonElement
  val/var val io.modelcontextprotocol.kotlin.sdk.LoggingMessageNotification.Params.level: io.modelcontextprotocol.kotlin.sdk.LoggingLevel
  val/var val io.modelcontextprotocol.kotlin.sdk.LoggingMessageNotification.Params.logger: kotlin.String?

### io.modelcontextprotocol.kotlin.sdk.LoggingMessageNotification.Params.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.LoggingMessageNotification.Params.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.LoggingMessageNotification.Params.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.LoggingMessageNotification.Params
  fun    fun io.modelcontextprotocol.kotlin.sdk.LoggingMessageNotification.Params.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.LoggingMessageNotification.Params): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.LoggingMessageNotification.Params.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.LoggingMessageNotification.Params.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.LoggingMessageNotification.Params.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.LoggingMessageNotification.Params>

### io.modelcontextprotocol.kotlin.sdk.LoggingMessageNotification.SetLevelRequest
  ctor  fun `<init>`(kotlin.Int, io.modelcontextprotocol.kotlin.sdk.LoggingLevel?, kotlinx.serialization.json.JsonObject?, io.modelcontextprotocol.kotlin.sdk.Method?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.LoggingMessageNotification.SetLevelRequest
  ctor  fun `<init>`(io.modelcontextprotocol.kotlin.sdk.LoggingLevel, kotlinx.serialization.json.JsonObject): io.modelcontextprotocol.kotlin.sdk.LoggingMessageNotification.SetLevelRequest
  fun    fun io.modelcontextprotocol.kotlin.sdk.LoggingMessageNotification.SetLevelRequest.component1(): io.modelcontextprotocol.kotlin.sdk.LoggingLevel
  fun    fun io.modelcontextprotocol.kotlin.sdk.LoggingMessageNotification.SetLevelRequest.component2(): kotlinx.serialization.json.JsonObject
  fun    fun io.modelcontextprotocol.kotlin.sdk.LoggingMessageNotification.SetLevelRequest.copy(io.modelcontextprotocol.kotlin.sdk.LoggingLevel, kotlinx.serialization.json.JsonObject): io.modelcontextprotocol.kotlin.sdk.LoggingMessageNotification.SetLevelRequest
  fun    fun io.modelcontextprotocol.kotlin.sdk.LoggingMessageNotification.SetLevelRequest.equals(kotlin.Any?): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.LoggingMessageNotification.SetLevelRequest.hashCode(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.LoggingMessageNotification.SetLevelRequest.toString(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.LoggingMessageNotification.SetLevelRequest.`write$Self`(io.modelcontextprotocol.kotlin.sdk.LoggingMessageNotification.SetLevelRequest, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.LoggingMessageNotification.SetLevelRequest._meta: kotlinx.serialization.json.JsonObject
  val/var val io.modelcontextprotocol.kotlin.sdk.LoggingMessageNotification.SetLevelRequest.level: io.modelcontextprotocol.kotlin.sdk.LoggingLevel
  val/var val io.modelcontextprotocol.kotlin.sdk.LoggingMessageNotification.SetLevelRequest.method: io.modelcontextprotocol.kotlin.sdk.Method

### io.modelcontextprotocol.kotlin.sdk.LoggingMessageNotification.SetLevelRequest.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.LoggingMessageNotification.SetLevelRequest.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.LoggingMessageNotification.SetLevelRequest.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.LoggingMessageNotification.SetLevelRequest
  fun    fun io.modelcontextprotocol.kotlin.sdk.LoggingMessageNotification.SetLevelRequest.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.LoggingMessageNotification.SetLevelRequest): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.LoggingMessageNotification.SetLevelRequest.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.LoggingMessageNotification.SetLevelRequest.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.LoggingMessageNotification.SetLevelRequest.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.LoggingMessageNotification.SetLevelRequest>

### io.modelcontextprotocol.kotlin.sdk.McpError
  ctor  fun `<init>`(kotlin.Int, kotlin.String, kotlinx.serialization.json.JsonObject): io.modelcontextprotocol.kotlin.sdk.McpError
  val/var val io.modelcontextprotocol.kotlin.sdk.McpError.code: kotlin.Int
  val/var val io.modelcontextprotocol.kotlin.sdk.McpError.data: kotlinx.serialization.json.JsonObject
  val/var val io.modelcontextprotocol.kotlin.sdk.McpError.message: kotlin.String

### io.modelcontextprotocol.kotlin.sdk.Method
  val/var val io.modelcontextprotocol.kotlin.sdk.Method.value: kotlin.String

### io.modelcontextprotocol.kotlin.sdk.Method.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.Method.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.Method>

### io.modelcontextprotocol.kotlin.sdk.Method.Custom
  ctor  fun `<init>`(kotlin.Int, kotlin.String?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.Method.Custom
  ctor  fun `<init>`(kotlin.String): io.modelcontextprotocol.kotlin.sdk.Method.Custom
  fun    fun io.modelcontextprotocol.kotlin.sdk.Method.Custom.component1(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.Method.Custom.copy(kotlin.String): io.modelcontextprotocol.kotlin.sdk.Method.Custom
  fun    fun io.modelcontextprotocol.kotlin.sdk.Method.Custom.equals(kotlin.Any?): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.Method.Custom.hashCode(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.Method.Custom.toString(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.Method.Custom.`write$Self`(io.modelcontextprotocol.kotlin.sdk.Method.Custom, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.Method.Custom.value: kotlin.String

### io.modelcontextprotocol.kotlin.sdk.Method.Custom.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.Method.Custom.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.Method.Custom.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.Method.Custom
  fun    fun io.modelcontextprotocol.kotlin.sdk.Method.Custom.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.Method.Custom): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.Method.Custom.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.Method.Custom.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.Method.Custom.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.Method.Custom>

### io.modelcontextprotocol.kotlin.sdk.Method.Defined
  ctor  fun `<init>`(kotlin.String): io.modelcontextprotocol.kotlin.sdk.Method.Defined
  static fun valueOf(kotlin.String): io.modelcontextprotocol.kotlin.sdk.Method.Defined
  static fun values(): kotlin.Array<io.modelcontextprotocol.kotlin.sdk.Method.Defined>
  fun    fun valueOf(kotlin.String): io.modelcontextprotocol.kotlin.sdk.Method.Defined
  fun    fun values(): kotlin.Array<io.modelcontextprotocol.kotlin.sdk.Method.Defined>
  val/var val io.modelcontextprotocol.kotlin.sdk.Method.Defined.value: kotlin.String

### io.modelcontextprotocol.kotlin.sdk.Method.Defined.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.Method.Defined.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.Method.Defined>

### io.modelcontextprotocol.kotlin.sdk.ModelHint
  ctor  fun `<init>`(kotlin.Int, kotlin.String?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.ModelHint
  ctor  fun `<init>`(kotlin.String?): io.modelcontextprotocol.kotlin.sdk.ModelHint
  fun    fun io.modelcontextprotocol.kotlin.sdk.ModelHint.component1(): kotlin.String?
  fun    fun io.modelcontextprotocol.kotlin.sdk.ModelHint.copy(kotlin.String?): io.modelcontextprotocol.kotlin.sdk.ModelHint
  fun    fun io.modelcontextprotocol.kotlin.sdk.ModelHint.equals(kotlin.Any?): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.ModelHint.hashCode(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.ModelHint.toString(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.ModelHint.`write$Self`(io.modelcontextprotocol.kotlin.sdk.ModelHint, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.ModelHint.name: kotlin.String?

### io.modelcontextprotocol.kotlin.sdk.ModelHint.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.ModelHint.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.ModelHint.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.ModelHint
  fun    fun io.modelcontextprotocol.kotlin.sdk.ModelHint.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.ModelHint): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.ModelHint.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.ModelHint.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.ModelHint.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.ModelHint>

### io.modelcontextprotocol.kotlin.sdk.ModelPreferences
  ctor  fun `<init>`(kotlin.Int, kotlin.collections.List<io.modelcontextprotocol.kotlin.sdk.ModelHint>?, kotlin.Double?, kotlin.Double?, kotlin.Double?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.ModelPreferences
  ctor  fun `<init>`(kotlin.collections.List<io.modelcontextprotocol.kotlin.sdk.ModelHint>?, kotlin.Double?, kotlin.Double?, kotlin.Double?): io.modelcontextprotocol.kotlin.sdk.ModelPreferences
  fun    fun io.modelcontextprotocol.kotlin.sdk.ModelPreferences.`write$Self`(io.modelcontextprotocol.kotlin.sdk.ModelPreferences, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.ModelPreferences.costPriority: kotlin.Double?
  val/var val io.modelcontextprotocol.kotlin.sdk.ModelPreferences.hints: kotlin.collections.List<io.modelcontextprotocol.kotlin.sdk.ModelHint>?
  val/var val io.modelcontextprotocol.kotlin.sdk.ModelPreferences.intelligencePriority: kotlin.Double?
  val/var val io.modelcontextprotocol.kotlin.sdk.ModelPreferences.speedPriority: kotlin.Double?

### io.modelcontextprotocol.kotlin.sdk.ModelPreferences.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.ModelPreferences.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.ModelPreferences.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.ModelPreferences
  fun    fun io.modelcontextprotocol.kotlin.sdk.ModelPreferences.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.ModelPreferences): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.ModelPreferences.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.ModelPreferences.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.ModelPreferences.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.ModelPreferences>

### io.modelcontextprotocol.kotlin.sdk.Notification
  val/var val io.modelcontextprotocol.kotlin.sdk.Notification.method: io.modelcontextprotocol.kotlin.sdk.Method
  val/var val io.modelcontextprotocol.kotlin.sdk.Notification.params: io.modelcontextprotocol.kotlin.sdk.NotificationParams?

### io.modelcontextprotocol.kotlin.sdk.Notification.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.Notification.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.Notification>

### io.modelcontextprotocol.kotlin.sdk.NotificationParams

### io.modelcontextprotocol.kotlin.sdk.NotificationParams.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.NotificationParams.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.NotificationParams>

### io.modelcontextprotocol.kotlin.sdk.NotificationPolymorphicSerializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.NotificationPolymorphicSerializer.selectDeserializer(kotlinx.serialization.json.JsonElement): kotlinx.serialization.DeserializationStrategy<io.modelcontextprotocol.kotlin.sdk.Notification>

### io.modelcontextprotocol.kotlin.sdk.PaginatedRequest
  val/var val io.modelcontextprotocol.kotlin.sdk.PaginatedRequest._meta: kotlinx.serialization.json.JsonObject
  val/var val io.modelcontextprotocol.kotlin.sdk.PaginatedRequest.cursor: io.modelcontextprotocol.kotlin.sdk.Cursor? /* = kotlin.String? */

### io.modelcontextprotocol.kotlin.sdk.PaginatedRequest.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.PaginatedRequest.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.PaginatedRequest>

### io.modelcontextprotocol.kotlin.sdk.PaginatedResult
  val/var val io.modelcontextprotocol.kotlin.sdk.PaginatedResult.nextCursor: io.modelcontextprotocol.kotlin.sdk.Cursor? /* = kotlin.String? */

### io.modelcontextprotocol.kotlin.sdk.PaginatedResult.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.PaginatedResult.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.PaginatedResult>

### io.modelcontextprotocol.kotlin.sdk.PingRequest
  ctor  fun `<init>`(kotlin.Int, io.modelcontextprotocol.kotlin.sdk.Method?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.PingRequest
  ctor  fun `<init>`(): io.modelcontextprotocol.kotlin.sdk.PingRequest
  fun    fun io.modelcontextprotocol.kotlin.sdk.PingRequest.`write$Self`(io.modelcontextprotocol.kotlin.sdk.PingRequest, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.PingRequest.method: io.modelcontextprotocol.kotlin.sdk.Method

### io.modelcontextprotocol.kotlin.sdk.PingRequest.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.PingRequest.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.PingRequest.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.PingRequest
  fun    fun io.modelcontextprotocol.kotlin.sdk.PingRequest.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.PingRequest): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.PingRequest.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.PingRequest.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.PingRequest.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.PingRequest>

### io.modelcontextprotocol.kotlin.sdk.Progress
  ctor  fun `<init>`(kotlin.Int, kotlin.Double, kotlin.Double?, kotlin.String?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.Progress
  ctor  fun `<init>`(kotlin.Double, kotlin.Double?, kotlin.String?): io.modelcontextprotocol.kotlin.sdk.Progress
  fun    fun io.modelcontextprotocol.kotlin.sdk.Progress.`write$Self`(io.modelcontextprotocol.kotlin.sdk.Progress, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.Progress.message: kotlin.String?
  val/var val io.modelcontextprotocol.kotlin.sdk.Progress.progress: kotlin.Double
  val/var val io.modelcontextprotocol.kotlin.sdk.Progress.total: kotlin.Double?

### io.modelcontextprotocol.kotlin.sdk.Progress.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.Progress.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.Progress.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.Progress
  fun    fun io.modelcontextprotocol.kotlin.sdk.Progress.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.Progress): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.Progress.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.Progress.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.Progress.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.Progress>

### io.modelcontextprotocol.kotlin.sdk.ProgressBase
  val/var val io.modelcontextprotocol.kotlin.sdk.ProgressBase.message: kotlin.String?
  val/var val io.modelcontextprotocol.kotlin.sdk.ProgressBase.progress: kotlin.Double
  val/var val io.modelcontextprotocol.kotlin.sdk.ProgressBase.total: kotlin.Double?

### io.modelcontextprotocol.kotlin.sdk.ProgressBase.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.ProgressBase.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.ProgressBase>

### io.modelcontextprotocol.kotlin.sdk.ProgressNotification
  ctor  fun `<init>`(kotlin.Int, io.modelcontextprotocol.kotlin.sdk.ProgressNotification.Params?, io.modelcontextprotocol.kotlin.sdk.Method?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.ProgressNotification
  ctor  fun `<init>`(io.modelcontextprotocol.kotlin.sdk.ProgressNotification.Params): io.modelcontextprotocol.kotlin.sdk.ProgressNotification
  fun    fun io.modelcontextprotocol.kotlin.sdk.ProgressNotification.component1(): io.modelcontextprotocol.kotlin.sdk.ProgressNotification.Params
  fun    fun io.modelcontextprotocol.kotlin.sdk.ProgressNotification.copy(io.modelcontextprotocol.kotlin.sdk.ProgressNotification.Params): io.modelcontextprotocol.kotlin.sdk.ProgressNotification
  fun    fun io.modelcontextprotocol.kotlin.sdk.ProgressNotification.equals(kotlin.Any?): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.ProgressNotification.hashCode(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.ProgressNotification.toString(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.ProgressNotification.`write$Self`(io.modelcontextprotocol.kotlin.sdk.ProgressNotification, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.ProgressNotification.method: io.modelcontextprotocol.kotlin.sdk.Method
  val/var val io.modelcontextprotocol.kotlin.sdk.ProgressNotification.params: io.modelcontextprotocol.kotlin.sdk.ProgressNotification.Params

### io.modelcontextprotocol.kotlin.sdk.ProgressNotification.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.ProgressNotification.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.ProgressNotification.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.ProgressNotification
  fun    fun io.modelcontextprotocol.kotlin.sdk.ProgressNotification.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.ProgressNotification): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.ProgressNotification.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.ProgressNotification.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.ProgressNotification.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.ProgressNotification>

### io.modelcontextprotocol.kotlin.sdk.ProgressNotification.Params
  ctor  fun `<init>`(kotlin.Int, kotlin.Double, io.modelcontextprotocol.kotlin.sdk.RequestId?, kotlin.Double?, kotlin.String?, kotlinx.serialization.json.JsonObject?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.ProgressNotification.Params
  ctor  fun `<init>`(kotlin.Double, io.modelcontextprotocol.kotlin.sdk.ProgressToken /* = io.modelcontextprotocol.kotlin.sdk.RequestId */, kotlin.Double?, kotlin.String?, kotlinx.serialization.json.JsonObject): io.modelcontextprotocol.kotlin.sdk.ProgressNotification.Params
  fun    fun io.modelcontextprotocol.kotlin.sdk.ProgressNotification.Params.component1(): kotlin.Double
  fun    fun io.modelcontextprotocol.kotlin.sdk.ProgressNotification.Params.component2(): io.modelcontextprotocol.kotlin.sdk.ProgressToken /* = io.modelcontextprotocol.kotlin.sdk.RequestId */
  fun    fun io.modelcontextprotocol.kotlin.sdk.ProgressNotification.Params.component3(): kotlin.Double?
  fun    fun io.modelcontextprotocol.kotlin.sdk.ProgressNotification.Params.component4(): kotlin.String?
  fun    fun io.modelcontextprotocol.kotlin.sdk.ProgressNotification.Params.component5(): kotlinx.serialization.json.JsonObject
  fun    fun io.modelcontextprotocol.kotlin.sdk.ProgressNotification.Params.copy(kotlin.Double, io.modelcontextprotocol.kotlin.sdk.ProgressToken /* = io.modelcontextprotocol.kotlin.sdk.RequestId */, kotlin.Double?, kotlin.String?, kotlinx.serialization.json.JsonObject): io.modelcontextprotocol.kotlin.sdk.ProgressNotification.Params
  fun    fun io.modelcontextprotocol.kotlin.sdk.ProgressNotification.Params.equals(kotlin.Any?): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.ProgressNotification.Params.hashCode(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.ProgressNotification.Params.toString(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.ProgressNotification.Params.`write$Self`(io.modelcontextprotocol.kotlin.sdk.ProgressNotification.Params, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.ProgressNotification.Params._meta: kotlinx.serialization.json.JsonObject
  val/var val io.modelcontextprotocol.kotlin.sdk.ProgressNotification.Params.message: kotlin.String?
  val/var val io.modelcontextprotocol.kotlin.sdk.ProgressNotification.Params.progress: kotlin.Double
  val/var val io.modelcontextprotocol.kotlin.sdk.ProgressNotification.Params.progressToken: io.modelcontextprotocol.kotlin.sdk.ProgressToken /* = io.modelcontextprotocol.kotlin.sdk.RequestId */
  val/var val io.modelcontextprotocol.kotlin.sdk.ProgressNotification.Params.total: kotlin.Double?

### io.modelcontextprotocol.kotlin.sdk.ProgressNotification.Params.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.ProgressNotification.Params.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.ProgressNotification.Params.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.ProgressNotification.Params
  fun    fun io.modelcontextprotocol.kotlin.sdk.ProgressNotification.Params.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.ProgressNotification.Params): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.ProgressNotification.Params.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.ProgressNotification.Params.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.ProgressNotification.Params.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.ProgressNotification.Params>

### io.modelcontextprotocol.kotlin.sdk.Prompt
  ctor  fun `<init>`(kotlin.Int, kotlin.String?, kotlin.String?, kotlin.collections.List<io.modelcontextprotocol.kotlin.sdk.PromptArgument>?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.Prompt
  ctor  fun `<init>`(kotlin.String, kotlin.String?, kotlin.collections.List<io.modelcontextprotocol.kotlin.sdk.PromptArgument>?): io.modelcontextprotocol.kotlin.sdk.Prompt
  fun    fun io.modelcontextprotocol.kotlin.sdk.Prompt.`write$Self`(io.modelcontextprotocol.kotlin.sdk.Prompt, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.Prompt.arguments: kotlin.collections.List<io.modelcontextprotocol.kotlin.sdk.PromptArgument>?
  val/var val io.modelcontextprotocol.kotlin.sdk.Prompt.description: kotlin.String?
  val/var val io.modelcontextprotocol.kotlin.sdk.Prompt.name: kotlin.String

### io.modelcontextprotocol.kotlin.sdk.Prompt.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.Prompt.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.Prompt.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.Prompt
  fun    fun io.modelcontextprotocol.kotlin.sdk.Prompt.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.Prompt): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.Prompt.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.Prompt.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.Prompt.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.Prompt>

### io.modelcontextprotocol.kotlin.sdk.PromptArgument
  ctor  fun `<init>`(kotlin.Int, kotlin.String?, kotlin.String?, kotlin.Boolean?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.PromptArgument
  ctor  fun `<init>`(kotlin.String, kotlin.String?, kotlin.Boolean?): io.modelcontextprotocol.kotlin.sdk.PromptArgument
  fun    fun io.modelcontextprotocol.kotlin.sdk.PromptArgument.component1(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.PromptArgument.component2(): kotlin.String?
  fun    fun io.modelcontextprotocol.kotlin.sdk.PromptArgument.component3(): kotlin.Boolean?
  fun    fun io.modelcontextprotocol.kotlin.sdk.PromptArgument.copy(kotlin.String, kotlin.String?, kotlin.Boolean?): io.modelcontextprotocol.kotlin.sdk.PromptArgument
  fun    fun io.modelcontextprotocol.kotlin.sdk.PromptArgument.equals(kotlin.Any?): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.PromptArgument.hashCode(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.PromptArgument.toString(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.PromptArgument.`write$Self`(io.modelcontextprotocol.kotlin.sdk.PromptArgument, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.PromptArgument.description: kotlin.String?
  val/var val io.modelcontextprotocol.kotlin.sdk.PromptArgument.name: kotlin.String
  val/var val io.modelcontextprotocol.kotlin.sdk.PromptArgument.required: kotlin.Boolean?

### io.modelcontextprotocol.kotlin.sdk.PromptArgument.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.PromptArgument.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.PromptArgument.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.PromptArgument
  fun    fun io.modelcontextprotocol.kotlin.sdk.PromptArgument.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.PromptArgument): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.PromptArgument.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.PromptArgument.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.PromptArgument.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.PromptArgument>

### io.modelcontextprotocol.kotlin.sdk.PromptListChangedNotification
  ctor  fun `<init>`(kotlin.Int, io.modelcontextprotocol.kotlin.sdk.PromptListChangedNotification.Params?, io.modelcontextprotocol.kotlin.sdk.Method?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.PromptListChangedNotification
  ctor  fun `<init>`(io.modelcontextprotocol.kotlin.sdk.PromptListChangedNotification.Params): io.modelcontextprotocol.kotlin.sdk.PromptListChangedNotification
  fun    fun io.modelcontextprotocol.kotlin.sdk.PromptListChangedNotification.component1(): io.modelcontextprotocol.kotlin.sdk.PromptListChangedNotification.Params
  fun    fun io.modelcontextprotocol.kotlin.sdk.PromptListChangedNotification.copy(io.modelcontextprotocol.kotlin.sdk.PromptListChangedNotification.Params): io.modelcontextprotocol.kotlin.sdk.PromptListChangedNotification
  fun    fun io.modelcontextprotocol.kotlin.sdk.PromptListChangedNotification.equals(kotlin.Any?): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.PromptListChangedNotification.hashCode(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.PromptListChangedNotification.toString(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.PromptListChangedNotification.`write$Self`(io.modelcontextprotocol.kotlin.sdk.PromptListChangedNotification, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.PromptListChangedNotification.method: io.modelcontextprotocol.kotlin.sdk.Method
  val/var val io.modelcontextprotocol.kotlin.sdk.PromptListChangedNotification.params: io.modelcontextprotocol.kotlin.sdk.PromptListChangedNotification.Params

### io.modelcontextprotocol.kotlin.sdk.PromptListChangedNotification.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.PromptListChangedNotification.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.PromptListChangedNotification.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.PromptListChangedNotification
  fun    fun io.modelcontextprotocol.kotlin.sdk.PromptListChangedNotification.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.PromptListChangedNotification): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.PromptListChangedNotification.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.PromptListChangedNotification.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.PromptListChangedNotification.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.PromptListChangedNotification>

### io.modelcontextprotocol.kotlin.sdk.PromptListChangedNotification.Params
  ctor  fun `<init>`(kotlin.Int, kotlinx.serialization.json.JsonObject?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.PromptListChangedNotification.Params
  ctor  fun `<init>`(kotlinx.serialization.json.JsonObject): io.modelcontextprotocol.kotlin.sdk.PromptListChangedNotification.Params
  fun    fun io.modelcontextprotocol.kotlin.sdk.PromptListChangedNotification.Params.component1(): kotlinx.serialization.json.JsonObject
  fun    fun io.modelcontextprotocol.kotlin.sdk.PromptListChangedNotification.Params.copy(kotlinx.serialization.json.JsonObject): io.modelcontextprotocol.kotlin.sdk.PromptListChangedNotification.Params
  fun    fun io.modelcontextprotocol.kotlin.sdk.PromptListChangedNotification.Params.equals(kotlin.Any?): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.PromptListChangedNotification.Params.hashCode(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.PromptListChangedNotification.Params.toString(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.PromptListChangedNotification.Params.`write$Self`(io.modelcontextprotocol.kotlin.sdk.PromptListChangedNotification.Params, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.PromptListChangedNotification.Params._meta: kotlinx.serialization.json.JsonObject

### io.modelcontextprotocol.kotlin.sdk.PromptListChangedNotification.Params.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.PromptListChangedNotification.Params.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.PromptListChangedNotification.Params.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.PromptListChangedNotification.Params
  fun    fun io.modelcontextprotocol.kotlin.sdk.PromptListChangedNotification.Params.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.PromptListChangedNotification.Params): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.PromptListChangedNotification.Params.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.PromptListChangedNotification.Params.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.PromptListChangedNotification.Params.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.PromptListChangedNotification.Params>

### io.modelcontextprotocol.kotlin.sdk.PromptMessage
  ctor  fun `<init>`(kotlin.Int, io.modelcontextprotocol.kotlin.sdk.Role?, io.modelcontextprotocol.kotlin.sdk.PromptMessageContent?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.PromptMessage
  ctor  fun `<init>`(io.modelcontextprotocol.kotlin.sdk.Role, io.modelcontextprotocol.kotlin.sdk.PromptMessageContent): io.modelcontextprotocol.kotlin.sdk.PromptMessage
  fun    fun io.modelcontextprotocol.kotlin.sdk.PromptMessage.component1(): io.modelcontextprotocol.kotlin.sdk.Role
  fun    fun io.modelcontextprotocol.kotlin.sdk.PromptMessage.component2(): io.modelcontextprotocol.kotlin.sdk.PromptMessageContent
  fun    fun io.modelcontextprotocol.kotlin.sdk.PromptMessage.copy(io.modelcontextprotocol.kotlin.sdk.Role, io.modelcontextprotocol.kotlin.sdk.PromptMessageContent): io.modelcontextprotocol.kotlin.sdk.PromptMessage
  fun    fun io.modelcontextprotocol.kotlin.sdk.PromptMessage.equals(kotlin.Any?): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.PromptMessage.hashCode(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.PromptMessage.toString(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.PromptMessage.`write$Self`(io.modelcontextprotocol.kotlin.sdk.PromptMessage, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.PromptMessage.content: io.modelcontextprotocol.kotlin.sdk.PromptMessageContent
  val/var val io.modelcontextprotocol.kotlin.sdk.PromptMessage.role: io.modelcontextprotocol.kotlin.sdk.Role

### io.modelcontextprotocol.kotlin.sdk.PromptMessage.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.PromptMessage.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.PromptMessage.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.PromptMessage
  fun    fun io.modelcontextprotocol.kotlin.sdk.PromptMessage.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.PromptMessage): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.PromptMessage.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.PromptMessage.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.PromptMessage.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.PromptMessage>

### io.modelcontextprotocol.kotlin.sdk.PromptMessageContent
  val/var val io.modelcontextprotocol.kotlin.sdk.PromptMessageContent.type: kotlin.String

### io.modelcontextprotocol.kotlin.sdk.PromptMessageContent.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.PromptMessageContent.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.PromptMessageContent>

### io.modelcontextprotocol.kotlin.sdk.PromptMessageContentMultimodal

### io.modelcontextprotocol.kotlin.sdk.PromptMessageContentMultimodal.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.PromptMessageContentMultimodal.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.PromptMessageContentMultimodal>

### io.modelcontextprotocol.kotlin.sdk.PromptMessageContentMultimodalPolymorphicSerializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.PromptMessageContentMultimodalPolymorphicSerializer.selectDeserializer(kotlinx.serialization.json.JsonElement): kotlinx.serialization.DeserializationStrategy<io.modelcontextprotocol.kotlin.sdk.PromptMessageContentMultimodal>

### io.modelcontextprotocol.kotlin.sdk.PromptMessageContentPolymorphicSerializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.PromptMessageContentPolymorphicSerializer.selectDeserializer(kotlinx.serialization.json.JsonElement): kotlinx.serialization.DeserializationStrategy<io.modelcontextprotocol.kotlin.sdk.PromptMessageContent>

### io.modelcontextprotocol.kotlin.sdk.PromptReference
  ctor  fun `<init>`(kotlin.Int, kotlin.String?, kotlin.String?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.PromptReference
  ctor  fun `<init>`(kotlin.String): io.modelcontextprotocol.kotlin.sdk.PromptReference
  fun    fun io.modelcontextprotocol.kotlin.sdk.PromptReference.component1(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.PromptReference.copy(kotlin.String): io.modelcontextprotocol.kotlin.sdk.PromptReference
  fun    fun io.modelcontextprotocol.kotlin.sdk.PromptReference.equals(kotlin.Any?): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.PromptReference.hashCode(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.PromptReference.toString(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.PromptReference.`write$Self`(io.modelcontextprotocol.kotlin.sdk.PromptReference, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.PromptReference.name: kotlin.String
  val/var val io.modelcontextprotocol.kotlin.sdk.PromptReference.type: kotlin.String

### io.modelcontextprotocol.kotlin.sdk.PromptReference.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.PromptReference.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.PromptReference.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.PromptReference
  fun    fun io.modelcontextprotocol.kotlin.sdk.PromptReference.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.PromptReference): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.PromptReference.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.PromptReference.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.PromptReference.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.PromptReference>
  val/var val io.modelcontextprotocol.kotlin.sdk.PromptReference.Companion.TYPE: kotlin.String

### io.modelcontextprotocol.kotlin.sdk.ReadResourceRequest
  ctor  fun `<init>`(kotlin.Int, kotlin.String?, kotlinx.serialization.json.JsonObject?, io.modelcontextprotocol.kotlin.sdk.Method?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.ReadResourceRequest
  ctor  fun `<init>`(kotlin.String, kotlinx.serialization.json.JsonObject): io.modelcontextprotocol.kotlin.sdk.ReadResourceRequest
  fun    fun io.modelcontextprotocol.kotlin.sdk.ReadResourceRequest.component1(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.ReadResourceRequest.component2(): kotlinx.serialization.json.JsonObject
  fun    fun io.modelcontextprotocol.kotlin.sdk.ReadResourceRequest.copy(kotlin.String, kotlinx.serialization.json.JsonObject): io.modelcontextprotocol.kotlin.sdk.ReadResourceRequest
  fun    fun io.modelcontextprotocol.kotlin.sdk.ReadResourceRequest.equals(kotlin.Any?): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.ReadResourceRequest.hashCode(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.ReadResourceRequest.toString(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.ReadResourceRequest.`write$Self`(io.modelcontextprotocol.kotlin.sdk.ReadResourceRequest, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.ReadResourceRequest._meta: kotlinx.serialization.json.JsonObject
  val/var val io.modelcontextprotocol.kotlin.sdk.ReadResourceRequest.method: io.modelcontextprotocol.kotlin.sdk.Method
  val/var val io.modelcontextprotocol.kotlin.sdk.ReadResourceRequest.uri: kotlin.String

### io.modelcontextprotocol.kotlin.sdk.ReadResourceRequest.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.ReadResourceRequest.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.ReadResourceRequest.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.ReadResourceRequest
  fun    fun io.modelcontextprotocol.kotlin.sdk.ReadResourceRequest.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.ReadResourceRequest): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.ReadResourceRequest.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.ReadResourceRequest.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.ReadResourceRequest.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.ReadResourceRequest>

### io.modelcontextprotocol.kotlin.sdk.ReadResourceResult
  ctor  fun `<init>`(kotlin.Int, kotlin.collections.List<io.modelcontextprotocol.kotlin.sdk.ResourceContents>?, kotlinx.serialization.json.JsonObject?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.ReadResourceResult
  ctor  fun `<init>`(kotlin.collections.List<io.modelcontextprotocol.kotlin.sdk.ResourceContents>, kotlinx.serialization.json.JsonObject): io.modelcontextprotocol.kotlin.sdk.ReadResourceResult
  fun    fun io.modelcontextprotocol.kotlin.sdk.ReadResourceResult.`write$Self`(io.modelcontextprotocol.kotlin.sdk.ReadResourceResult, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.ReadResourceResult._meta: kotlinx.serialization.json.JsonObject
  val/var val io.modelcontextprotocol.kotlin.sdk.ReadResourceResult.contents: kotlin.collections.List<io.modelcontextprotocol.kotlin.sdk.ResourceContents>

### io.modelcontextprotocol.kotlin.sdk.ReadResourceResult.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.ReadResourceResult.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.ReadResourceResult.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.ReadResourceResult
  fun    fun io.modelcontextprotocol.kotlin.sdk.ReadResourceResult.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.ReadResourceResult): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.ReadResourceResult.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.ReadResourceResult.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.ReadResourceResult.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.ReadResourceResult>

### io.modelcontextprotocol.kotlin.sdk.Reference
  val/var val io.modelcontextprotocol.kotlin.sdk.Reference.type: kotlin.String

### io.modelcontextprotocol.kotlin.sdk.Reference.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.Reference.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.Reference>

### io.modelcontextprotocol.kotlin.sdk.ReferencePolymorphicSerializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.ReferencePolymorphicSerializer.selectDeserializer(kotlinx.serialization.json.JsonElement): kotlinx.serialization.DeserializationStrategy<io.modelcontextprotocol.kotlin.sdk.Reference>

### io.modelcontextprotocol.kotlin.sdk.Request
  val/var val io.modelcontextprotocol.kotlin.sdk.Request.method: io.modelcontextprotocol.kotlin.sdk.Method

### io.modelcontextprotocol.kotlin.sdk.Request.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.Request.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.Request>

### io.modelcontextprotocol.kotlin.sdk.RequestId

### io.modelcontextprotocol.kotlin.sdk.RequestId.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.RequestId.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.RequestId>

### io.modelcontextprotocol.kotlin.sdk.RequestId.NumberId
  ctor  fun `<init>`(kotlin.Int, kotlin.Long, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.RequestId.NumberId
  ctor  fun `<init>`(kotlin.Long): io.modelcontextprotocol.kotlin.sdk.RequestId.NumberId
  fun    fun io.modelcontextprotocol.kotlin.sdk.RequestId.NumberId.component1(): kotlin.Long
  fun    fun io.modelcontextprotocol.kotlin.sdk.RequestId.NumberId.copy(kotlin.Long): io.modelcontextprotocol.kotlin.sdk.RequestId.NumberId
  fun    fun io.modelcontextprotocol.kotlin.sdk.RequestId.NumberId.equals(kotlin.Any?): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.RequestId.NumberId.hashCode(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.RequestId.NumberId.toString(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.RequestId.NumberId.`write$Self`(io.modelcontextprotocol.kotlin.sdk.RequestId.NumberId, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.RequestId.NumberId.value: kotlin.Long

### io.modelcontextprotocol.kotlin.sdk.RequestId.NumberId.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.RequestId.NumberId.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.RequestId.NumberId.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.RequestId.NumberId
  fun    fun io.modelcontextprotocol.kotlin.sdk.RequestId.NumberId.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.RequestId.NumberId): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.RequestId.NumberId.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.RequestId.NumberId.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.RequestId.NumberId.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.RequestId.NumberId>

### io.modelcontextprotocol.kotlin.sdk.RequestId.StringId
  ctor  fun `<init>`(kotlin.Int, kotlin.String?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.RequestId.StringId
  ctor  fun `<init>`(kotlin.String): io.modelcontextprotocol.kotlin.sdk.RequestId.StringId
  fun    fun io.modelcontextprotocol.kotlin.sdk.RequestId.StringId.component1(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.RequestId.StringId.copy(kotlin.String): io.modelcontextprotocol.kotlin.sdk.RequestId.StringId
  fun    fun io.modelcontextprotocol.kotlin.sdk.RequestId.StringId.equals(kotlin.Any?): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.RequestId.StringId.hashCode(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.RequestId.StringId.toString(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.RequestId.StringId.`write$Self`(io.modelcontextprotocol.kotlin.sdk.RequestId.StringId, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.RequestId.StringId.value: kotlin.String

### io.modelcontextprotocol.kotlin.sdk.RequestId.StringId.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.RequestId.StringId.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.RequestId.StringId.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.RequestId.StringId
  fun    fun io.modelcontextprotocol.kotlin.sdk.RequestId.StringId.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.RequestId.StringId): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.RequestId.StringId.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.RequestId.StringId.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.RequestId.StringId.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.RequestId.StringId>

### io.modelcontextprotocol.kotlin.sdk.RequestIdSerializer
  ctor  fun `<init>`(): io.modelcontextprotocol.kotlin.sdk.RequestIdSerializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.RequestIdSerializer.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.RequestId
  fun    fun io.modelcontextprotocol.kotlin.sdk.RequestIdSerializer.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.RequestId): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.RequestIdSerializer.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.RequestMethodSerializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.RequestMethodSerializer.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.Method
  fun    fun io.modelcontextprotocol.kotlin.sdk.RequestMethodSerializer.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.Method): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.RequestMethodSerializer.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.RequestPolymorphicSerializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.RequestPolymorphicSerializer.selectDeserializer(kotlinx.serialization.json.JsonElement): kotlinx.serialization.DeserializationStrategy<io.modelcontextprotocol.kotlin.sdk.Request>

### io.modelcontextprotocol.kotlin.sdk.RequestResult

### io.modelcontextprotocol.kotlin.sdk.RequestResult.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.RequestResult.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.RequestResult>

### io.modelcontextprotocol.kotlin.sdk.RequestResultPolymorphicSerializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.RequestResultPolymorphicSerializer.selectDeserializer(kotlinx.serialization.json.JsonElement): kotlinx.serialization.DeserializationStrategy<io.modelcontextprotocol.kotlin.sdk.RequestResult>

### io.modelcontextprotocol.kotlin.sdk.Resource
  ctor  fun `<init>`(kotlin.Int, kotlin.String?, kotlin.String?, kotlin.String?, kotlin.String?, kotlin.String?, kotlin.Long?, io.modelcontextprotocol.kotlin.sdk.Annotations?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.Resource
  ctor  fun `<init>`(kotlin.String, kotlin.String, kotlin.String?, kotlin.String?, kotlin.String?, kotlin.Long?, io.modelcontextprotocol.kotlin.sdk.Annotations?): io.modelcontextprotocol.kotlin.sdk.Resource
  fun    fun io.modelcontextprotocol.kotlin.sdk.Resource.component1(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.Resource.component2(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.Resource.component3(): kotlin.String?
  fun    fun io.modelcontextprotocol.kotlin.sdk.Resource.component4(): kotlin.String?
  fun    fun io.modelcontextprotocol.kotlin.sdk.Resource.component5(): kotlin.String?
  fun    fun io.modelcontextprotocol.kotlin.sdk.Resource.component6(): kotlin.Long?
  fun    fun io.modelcontextprotocol.kotlin.sdk.Resource.component7(): io.modelcontextprotocol.kotlin.sdk.Annotations?
  fun    fun io.modelcontextprotocol.kotlin.sdk.Resource.copy(kotlin.String, kotlin.String, kotlin.String?, kotlin.String?, kotlin.String?, kotlin.Long?, io.modelcontextprotocol.kotlin.sdk.Annotations?): io.modelcontextprotocol.kotlin.sdk.Resource
  fun    fun io.modelcontextprotocol.kotlin.sdk.Resource.equals(kotlin.Any?): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.Resource.hashCode(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.Resource.toString(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.Resource.`write$Self`(io.modelcontextprotocol.kotlin.sdk.Resource, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.Resource.annotations: io.modelcontextprotocol.kotlin.sdk.Annotations?
  val/var val io.modelcontextprotocol.kotlin.sdk.Resource.description: kotlin.String?
  val/var val io.modelcontextprotocol.kotlin.sdk.Resource.mimeType: kotlin.String?
  val/var val io.modelcontextprotocol.kotlin.sdk.Resource.name: kotlin.String
  val/var val io.modelcontextprotocol.kotlin.sdk.Resource.size: kotlin.Long?
  val/var val io.modelcontextprotocol.kotlin.sdk.Resource.title: kotlin.String?
  val/var val io.modelcontextprotocol.kotlin.sdk.Resource.uri: kotlin.String

### io.modelcontextprotocol.kotlin.sdk.Resource.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.Resource.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.Resource.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.Resource
  fun    fun io.modelcontextprotocol.kotlin.sdk.Resource.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.Resource): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.Resource.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.Resource.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.Resource.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.Resource>

### io.modelcontextprotocol.kotlin.sdk.ResourceContents
  val/var val io.modelcontextprotocol.kotlin.sdk.ResourceContents.mimeType: kotlin.String?
  val/var val io.modelcontextprotocol.kotlin.sdk.ResourceContents.uri: kotlin.String

### io.modelcontextprotocol.kotlin.sdk.ResourceContents.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.ResourceContents.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.ResourceContents>

### io.modelcontextprotocol.kotlin.sdk.ResourceContentsPolymorphicSerializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.ResourceContentsPolymorphicSerializer.selectDeserializer(kotlinx.serialization.json.JsonElement): kotlinx.serialization.DeserializationStrategy<io.modelcontextprotocol.kotlin.sdk.ResourceContents>

### io.modelcontextprotocol.kotlin.sdk.ResourceListChangedNotification
  ctor  fun `<init>`(kotlin.Int, io.modelcontextprotocol.kotlin.sdk.ResourceListChangedNotification.Params?, io.modelcontextprotocol.kotlin.sdk.Method?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.ResourceListChangedNotification
  ctor  fun `<init>`(io.modelcontextprotocol.kotlin.sdk.ResourceListChangedNotification.Params): io.modelcontextprotocol.kotlin.sdk.ResourceListChangedNotification
  fun    fun io.modelcontextprotocol.kotlin.sdk.ResourceListChangedNotification.component1(): io.modelcontextprotocol.kotlin.sdk.ResourceListChangedNotification.Params
  fun    fun io.modelcontextprotocol.kotlin.sdk.ResourceListChangedNotification.copy(io.modelcontextprotocol.kotlin.sdk.ResourceListChangedNotification.Params): io.modelcontextprotocol.kotlin.sdk.ResourceListChangedNotification
  fun    fun io.modelcontextprotocol.kotlin.sdk.ResourceListChangedNotification.equals(kotlin.Any?): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.ResourceListChangedNotification.hashCode(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.ResourceListChangedNotification.toString(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.ResourceListChangedNotification.`write$Self`(io.modelcontextprotocol.kotlin.sdk.ResourceListChangedNotification, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.ResourceListChangedNotification.method: io.modelcontextprotocol.kotlin.sdk.Method
  val/var val io.modelcontextprotocol.kotlin.sdk.ResourceListChangedNotification.params: io.modelcontextprotocol.kotlin.sdk.ResourceListChangedNotification.Params

### io.modelcontextprotocol.kotlin.sdk.ResourceListChangedNotification.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.ResourceListChangedNotification.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.ResourceListChangedNotification.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.ResourceListChangedNotification
  fun    fun io.modelcontextprotocol.kotlin.sdk.ResourceListChangedNotification.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.ResourceListChangedNotification): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.ResourceListChangedNotification.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.ResourceListChangedNotification.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.ResourceListChangedNotification.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.ResourceListChangedNotification>

### io.modelcontextprotocol.kotlin.sdk.ResourceListChangedNotification.Params
  ctor  fun `<init>`(kotlin.Int, kotlinx.serialization.json.JsonObject?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.ResourceListChangedNotification.Params
  ctor  fun `<init>`(kotlinx.serialization.json.JsonObject): io.modelcontextprotocol.kotlin.sdk.ResourceListChangedNotification.Params
  fun    fun io.modelcontextprotocol.kotlin.sdk.ResourceListChangedNotification.Params.component1(): kotlinx.serialization.json.JsonObject
  fun    fun io.modelcontextprotocol.kotlin.sdk.ResourceListChangedNotification.Params.copy(kotlinx.serialization.json.JsonObject): io.modelcontextprotocol.kotlin.sdk.ResourceListChangedNotification.Params
  fun    fun io.modelcontextprotocol.kotlin.sdk.ResourceListChangedNotification.Params.equals(kotlin.Any?): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.ResourceListChangedNotification.Params.hashCode(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.ResourceListChangedNotification.Params.toString(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.ResourceListChangedNotification.Params.`write$Self`(io.modelcontextprotocol.kotlin.sdk.ResourceListChangedNotification.Params, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.ResourceListChangedNotification.Params._meta: kotlinx.serialization.json.JsonObject

### io.modelcontextprotocol.kotlin.sdk.ResourceListChangedNotification.Params.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.ResourceListChangedNotification.Params.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.ResourceListChangedNotification.Params.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.ResourceListChangedNotification.Params
  fun    fun io.modelcontextprotocol.kotlin.sdk.ResourceListChangedNotification.Params.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.ResourceListChangedNotification.Params): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.ResourceListChangedNotification.Params.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.ResourceListChangedNotification.Params.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.ResourceListChangedNotification.Params.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.ResourceListChangedNotification.Params>

### io.modelcontextprotocol.kotlin.sdk.ResourceTemplate
  ctor  fun `<init>`(kotlin.Int, kotlin.String?, kotlin.String?, kotlin.String?, kotlin.String?, kotlin.String?, io.modelcontextprotocol.kotlin.sdk.Annotations?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.ResourceTemplate
  ctor  fun `<init>`(kotlin.String, kotlin.String, kotlin.String?, kotlin.String?, kotlin.String?, io.modelcontextprotocol.kotlin.sdk.Annotations?): io.modelcontextprotocol.kotlin.sdk.ResourceTemplate
  fun    fun io.modelcontextprotocol.kotlin.sdk.ResourceTemplate.component1(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.ResourceTemplate.component2(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.ResourceTemplate.component3(): kotlin.String?
  fun    fun io.modelcontextprotocol.kotlin.sdk.ResourceTemplate.component4(): kotlin.String?
  fun    fun io.modelcontextprotocol.kotlin.sdk.ResourceTemplate.component5(): kotlin.String?
  fun    fun io.modelcontextprotocol.kotlin.sdk.ResourceTemplate.component6(): io.modelcontextprotocol.kotlin.sdk.Annotations?
  fun    fun io.modelcontextprotocol.kotlin.sdk.ResourceTemplate.copy(kotlin.String, kotlin.String, kotlin.String?, kotlin.String?, kotlin.String?, io.modelcontextprotocol.kotlin.sdk.Annotations?): io.modelcontextprotocol.kotlin.sdk.ResourceTemplate
  fun    fun io.modelcontextprotocol.kotlin.sdk.ResourceTemplate.equals(kotlin.Any?): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.ResourceTemplate.hashCode(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.ResourceTemplate.toString(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.ResourceTemplate.`write$Self`(io.modelcontextprotocol.kotlin.sdk.ResourceTemplate, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.ResourceTemplate.annotations: io.modelcontextprotocol.kotlin.sdk.Annotations?
  val/var val io.modelcontextprotocol.kotlin.sdk.ResourceTemplate.description: kotlin.String?
  val/var val io.modelcontextprotocol.kotlin.sdk.ResourceTemplate.mimeType: kotlin.String?
  val/var val io.modelcontextprotocol.kotlin.sdk.ResourceTemplate.name: kotlin.String
  val/var val io.modelcontextprotocol.kotlin.sdk.ResourceTemplate.title: kotlin.String?
  val/var val io.modelcontextprotocol.kotlin.sdk.ResourceTemplate.uriTemplate: kotlin.String

### io.modelcontextprotocol.kotlin.sdk.ResourceTemplate.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.ResourceTemplate.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.ResourceTemplate.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.ResourceTemplate
  fun    fun io.modelcontextprotocol.kotlin.sdk.ResourceTemplate.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.ResourceTemplate): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.ResourceTemplate.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.ResourceTemplate.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.ResourceTemplate.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.ResourceTemplate>

### io.modelcontextprotocol.kotlin.sdk.ResourceTemplateReference
  ctor  fun `<init>`(kotlin.Int, kotlin.String?, kotlin.String?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.ResourceTemplateReference
  ctor  fun `<init>`(kotlin.String): io.modelcontextprotocol.kotlin.sdk.ResourceTemplateReference
  fun    fun io.modelcontextprotocol.kotlin.sdk.ResourceTemplateReference.component1(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.ResourceTemplateReference.copy(kotlin.String): io.modelcontextprotocol.kotlin.sdk.ResourceTemplateReference
  fun    fun io.modelcontextprotocol.kotlin.sdk.ResourceTemplateReference.equals(kotlin.Any?): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.ResourceTemplateReference.hashCode(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.ResourceTemplateReference.toString(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.ResourceTemplateReference.`write$Self`(io.modelcontextprotocol.kotlin.sdk.ResourceTemplateReference, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.ResourceTemplateReference.type: kotlin.String
  val/var val io.modelcontextprotocol.kotlin.sdk.ResourceTemplateReference.uri: kotlin.String

### io.modelcontextprotocol.kotlin.sdk.ResourceTemplateReference.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.ResourceTemplateReference.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.ResourceTemplateReference.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.ResourceTemplateReference
  fun    fun io.modelcontextprotocol.kotlin.sdk.ResourceTemplateReference.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.ResourceTemplateReference): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.ResourceTemplateReference.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.ResourceTemplateReference.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.ResourceTemplateReference.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.ResourceTemplateReference>
  val/var val io.modelcontextprotocol.kotlin.sdk.ResourceTemplateReference.Companion.TYPE: kotlin.String

### io.modelcontextprotocol.kotlin.sdk.ResourceUpdatedNotification
  ctor  fun `<init>`(kotlin.Int, io.modelcontextprotocol.kotlin.sdk.ResourceUpdatedNotification.Params?, io.modelcontextprotocol.kotlin.sdk.Method?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.ResourceUpdatedNotification
  ctor  fun `<init>`(io.modelcontextprotocol.kotlin.sdk.ResourceUpdatedNotification.Params): io.modelcontextprotocol.kotlin.sdk.ResourceUpdatedNotification
  fun    fun io.modelcontextprotocol.kotlin.sdk.ResourceUpdatedNotification.component1(): io.modelcontextprotocol.kotlin.sdk.ResourceUpdatedNotification.Params
  fun    fun io.modelcontextprotocol.kotlin.sdk.ResourceUpdatedNotification.copy(io.modelcontextprotocol.kotlin.sdk.ResourceUpdatedNotification.Params): io.modelcontextprotocol.kotlin.sdk.ResourceUpdatedNotification
  fun    fun io.modelcontextprotocol.kotlin.sdk.ResourceUpdatedNotification.equals(kotlin.Any?): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.ResourceUpdatedNotification.hashCode(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.ResourceUpdatedNotification.toString(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.ResourceUpdatedNotification.`write$Self`(io.modelcontextprotocol.kotlin.sdk.ResourceUpdatedNotification, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.ResourceUpdatedNotification.method: io.modelcontextprotocol.kotlin.sdk.Method
  val/var val io.modelcontextprotocol.kotlin.sdk.ResourceUpdatedNotification.params: io.modelcontextprotocol.kotlin.sdk.ResourceUpdatedNotification.Params

### io.modelcontextprotocol.kotlin.sdk.ResourceUpdatedNotification.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.ResourceUpdatedNotification.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.ResourceUpdatedNotification.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.ResourceUpdatedNotification
  fun    fun io.modelcontextprotocol.kotlin.sdk.ResourceUpdatedNotification.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.ResourceUpdatedNotification): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.ResourceUpdatedNotification.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.ResourceUpdatedNotification.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.ResourceUpdatedNotification.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.ResourceUpdatedNotification>

### io.modelcontextprotocol.kotlin.sdk.ResourceUpdatedNotification.Params
  ctor  fun `<init>`(kotlin.Int, kotlin.String?, kotlinx.serialization.json.JsonObject?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.ResourceUpdatedNotification.Params
  ctor  fun `<init>`(kotlin.String, kotlinx.serialization.json.JsonObject): io.modelcontextprotocol.kotlin.sdk.ResourceUpdatedNotification.Params
  fun    fun io.modelcontextprotocol.kotlin.sdk.ResourceUpdatedNotification.Params.component1(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.ResourceUpdatedNotification.Params.component2(): kotlinx.serialization.json.JsonObject
  fun    fun io.modelcontextprotocol.kotlin.sdk.ResourceUpdatedNotification.Params.copy(kotlin.String, kotlinx.serialization.json.JsonObject): io.modelcontextprotocol.kotlin.sdk.ResourceUpdatedNotification.Params
  fun    fun io.modelcontextprotocol.kotlin.sdk.ResourceUpdatedNotification.Params.equals(kotlin.Any?): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.ResourceUpdatedNotification.Params.hashCode(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.ResourceUpdatedNotification.Params.toString(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.ResourceUpdatedNotification.Params.`write$Self`(io.modelcontextprotocol.kotlin.sdk.ResourceUpdatedNotification.Params, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.ResourceUpdatedNotification.Params._meta: kotlinx.serialization.json.JsonObject
  val/var val io.modelcontextprotocol.kotlin.sdk.ResourceUpdatedNotification.Params.uri: kotlin.String

### io.modelcontextprotocol.kotlin.sdk.ResourceUpdatedNotification.Params.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.ResourceUpdatedNotification.Params.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.ResourceUpdatedNotification.Params.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.ResourceUpdatedNotification.Params
  fun    fun io.modelcontextprotocol.kotlin.sdk.ResourceUpdatedNotification.Params.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.ResourceUpdatedNotification.Params): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.ResourceUpdatedNotification.Params.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.ResourceUpdatedNotification.Params.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.ResourceUpdatedNotification.Params.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.ResourceUpdatedNotification.Params>

### io.modelcontextprotocol.kotlin.sdk.Role
  ctor  fun `<init>`(): io.modelcontextprotocol.kotlin.sdk.Role
  static fun valueOf(kotlin.String): io.modelcontextprotocol.kotlin.sdk.Role
  static fun values(): kotlin.Array<io.modelcontextprotocol.kotlin.sdk.Role>
  fun    fun valueOf(kotlin.String): io.modelcontextprotocol.kotlin.sdk.Role
  fun    fun values(): kotlin.Array<io.modelcontextprotocol.kotlin.sdk.Role>

### io.modelcontextprotocol.kotlin.sdk.Role.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.Role.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.Role>

### io.modelcontextprotocol.kotlin.sdk.Root
  ctor  fun `<init>`(kotlin.Int, kotlin.String?, kotlin.String?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.Root
  ctor  fun `<init>`(kotlin.String, kotlin.String?): io.modelcontextprotocol.kotlin.sdk.Root
  fun    fun io.modelcontextprotocol.kotlin.sdk.Root.component1(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.Root.component2(): kotlin.String?
  fun    fun io.modelcontextprotocol.kotlin.sdk.Root.copy(kotlin.String, kotlin.String?): io.modelcontextprotocol.kotlin.sdk.Root
  fun    fun io.modelcontextprotocol.kotlin.sdk.Root.equals(kotlin.Any?): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.Root.hashCode(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.Root.toString(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.Root.`write$Self`(io.modelcontextprotocol.kotlin.sdk.Root, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.Root.name: kotlin.String?
  val/var val io.modelcontextprotocol.kotlin.sdk.Root.uri: kotlin.String

### io.modelcontextprotocol.kotlin.sdk.Root.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.Root.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.Root.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.Root
  fun    fun io.modelcontextprotocol.kotlin.sdk.Root.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.Root): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.Root.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.Root.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.Root.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.Root>

### io.modelcontextprotocol.kotlin.sdk.RootsListChangedNotification
  ctor  fun `<init>`(kotlin.Int, io.modelcontextprotocol.kotlin.sdk.RootsListChangedNotification.Params?, io.modelcontextprotocol.kotlin.sdk.Method?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.RootsListChangedNotification
  ctor  fun `<init>`(io.modelcontextprotocol.kotlin.sdk.RootsListChangedNotification.Params): io.modelcontextprotocol.kotlin.sdk.RootsListChangedNotification
  fun    fun io.modelcontextprotocol.kotlin.sdk.RootsListChangedNotification.component1(): io.modelcontextprotocol.kotlin.sdk.RootsListChangedNotification.Params
  fun    fun io.modelcontextprotocol.kotlin.sdk.RootsListChangedNotification.copy(io.modelcontextprotocol.kotlin.sdk.RootsListChangedNotification.Params): io.modelcontextprotocol.kotlin.sdk.RootsListChangedNotification
  fun    fun io.modelcontextprotocol.kotlin.sdk.RootsListChangedNotification.equals(kotlin.Any?): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.RootsListChangedNotification.hashCode(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.RootsListChangedNotification.toString(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.RootsListChangedNotification.`write$Self`(io.modelcontextprotocol.kotlin.sdk.RootsListChangedNotification, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.RootsListChangedNotification.method: io.modelcontextprotocol.kotlin.sdk.Method
  val/var val io.modelcontextprotocol.kotlin.sdk.RootsListChangedNotification.params: io.modelcontextprotocol.kotlin.sdk.RootsListChangedNotification.Params

### io.modelcontextprotocol.kotlin.sdk.RootsListChangedNotification.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.RootsListChangedNotification.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.RootsListChangedNotification.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.RootsListChangedNotification
  fun    fun io.modelcontextprotocol.kotlin.sdk.RootsListChangedNotification.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.RootsListChangedNotification): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.RootsListChangedNotification.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.RootsListChangedNotification.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.RootsListChangedNotification.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.RootsListChangedNotification>

### io.modelcontextprotocol.kotlin.sdk.RootsListChangedNotification.Params
  ctor  fun `<init>`(kotlin.Int, kotlinx.serialization.json.JsonObject?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.RootsListChangedNotification.Params
  ctor  fun `<init>`(kotlinx.serialization.json.JsonObject): io.modelcontextprotocol.kotlin.sdk.RootsListChangedNotification.Params
  fun    fun io.modelcontextprotocol.kotlin.sdk.RootsListChangedNotification.Params.component1(): kotlinx.serialization.json.JsonObject
  fun    fun io.modelcontextprotocol.kotlin.sdk.RootsListChangedNotification.Params.copy(kotlinx.serialization.json.JsonObject): io.modelcontextprotocol.kotlin.sdk.RootsListChangedNotification.Params
  fun    fun io.modelcontextprotocol.kotlin.sdk.RootsListChangedNotification.Params.equals(kotlin.Any?): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.RootsListChangedNotification.Params.hashCode(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.RootsListChangedNotification.Params.toString(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.RootsListChangedNotification.Params.`write$Self`(io.modelcontextprotocol.kotlin.sdk.RootsListChangedNotification.Params, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.RootsListChangedNotification.Params._meta: kotlinx.serialization.json.JsonObject

### io.modelcontextprotocol.kotlin.sdk.RootsListChangedNotification.Params.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.RootsListChangedNotification.Params.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.RootsListChangedNotification.Params.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.RootsListChangedNotification.Params
  fun    fun io.modelcontextprotocol.kotlin.sdk.RootsListChangedNotification.Params.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.RootsListChangedNotification.Params): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.RootsListChangedNotification.Params.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.RootsListChangedNotification.Params.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.RootsListChangedNotification.Params.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.RootsListChangedNotification.Params>

### io.modelcontextprotocol.kotlin.sdk.SamplingMessage
  ctor  fun `<init>`(kotlin.Int, io.modelcontextprotocol.kotlin.sdk.Role?, io.modelcontextprotocol.kotlin.sdk.PromptMessageContentMultimodal?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.SamplingMessage
  ctor  fun `<init>`(io.modelcontextprotocol.kotlin.sdk.Role, io.modelcontextprotocol.kotlin.sdk.PromptMessageContentMultimodal): io.modelcontextprotocol.kotlin.sdk.SamplingMessage
  fun    fun io.modelcontextprotocol.kotlin.sdk.SamplingMessage.component1(): io.modelcontextprotocol.kotlin.sdk.Role
  fun    fun io.modelcontextprotocol.kotlin.sdk.SamplingMessage.component2(): io.modelcontextprotocol.kotlin.sdk.PromptMessageContentMultimodal
  fun    fun io.modelcontextprotocol.kotlin.sdk.SamplingMessage.copy(io.modelcontextprotocol.kotlin.sdk.Role, io.modelcontextprotocol.kotlin.sdk.PromptMessageContentMultimodal): io.modelcontextprotocol.kotlin.sdk.SamplingMessage
  fun    fun io.modelcontextprotocol.kotlin.sdk.SamplingMessage.equals(kotlin.Any?): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.SamplingMessage.hashCode(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.SamplingMessage.toString(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.SamplingMessage.`write$Self`(io.modelcontextprotocol.kotlin.sdk.SamplingMessage, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.SamplingMessage.content: io.modelcontextprotocol.kotlin.sdk.PromptMessageContentMultimodal
  val/var val io.modelcontextprotocol.kotlin.sdk.SamplingMessage.role: io.modelcontextprotocol.kotlin.sdk.Role

### io.modelcontextprotocol.kotlin.sdk.SamplingMessage.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.SamplingMessage.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.SamplingMessage.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.SamplingMessage
  fun    fun io.modelcontextprotocol.kotlin.sdk.SamplingMessage.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.SamplingMessage): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.SamplingMessage.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.SamplingMessage.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.SamplingMessage.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.SamplingMessage>

### io.modelcontextprotocol.kotlin.sdk.ServerCapabilities
  ctor  fun `<init>`(kotlin.Int, kotlinx.serialization.json.JsonObject?, kotlinx.serialization.json.JsonObject?, kotlinx.serialization.json.JsonObject?, io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.Prompts?, io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.Resources?, io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.Tools?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.ServerCapabilities
  ctor  fun `<init>`(kotlinx.serialization.json.JsonObject?, kotlinx.serialization.json.JsonObject?, kotlinx.serialization.json.JsonObject?, io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.Prompts?, io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.Resources?, io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.Tools?): io.modelcontextprotocol.kotlin.sdk.ServerCapabilities
  fun    fun io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.component1(): kotlinx.serialization.json.JsonObject?
  fun    fun io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.component2(): kotlinx.serialization.json.JsonObject?
  fun    fun io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.component3(): kotlinx.serialization.json.JsonObject?
  fun    fun io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.component4(): io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.Prompts?
  fun    fun io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.component5(): io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.Resources?
  fun    fun io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.component6(): io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.Tools?
  fun    fun io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.copy(kotlinx.serialization.json.JsonObject?, kotlinx.serialization.json.JsonObject?, kotlinx.serialization.json.JsonObject?, io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.Prompts?, io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.Resources?, io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.Tools?): io.modelcontextprotocol.kotlin.sdk.ServerCapabilities
  fun    fun io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.equals(kotlin.Any?): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.hashCode(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.toString(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.`write$Self`(io.modelcontextprotocol.kotlin.sdk.ServerCapabilities, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.experimental: kotlinx.serialization.json.JsonObject?
  val/var val io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.logging: kotlinx.serialization.json.JsonObject?
  val/var val io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.prompts: io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.Prompts?
  val/var val io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.resources: io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.Resources?
  val/var val io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.sampling: kotlinx.serialization.json.JsonObject?
  val/var val io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.tools: io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.Tools?

### io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.ServerCapabilities
  fun    fun io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.ServerCapabilities): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.ServerCapabilities>

### io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.Prompts
  ctor  fun `<init>`(kotlin.Int, kotlin.Boolean?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.Prompts
  ctor  fun `<init>`(kotlin.Boolean?): io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.Prompts
  fun    fun io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.Prompts.component1(): kotlin.Boolean?
  fun    fun io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.Prompts.copy(kotlin.Boolean?): io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.Prompts
  fun    fun io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.Prompts.equals(kotlin.Any?): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.Prompts.hashCode(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.Prompts.toString(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.Prompts.`write$Self`(io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.Prompts, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.Prompts.listChanged: kotlin.Boolean?

### io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.Prompts.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.Prompts.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.Prompts.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.Prompts
  fun    fun io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.Prompts.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.Prompts): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.Prompts.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.Prompts.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.Prompts.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.Prompts>

### io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.Resources
  ctor  fun `<init>`(kotlin.Int, kotlin.Boolean?, kotlin.Boolean?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.Resources
  ctor  fun `<init>`(kotlin.Boolean?, kotlin.Boolean?): io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.Resources
  fun    fun io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.Resources.component1(): kotlin.Boolean?
  fun    fun io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.Resources.component2(): kotlin.Boolean?
  fun    fun io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.Resources.copy(kotlin.Boolean?, kotlin.Boolean?): io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.Resources
  fun    fun io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.Resources.equals(kotlin.Any?): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.Resources.hashCode(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.Resources.toString(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.Resources.`write$Self`(io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.Resources, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.Resources.listChanged: kotlin.Boolean?
  val/var val io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.Resources.subscribe: kotlin.Boolean?

### io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.Resources.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.Resources.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.Resources.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.Resources
  fun    fun io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.Resources.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.Resources): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.Resources.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.Resources.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.Resources.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.Resources>

### io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.Tools
  ctor  fun `<init>`(kotlin.Int, kotlin.Boolean?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.Tools
  ctor  fun `<init>`(kotlin.Boolean?): io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.Tools
  fun    fun io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.Tools.component1(): kotlin.Boolean?
  fun    fun io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.Tools.copy(kotlin.Boolean?): io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.Tools
  fun    fun io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.Tools.equals(kotlin.Any?): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.Tools.hashCode(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.Tools.toString(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.Tools.`write$Self`(io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.Tools, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.Tools.listChanged: kotlin.Boolean?

### io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.Tools.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.Tools.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.Tools.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.Tools
  fun    fun io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.Tools.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.Tools): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.Tools.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.Tools.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.Tools.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.ServerCapabilities.Tools>

### io.modelcontextprotocol.kotlin.sdk.ServerNotification

### io.modelcontextprotocol.kotlin.sdk.ServerNotification.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.ServerNotification.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.ServerNotification>

### io.modelcontextprotocol.kotlin.sdk.ServerNotificationPolymorphicSerializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.ServerNotificationPolymorphicSerializer.selectDeserializer(kotlinx.serialization.json.JsonElement): kotlinx.serialization.DeserializationStrategy<io.modelcontextprotocol.kotlin.sdk.ServerNotification>

### io.modelcontextprotocol.kotlin.sdk.ServerRequest

### io.modelcontextprotocol.kotlin.sdk.ServerResult

### io.modelcontextprotocol.kotlin.sdk.ServerResult.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.ServerResult.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.ServerResult>

### io.modelcontextprotocol.kotlin.sdk.ServerResultPolymorphicSerializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.ServerResultPolymorphicSerializer.selectDeserializer(kotlinx.serialization.json.JsonElement): kotlinx.serialization.DeserializationStrategy<io.modelcontextprotocol.kotlin.sdk.ServerResult>

### io.modelcontextprotocol.kotlin.sdk.StopReason
  val/var val io.modelcontextprotocol.kotlin.sdk.StopReason.value: kotlin.String

### io.modelcontextprotocol.kotlin.sdk.StopReason.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.StopReason.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.StopReason>

### io.modelcontextprotocol.kotlin.sdk.StopReason.EndTurn
  fun    fun io.modelcontextprotocol.kotlin.sdk.StopReason.EndTurn.equals(kotlin.Any?): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.StopReason.EndTurn.hashCode(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.StopReason.EndTurn.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.StopReason.EndTurn>
  fun    fun io.modelcontextprotocol.kotlin.sdk.StopReason.EndTurn.toString(): kotlin.String
  val/var val io.modelcontextprotocol.kotlin.sdk.StopReason.EndTurn.value: kotlin.String

### io.modelcontextprotocol.kotlin.sdk.StopReason.MaxTokens
  fun    fun io.modelcontextprotocol.kotlin.sdk.StopReason.MaxTokens.equals(kotlin.Any?): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.StopReason.MaxTokens.hashCode(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.StopReason.MaxTokens.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.StopReason.MaxTokens>
  fun    fun io.modelcontextprotocol.kotlin.sdk.StopReason.MaxTokens.toString(): kotlin.String
  val/var val io.modelcontextprotocol.kotlin.sdk.StopReason.MaxTokens.value: kotlin.String

### io.modelcontextprotocol.kotlin.sdk.StopReason.Other
  ctor  fun `<init>`(kotlin.String): io.modelcontextprotocol.kotlin.sdk.StopReason.Other
  fun    fun io.modelcontextprotocol.kotlin.sdk.StopReason.Other.equals(kotlin.Any?): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.StopReason.Other.hashCode(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.StopReason.Other.toString(): kotlin.String
  val/var val io.modelcontextprotocol.kotlin.sdk.StopReason.Other.value: kotlin.String

### io.modelcontextprotocol.kotlin.sdk.StopReason.Other.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.StopReason.Other.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.StopReason.Other.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.StopReason.Other
  fun    fun io.modelcontextprotocol.kotlin.sdk.StopReason.Other.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.StopReason.Other): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.StopReason.Other.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.StopReason.Other.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.StopReason.Other.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.StopReason.Other>

### io.modelcontextprotocol.kotlin.sdk.StopReason.StopSequence
  fun    fun io.modelcontextprotocol.kotlin.sdk.StopReason.StopSequence.equals(kotlin.Any?): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.StopReason.StopSequence.hashCode(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.StopReason.StopSequence.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.StopReason.StopSequence>
  fun    fun io.modelcontextprotocol.kotlin.sdk.StopReason.StopSequence.toString(): kotlin.String
  val/var val io.modelcontextprotocol.kotlin.sdk.StopReason.StopSequence.value: kotlin.String

### io.modelcontextprotocol.kotlin.sdk.StopReasonSerializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.StopReasonSerializer.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.StopReason
  fun    fun io.modelcontextprotocol.kotlin.sdk.StopReasonSerializer.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.StopReason): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.StopReasonSerializer.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.SubscribeRequest
  ctor  fun `<init>`(kotlin.Int, kotlin.String?, kotlinx.serialization.json.JsonObject?, io.modelcontextprotocol.kotlin.sdk.Method?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.SubscribeRequest
  ctor  fun `<init>`(kotlin.String, kotlinx.serialization.json.JsonObject): io.modelcontextprotocol.kotlin.sdk.SubscribeRequest
  fun    fun io.modelcontextprotocol.kotlin.sdk.SubscribeRequest.component1(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.SubscribeRequest.component2(): kotlinx.serialization.json.JsonObject
  fun    fun io.modelcontextprotocol.kotlin.sdk.SubscribeRequest.copy(kotlin.String, kotlinx.serialization.json.JsonObject): io.modelcontextprotocol.kotlin.sdk.SubscribeRequest
  fun    fun io.modelcontextprotocol.kotlin.sdk.SubscribeRequest.equals(kotlin.Any?): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.SubscribeRequest.hashCode(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.SubscribeRequest.toString(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.SubscribeRequest.`write$Self`(io.modelcontextprotocol.kotlin.sdk.SubscribeRequest, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.SubscribeRequest._meta: kotlinx.serialization.json.JsonObject
  val/var val io.modelcontextprotocol.kotlin.sdk.SubscribeRequest.method: io.modelcontextprotocol.kotlin.sdk.Method
  val/var val io.modelcontextprotocol.kotlin.sdk.SubscribeRequest.uri: kotlin.String

### io.modelcontextprotocol.kotlin.sdk.SubscribeRequest.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.SubscribeRequest.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.SubscribeRequest.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.SubscribeRequest
  fun    fun io.modelcontextprotocol.kotlin.sdk.SubscribeRequest.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.SubscribeRequest): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.SubscribeRequest.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.SubscribeRequest.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.SubscribeRequest.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.SubscribeRequest>

### io.modelcontextprotocol.kotlin.sdk.TextContent
  ctor  fun `<init>`(kotlin.Int, kotlin.String?, io.modelcontextprotocol.kotlin.sdk.Annotations?, kotlin.String?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.TextContent
  ctor  fun `<init>`(kotlin.String?, io.modelcontextprotocol.kotlin.sdk.Annotations?): io.modelcontextprotocol.kotlin.sdk.TextContent
  fun    fun io.modelcontextprotocol.kotlin.sdk.TextContent.component1(): kotlin.String?
  fun    fun io.modelcontextprotocol.kotlin.sdk.TextContent.component2(): io.modelcontextprotocol.kotlin.sdk.Annotations?
  fun    fun io.modelcontextprotocol.kotlin.sdk.TextContent.copy(kotlin.String?, io.modelcontextprotocol.kotlin.sdk.Annotations?): io.modelcontextprotocol.kotlin.sdk.TextContent
  fun    fun io.modelcontextprotocol.kotlin.sdk.TextContent.equals(kotlin.Any?): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.TextContent.hashCode(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.TextContent.toString(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.TextContent.`write$Self`(io.modelcontextprotocol.kotlin.sdk.TextContent, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.TextContent.annotations: io.modelcontextprotocol.kotlin.sdk.Annotations?
  val/var val io.modelcontextprotocol.kotlin.sdk.TextContent.text: kotlin.String?
  val/var val io.modelcontextprotocol.kotlin.sdk.TextContent.type: kotlin.String

### io.modelcontextprotocol.kotlin.sdk.TextContent.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.TextContent.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.TextContent.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.TextContent
  fun    fun io.modelcontextprotocol.kotlin.sdk.TextContent.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.TextContent): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.TextContent.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.TextContent.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.TextContent.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.TextContent>
  val/var val io.modelcontextprotocol.kotlin.sdk.TextContent.Companion.TYPE: kotlin.String

### io.modelcontextprotocol.kotlin.sdk.TextResourceContents
  ctor  fun `<init>`(kotlin.Int, kotlin.String?, kotlin.String?, kotlin.String?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.TextResourceContents
  ctor  fun `<init>`(kotlin.String, kotlin.String, kotlin.String?): io.modelcontextprotocol.kotlin.sdk.TextResourceContents
  fun    fun io.modelcontextprotocol.kotlin.sdk.TextResourceContents.component1(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.TextResourceContents.component2(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.TextResourceContents.component3(): kotlin.String?
  fun    fun io.modelcontextprotocol.kotlin.sdk.TextResourceContents.copy(kotlin.String, kotlin.String, kotlin.String?): io.modelcontextprotocol.kotlin.sdk.TextResourceContents
  fun    fun io.modelcontextprotocol.kotlin.sdk.TextResourceContents.equals(kotlin.Any?): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.TextResourceContents.hashCode(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.TextResourceContents.toString(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.TextResourceContents.`write$Self`(io.modelcontextprotocol.kotlin.sdk.TextResourceContents, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.TextResourceContents.mimeType: kotlin.String?
  val/var val io.modelcontextprotocol.kotlin.sdk.TextResourceContents.text: kotlin.String
  val/var val io.modelcontextprotocol.kotlin.sdk.TextResourceContents.uri: kotlin.String

### io.modelcontextprotocol.kotlin.sdk.TextResourceContents.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.TextResourceContents.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.TextResourceContents.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.TextResourceContents
  fun    fun io.modelcontextprotocol.kotlin.sdk.TextResourceContents.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.TextResourceContents): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.TextResourceContents.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.TextResourceContents.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.TextResourceContents.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.TextResourceContents>

### io.modelcontextprotocol.kotlin.sdk.Tool
  ctor  fun `<init>`(kotlin.Int, kotlin.String?, kotlin.String?, kotlin.String?, io.modelcontextprotocol.kotlin.sdk.Tool.Input?, io.modelcontextprotocol.kotlin.sdk.Tool.Output?, io.modelcontextprotocol.kotlin.sdk.ToolAnnotations?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.Tool
  ctor  fun `<init>`(kotlin.String, kotlin.String?, kotlin.String?, io.modelcontextprotocol.kotlin.sdk.Tool.Input, io.modelcontextprotocol.kotlin.sdk.Tool.Output?, io.modelcontextprotocol.kotlin.sdk.ToolAnnotations?): io.modelcontextprotocol.kotlin.sdk.Tool
  fun    fun io.modelcontextprotocol.kotlin.sdk.Tool.component1(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.Tool.component2(): kotlin.String?
  fun    fun io.modelcontextprotocol.kotlin.sdk.Tool.component3(): kotlin.String?
  fun    fun io.modelcontextprotocol.kotlin.sdk.Tool.component4(): io.modelcontextprotocol.kotlin.sdk.Tool.Input
  fun    fun io.modelcontextprotocol.kotlin.sdk.Tool.component5(): io.modelcontextprotocol.kotlin.sdk.Tool.Output?
  fun    fun io.modelcontextprotocol.kotlin.sdk.Tool.component6(): io.modelcontextprotocol.kotlin.sdk.ToolAnnotations?
  fun    fun io.modelcontextprotocol.kotlin.sdk.Tool.copy(kotlin.String, kotlin.String?, kotlin.String?, io.modelcontextprotocol.kotlin.sdk.Tool.Input, io.modelcontextprotocol.kotlin.sdk.Tool.Output?, io.modelcontextprotocol.kotlin.sdk.ToolAnnotations?): io.modelcontextprotocol.kotlin.sdk.Tool
  fun    fun io.modelcontextprotocol.kotlin.sdk.Tool.equals(kotlin.Any?): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.Tool.hashCode(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.Tool.toString(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.Tool.`write$Self`(io.modelcontextprotocol.kotlin.sdk.Tool, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.Tool.annotations: io.modelcontextprotocol.kotlin.sdk.ToolAnnotations?
  val/var val io.modelcontextprotocol.kotlin.sdk.Tool.description: kotlin.String?
  val/var val io.modelcontextprotocol.kotlin.sdk.Tool.inputSchema: io.modelcontextprotocol.kotlin.sdk.Tool.Input
  val/var val io.modelcontextprotocol.kotlin.sdk.Tool.name: kotlin.String
  val/var val io.modelcontextprotocol.kotlin.sdk.Tool.outputSchema: io.modelcontextprotocol.kotlin.sdk.Tool.Output?
  val/var val io.modelcontextprotocol.kotlin.sdk.Tool.title: kotlin.String?

### io.modelcontextprotocol.kotlin.sdk.Tool.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.Tool.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.Tool.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.Tool
  fun    fun io.modelcontextprotocol.kotlin.sdk.Tool.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.Tool): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.Tool.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.Tool.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.Tool.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.Tool>

### io.modelcontextprotocol.kotlin.sdk.Tool.Input
  ctor  fun `<init>`(kotlin.Int, kotlinx.serialization.json.JsonObject?, kotlin.collections.List<kotlin.String>?, kotlin.String?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.Tool.Input
  ctor  fun `<init>`(kotlinx.serialization.json.JsonObject, kotlin.collections.List<kotlin.String>?): io.modelcontextprotocol.kotlin.sdk.Tool.Input
  fun    fun io.modelcontextprotocol.kotlin.sdk.Tool.Input.component1(): kotlinx.serialization.json.JsonObject
  fun    fun io.modelcontextprotocol.kotlin.sdk.Tool.Input.component2(): kotlin.collections.List<kotlin.String>?
  fun    fun io.modelcontextprotocol.kotlin.sdk.Tool.Input.copy(kotlinx.serialization.json.JsonObject, kotlin.collections.List<kotlin.String>?): io.modelcontextprotocol.kotlin.sdk.Tool.Input
  fun    fun io.modelcontextprotocol.kotlin.sdk.Tool.Input.equals(kotlin.Any?): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.Tool.Input.hashCode(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.Tool.Input.toString(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.Tool.Input.`write$Self`(io.modelcontextprotocol.kotlin.sdk.Tool.Input, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.Tool.Input.properties: kotlinx.serialization.json.JsonObject
  val/var val io.modelcontextprotocol.kotlin.sdk.Tool.Input.required: kotlin.collections.List<kotlin.String>?
  val/var val io.modelcontextprotocol.kotlin.sdk.Tool.Input.type: kotlin.String

### io.modelcontextprotocol.kotlin.sdk.Tool.Input.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.Tool.Input.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.Tool.Input.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.Tool.Input
  fun    fun io.modelcontextprotocol.kotlin.sdk.Tool.Input.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.Tool.Input): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.Tool.Input.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.Tool.Input.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.Tool.Input.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.Tool.Input>

### io.modelcontextprotocol.kotlin.sdk.Tool.Output
  ctor  fun `<init>`(kotlin.Int, kotlinx.serialization.json.JsonObject?, kotlin.collections.List<kotlin.String>?, kotlin.String?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.Tool.Output
  ctor  fun `<init>`(kotlinx.serialization.json.JsonObject, kotlin.collections.List<kotlin.String>?): io.modelcontextprotocol.kotlin.sdk.Tool.Output
  fun    fun io.modelcontextprotocol.kotlin.sdk.Tool.Output.component1(): kotlinx.serialization.json.JsonObject
  fun    fun io.modelcontextprotocol.kotlin.sdk.Tool.Output.component2(): kotlin.collections.List<kotlin.String>?
  fun    fun io.modelcontextprotocol.kotlin.sdk.Tool.Output.copy(kotlinx.serialization.json.JsonObject, kotlin.collections.List<kotlin.String>?): io.modelcontextprotocol.kotlin.sdk.Tool.Output
  fun    fun io.modelcontextprotocol.kotlin.sdk.Tool.Output.equals(kotlin.Any?): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.Tool.Output.hashCode(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.Tool.Output.toString(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.Tool.Output.`write$Self`(io.modelcontextprotocol.kotlin.sdk.Tool.Output, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.Tool.Output.properties: kotlinx.serialization.json.JsonObject
  val/var val io.modelcontextprotocol.kotlin.sdk.Tool.Output.required: kotlin.collections.List<kotlin.String>?
  val/var val io.modelcontextprotocol.kotlin.sdk.Tool.Output.type: kotlin.String

### io.modelcontextprotocol.kotlin.sdk.Tool.Output.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.Tool.Output.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.Tool.Output.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.Tool.Output
  fun    fun io.modelcontextprotocol.kotlin.sdk.Tool.Output.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.Tool.Output): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.Tool.Output.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.Tool.Output.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.Tool.Output.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.Tool.Output>

### io.modelcontextprotocol.kotlin.sdk.ToolAnnotations
  ctor  fun `<init>`(kotlin.Int, kotlin.String?, kotlin.Boolean?, kotlin.Boolean?, kotlin.Boolean?, kotlin.Boolean?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.ToolAnnotations
  ctor  fun `<init>`(kotlin.String?, kotlin.Boolean?, kotlin.Boolean?, kotlin.Boolean?, kotlin.Boolean?): io.modelcontextprotocol.kotlin.sdk.ToolAnnotations
  fun    fun io.modelcontextprotocol.kotlin.sdk.ToolAnnotations.component1(): kotlin.String?
  fun    fun io.modelcontextprotocol.kotlin.sdk.ToolAnnotations.component2(): kotlin.Boolean?
  fun    fun io.modelcontextprotocol.kotlin.sdk.ToolAnnotations.component3(): kotlin.Boolean?
  fun    fun io.modelcontextprotocol.kotlin.sdk.ToolAnnotations.component4(): kotlin.Boolean?
  fun    fun io.modelcontextprotocol.kotlin.sdk.ToolAnnotations.component5(): kotlin.Boolean?
  fun    fun io.modelcontextprotocol.kotlin.sdk.ToolAnnotations.copy(kotlin.String?, kotlin.Boolean?, kotlin.Boolean?, kotlin.Boolean?, kotlin.Boolean?): io.modelcontextprotocol.kotlin.sdk.ToolAnnotations
  fun    fun io.modelcontextprotocol.kotlin.sdk.ToolAnnotations.equals(kotlin.Any?): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.ToolAnnotations.hashCode(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.ToolAnnotations.toString(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.ToolAnnotations.`write$Self`(io.modelcontextprotocol.kotlin.sdk.ToolAnnotations, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.ToolAnnotations.destructiveHint: kotlin.Boolean?
  val/var val io.modelcontextprotocol.kotlin.sdk.ToolAnnotations.idempotentHint: kotlin.Boolean?
  val/var val io.modelcontextprotocol.kotlin.sdk.ToolAnnotations.openWorldHint: kotlin.Boolean?
  val/var val io.modelcontextprotocol.kotlin.sdk.ToolAnnotations.readOnlyHint: kotlin.Boolean?
  val/var val io.modelcontextprotocol.kotlin.sdk.ToolAnnotations.title: kotlin.String?

### io.modelcontextprotocol.kotlin.sdk.ToolAnnotations.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.ToolAnnotations.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.ToolAnnotations.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.ToolAnnotations
  fun    fun io.modelcontextprotocol.kotlin.sdk.ToolAnnotations.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.ToolAnnotations): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.ToolAnnotations.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.ToolAnnotations.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.ToolAnnotations.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.ToolAnnotations>

### io.modelcontextprotocol.kotlin.sdk.ToolListChangedNotification
  ctor  fun `<init>`(kotlin.Int, io.modelcontextprotocol.kotlin.sdk.ToolListChangedNotification.Params?, io.modelcontextprotocol.kotlin.sdk.Method?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.ToolListChangedNotification
  ctor  fun `<init>`(io.modelcontextprotocol.kotlin.sdk.ToolListChangedNotification.Params): io.modelcontextprotocol.kotlin.sdk.ToolListChangedNotification
  fun    fun io.modelcontextprotocol.kotlin.sdk.ToolListChangedNotification.component1(): io.modelcontextprotocol.kotlin.sdk.ToolListChangedNotification.Params
  fun    fun io.modelcontextprotocol.kotlin.sdk.ToolListChangedNotification.copy(io.modelcontextprotocol.kotlin.sdk.ToolListChangedNotification.Params): io.modelcontextprotocol.kotlin.sdk.ToolListChangedNotification
  fun    fun io.modelcontextprotocol.kotlin.sdk.ToolListChangedNotification.equals(kotlin.Any?): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.ToolListChangedNotification.hashCode(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.ToolListChangedNotification.toString(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.ToolListChangedNotification.`write$Self`(io.modelcontextprotocol.kotlin.sdk.ToolListChangedNotification, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.ToolListChangedNotification.method: io.modelcontextprotocol.kotlin.sdk.Method
  val/var val io.modelcontextprotocol.kotlin.sdk.ToolListChangedNotification.params: io.modelcontextprotocol.kotlin.sdk.ToolListChangedNotification.Params

### io.modelcontextprotocol.kotlin.sdk.ToolListChangedNotification.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.ToolListChangedNotification.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.ToolListChangedNotification.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.ToolListChangedNotification
  fun    fun io.modelcontextprotocol.kotlin.sdk.ToolListChangedNotification.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.ToolListChangedNotification): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.ToolListChangedNotification.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.ToolListChangedNotification.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.ToolListChangedNotification.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.ToolListChangedNotification>

### io.modelcontextprotocol.kotlin.sdk.ToolListChangedNotification.Params
  ctor  fun `<init>`(kotlin.Int, kotlinx.serialization.json.JsonObject?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.ToolListChangedNotification.Params
  ctor  fun `<init>`(kotlinx.serialization.json.JsonObject): io.modelcontextprotocol.kotlin.sdk.ToolListChangedNotification.Params
  fun    fun io.modelcontextprotocol.kotlin.sdk.ToolListChangedNotification.Params.component1(): kotlinx.serialization.json.JsonObject
  fun    fun io.modelcontextprotocol.kotlin.sdk.ToolListChangedNotification.Params.copy(kotlinx.serialization.json.JsonObject): io.modelcontextprotocol.kotlin.sdk.ToolListChangedNotification.Params
  fun    fun io.modelcontextprotocol.kotlin.sdk.ToolListChangedNotification.Params.equals(kotlin.Any?): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.ToolListChangedNotification.Params.hashCode(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.ToolListChangedNotification.Params.toString(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.ToolListChangedNotification.Params.`write$Self`(io.modelcontextprotocol.kotlin.sdk.ToolListChangedNotification.Params, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.ToolListChangedNotification.Params._meta: kotlinx.serialization.json.JsonObject

### io.modelcontextprotocol.kotlin.sdk.ToolListChangedNotification.Params.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.ToolListChangedNotification.Params.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.ToolListChangedNotification.Params.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.ToolListChangedNotification.Params
  fun    fun io.modelcontextprotocol.kotlin.sdk.ToolListChangedNotification.Params.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.ToolListChangedNotification.Params): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.ToolListChangedNotification.Params.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.ToolListChangedNotification.Params.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.ToolListChangedNotification.Params.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.ToolListChangedNotification.Params>

### io.modelcontextprotocol.kotlin.sdk.TypesKt

### io.modelcontextprotocol.kotlin.sdk.Types_utilKt

### io.modelcontextprotocol.kotlin.sdk.UnknownContent
  ctor  fun `<init>`(kotlin.Int, kotlin.String?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.UnknownContent
  ctor  fun `<init>`(kotlin.String): io.modelcontextprotocol.kotlin.sdk.UnknownContent
  fun    fun io.modelcontextprotocol.kotlin.sdk.UnknownContent.component1(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.UnknownContent.copy(kotlin.String): io.modelcontextprotocol.kotlin.sdk.UnknownContent
  fun    fun io.modelcontextprotocol.kotlin.sdk.UnknownContent.equals(kotlin.Any?): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.UnknownContent.hashCode(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.UnknownContent.toString(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.UnknownContent.`write$Self`(io.modelcontextprotocol.kotlin.sdk.UnknownContent, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.UnknownContent.type: kotlin.String

### io.modelcontextprotocol.kotlin.sdk.UnknownContent.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.UnknownContent.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.UnknownContent.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.UnknownContent
  fun    fun io.modelcontextprotocol.kotlin.sdk.UnknownContent.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.UnknownContent): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.UnknownContent.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.UnknownContent.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.UnknownContent.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.UnknownContent>

### io.modelcontextprotocol.kotlin.sdk.UnknownMethodRequestOrNotification
  ctor  fun `<init>`(kotlin.Int, io.modelcontextprotocol.kotlin.sdk.Method?, io.modelcontextprotocol.kotlin.sdk.NotificationParams?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.UnknownMethodRequestOrNotification
  ctor  fun `<init>`(io.modelcontextprotocol.kotlin.sdk.Method, io.modelcontextprotocol.kotlin.sdk.NotificationParams?): io.modelcontextprotocol.kotlin.sdk.UnknownMethodRequestOrNotification
  fun    fun io.modelcontextprotocol.kotlin.sdk.UnknownMethodRequestOrNotification.component1(): io.modelcontextprotocol.kotlin.sdk.Method
  fun    fun io.modelcontextprotocol.kotlin.sdk.UnknownMethodRequestOrNotification.component2(): io.modelcontextprotocol.kotlin.sdk.NotificationParams?
  fun    fun io.modelcontextprotocol.kotlin.sdk.UnknownMethodRequestOrNotification.copy(io.modelcontextprotocol.kotlin.sdk.Method, io.modelcontextprotocol.kotlin.sdk.NotificationParams?): io.modelcontextprotocol.kotlin.sdk.UnknownMethodRequestOrNotification
  fun    fun io.modelcontextprotocol.kotlin.sdk.UnknownMethodRequestOrNotification.equals(kotlin.Any?): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.UnknownMethodRequestOrNotification.hashCode(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.UnknownMethodRequestOrNotification.toString(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.UnknownMethodRequestOrNotification.`write$Self`(io.modelcontextprotocol.kotlin.sdk.UnknownMethodRequestOrNotification, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.UnknownMethodRequestOrNotification.method: io.modelcontextprotocol.kotlin.sdk.Method
  val/var val io.modelcontextprotocol.kotlin.sdk.UnknownMethodRequestOrNotification.params: io.modelcontextprotocol.kotlin.sdk.NotificationParams?

### io.modelcontextprotocol.kotlin.sdk.UnknownMethodRequestOrNotification.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.UnknownMethodRequestOrNotification.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.UnknownMethodRequestOrNotification.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.UnknownMethodRequestOrNotification
  fun    fun io.modelcontextprotocol.kotlin.sdk.UnknownMethodRequestOrNotification.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.UnknownMethodRequestOrNotification): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.UnknownMethodRequestOrNotification.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.UnknownMethodRequestOrNotification.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.UnknownMethodRequestOrNotification.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.UnknownMethodRequestOrNotification>

### io.modelcontextprotocol.kotlin.sdk.UnknownReference
  ctor  fun `<init>`(kotlin.Int, kotlin.String?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.UnknownReference
  ctor  fun `<init>`(kotlin.String): io.modelcontextprotocol.kotlin.sdk.UnknownReference
  fun    fun io.modelcontextprotocol.kotlin.sdk.UnknownReference.component1(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.UnknownReference.copy(kotlin.String): io.modelcontextprotocol.kotlin.sdk.UnknownReference
  fun    fun io.modelcontextprotocol.kotlin.sdk.UnknownReference.equals(kotlin.Any?): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.UnknownReference.hashCode(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.UnknownReference.toString(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.UnknownReference.`write$Self`(io.modelcontextprotocol.kotlin.sdk.UnknownReference, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.UnknownReference.type: kotlin.String

### io.modelcontextprotocol.kotlin.sdk.UnknownReference.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.UnknownReference.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.UnknownReference.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.UnknownReference
  fun    fun io.modelcontextprotocol.kotlin.sdk.UnknownReference.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.UnknownReference): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.UnknownReference.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.UnknownReference.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.UnknownReference.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.UnknownReference>

### io.modelcontextprotocol.kotlin.sdk.UnknownResourceContents
  ctor  fun `<init>`(kotlin.Int, kotlin.String?, kotlin.String?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.UnknownResourceContents
  ctor  fun `<init>`(kotlin.String, kotlin.String?): io.modelcontextprotocol.kotlin.sdk.UnknownResourceContents
  fun    fun io.modelcontextprotocol.kotlin.sdk.UnknownResourceContents.component1(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.UnknownResourceContents.component2(): kotlin.String?
  fun    fun io.modelcontextprotocol.kotlin.sdk.UnknownResourceContents.copy(kotlin.String, kotlin.String?): io.modelcontextprotocol.kotlin.sdk.UnknownResourceContents
  fun    fun io.modelcontextprotocol.kotlin.sdk.UnknownResourceContents.equals(kotlin.Any?): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.UnknownResourceContents.hashCode(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.UnknownResourceContents.toString(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.UnknownResourceContents.`write$Self`(io.modelcontextprotocol.kotlin.sdk.UnknownResourceContents, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.UnknownResourceContents.mimeType: kotlin.String?
  val/var val io.modelcontextprotocol.kotlin.sdk.UnknownResourceContents.uri: kotlin.String

### io.modelcontextprotocol.kotlin.sdk.UnknownResourceContents.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.UnknownResourceContents.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.UnknownResourceContents.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.UnknownResourceContents
  fun    fun io.modelcontextprotocol.kotlin.sdk.UnknownResourceContents.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.UnknownResourceContents): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.UnknownResourceContents.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.UnknownResourceContents.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.UnknownResourceContents.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.UnknownResourceContents>

### io.modelcontextprotocol.kotlin.sdk.UnsubscribeRequest
  ctor  fun `<init>`(kotlin.Int, kotlin.String?, kotlinx.serialization.json.JsonObject?, io.modelcontextprotocol.kotlin.sdk.Method?, kotlinx.serialization.internal.SerializationConstructorMarker?): io.modelcontextprotocol.kotlin.sdk.UnsubscribeRequest
  ctor  fun `<init>`(kotlin.String, kotlinx.serialization.json.JsonObject): io.modelcontextprotocol.kotlin.sdk.UnsubscribeRequest
  fun    fun io.modelcontextprotocol.kotlin.sdk.UnsubscribeRequest.component1(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.UnsubscribeRequest.component2(): kotlinx.serialization.json.JsonObject
  fun    fun io.modelcontextprotocol.kotlin.sdk.UnsubscribeRequest.copy(kotlin.String, kotlinx.serialization.json.JsonObject): io.modelcontextprotocol.kotlin.sdk.UnsubscribeRequest
  fun    fun io.modelcontextprotocol.kotlin.sdk.UnsubscribeRequest.equals(kotlin.Any?): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.UnsubscribeRequest.hashCode(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.UnsubscribeRequest.toString(): kotlin.String
  fun    fun io.modelcontextprotocol.kotlin.sdk.UnsubscribeRequest.`write$Self`(io.modelcontextprotocol.kotlin.sdk.UnsubscribeRequest, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.UnsubscribeRequest._meta: kotlinx.serialization.json.JsonObject
  val/var val io.modelcontextprotocol.kotlin.sdk.UnsubscribeRequest.method: io.modelcontextprotocol.kotlin.sdk.Method
  val/var val io.modelcontextprotocol.kotlin.sdk.UnsubscribeRequest.uri: kotlin.String

### io.modelcontextprotocol.kotlin.sdk.UnsubscribeRequest.$serializer
  fun    fun io.modelcontextprotocol.kotlin.sdk.UnsubscribeRequest.`$serializer`.childSerializers(): kotlin.Array<kotlinx.serialization.KSerializer<*>>
  fun    fun io.modelcontextprotocol.kotlin.sdk.UnsubscribeRequest.`$serializer`.deserialize(kotlinx.serialization.encoding.Decoder): io.modelcontextprotocol.kotlin.sdk.UnsubscribeRequest
  fun    fun io.modelcontextprotocol.kotlin.sdk.UnsubscribeRequest.`$serializer`.serialize(kotlinx.serialization.encoding.Encoder, io.modelcontextprotocol.kotlin.sdk.UnsubscribeRequest): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.UnsubscribeRequest.`$serializer`.descriptor: kotlinx.serialization.descriptors.SerialDescriptor

### io.modelcontextprotocol.kotlin.sdk.UnsubscribeRequest.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.UnsubscribeRequest.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.UnsubscribeRequest>

### io.modelcontextprotocol.kotlin.sdk.WithMeta
  val/var val io.modelcontextprotocol.kotlin.sdk.WithMeta._meta: kotlinx.serialization.json.JsonObject

### io.modelcontextprotocol.kotlin.sdk.WithMeta.Companion
  fun    fun io.modelcontextprotocol.kotlin.sdk.WithMeta.Companion.serializer(): kotlinx.serialization.KSerializer<io.modelcontextprotocol.kotlin.sdk.WithMeta>
  val/var val io.modelcontextprotocol.kotlin.sdk.WithMeta.Companion.Empty: io.modelcontextprotocol.kotlin.sdk.CustomMeta

### io.modelcontextprotocol.kotlin.sdk.WithMeta.DefaultImpls

### io.modelcontextprotocol.kotlin.sdk.client.Client
  ctor  fun `<init>`(io.modelcontextprotocol.kotlin.sdk.Implementation, io.modelcontextprotocol.kotlin.sdk.client.ClientOptions): io.modelcontextprotocol.kotlin.sdk.client.Client
  fun    fun io.modelcontextprotocol.kotlin.sdk.client.Client.addRoot(kotlin.String, kotlin.String): kotlin.Unit
  fun    fun io.modelcontextprotocol.kotlin.sdk.client.Client.addRoots(kotlin.collections.List<io.modelcontextprotocol.kotlin.sdk.Root>): kotlin.Unit
  fun    fun io.modelcontextprotocol.kotlin.sdk.client.Client.assertCapability(kotlin.String, kotlin.String): kotlin.Unit
  fun    fun io.modelcontextprotocol.kotlin.sdk.client.Client.assertCapabilityForMethod(io.modelcontextprotocol.kotlin.sdk.Method): kotlin.Unit
  fun    fun io.modelcontextprotocol.kotlin.sdk.client.Client.assertNotificationCapability(io.modelcontextprotocol.kotlin.sdk.Method): kotlin.Unit
  fun    fun io.modelcontextprotocol.kotlin.sdk.client.Client.assertRequestHandlerCapability(io.modelcontextprotocol.kotlin.sdk.Method): kotlin.Unit
  fun    fun io.modelcontextprotocol.kotlin.sdk.client.Client.callTool(kotlin.String, kotlin.collections.Map<kotlin.String, kotlin.Any?>, kotlin.Boolean, io.modelcontextprotocol.kotlin.sdk.shared.RequestOptions?): io.modelcontextprotocol.kotlin.sdk.CallToolResultBase?
  fun    fun io.modelcontextprotocol.kotlin.sdk.client.Client.callTool(io.modelcontextprotocol.kotlin.sdk.CallToolRequest, kotlin.Boolean, io.modelcontextprotocol.kotlin.sdk.shared.RequestOptions?): io.modelcontextprotocol.kotlin.sdk.CallToolResultBase?
  fun    fun io.modelcontextprotocol.kotlin.sdk.client.Client.complete(io.modelcontextprotocol.kotlin.sdk.CompleteRequest, io.modelcontextprotocol.kotlin.sdk.shared.RequestOptions?): io.modelcontextprotocol.kotlin.sdk.CompleteResult
  fun    fun io.modelcontextprotocol.kotlin.sdk.client.Client.connect(io.modelcontextprotocol.kotlin.sdk.shared.Transport): kotlin.Unit
  fun    fun io.modelcontextprotocol.kotlin.sdk.client.Client.getPrompt(io.modelcontextprotocol.kotlin.sdk.GetPromptRequest, io.modelcontextprotocol.kotlin.sdk.shared.RequestOptions?): io.modelcontextprotocol.kotlin.sdk.GetPromptResult
  fun    fun io.modelcontextprotocol.kotlin.sdk.client.Client.handleListRoots(): io.modelcontextprotocol.kotlin.sdk.ListRootsResult
  fun    fun io.modelcontextprotocol.kotlin.sdk.client.Client.listPrompts(io.modelcontextprotocol.kotlin.sdk.ListPromptsRequest, io.modelcontextprotocol.kotlin.sdk.shared.RequestOptions?): io.modelcontextprotocol.kotlin.sdk.ListPromptsResult
  fun    fun io.modelcontextprotocol.kotlin.sdk.client.Client.listResourceTemplates(io.modelcontextprotocol.kotlin.sdk.ListResourceTemplatesRequest, io.modelcontextprotocol.kotlin.sdk.shared.RequestOptions?): io.modelcontextprotocol.kotlin.sdk.ListResourceTemplatesResult
  fun    fun io.modelcontextprotocol.kotlin.sdk.client.Client.listResources(io.modelcontextprotocol.kotlin.sdk.ListResourcesRequest, io.modelcontextprotocol.kotlin.sdk.shared.RequestOptions?): io.modelcontextprotocol.kotlin.sdk.ListResourcesResult
  fun    fun io.modelcontextprotocol.kotlin.sdk.client.Client.listTools(io.modelcontextprotocol.kotlin.sdk.ListToolsRequest, io.modelcontextprotocol.kotlin.sdk.shared.RequestOptions?): io.modelcontextprotocol.kotlin.sdk.ListToolsResult
  fun    fun io.modelcontextprotocol.kotlin.sdk.client.Client.ping(io.modelcontextprotocol.kotlin.sdk.shared.RequestOptions?): io.modelcontextprotocol.kotlin.sdk.EmptyRequestResult
  fun    fun io.modelcontextprotocol.kotlin.sdk.client.Client.readResource(io.modelcontextprotocol.kotlin.sdk.ReadResourceRequest, io.modelcontextprotocol.kotlin.sdk.shared.RequestOptions?): io.modelcontextprotocol.kotlin.sdk.ReadResourceResult
  fun    fun io.modelcontextprotocol.kotlin.sdk.client.Client.removeRoot(kotlin.String): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.client.Client.removeRoots(kotlin.collections.List<kotlin.String>): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.client.Client.sendRootsListChanged(): kotlin.Unit
  fun    fun io.modelcontextprotocol.kotlin.sdk.client.Client.setElicitationHandler((io.modelcontextprotocol.kotlin.sdk.CreateElicitationRequest) -> io.modelcontextprotocol.kotlin.sdk.CreateElicitationResult): kotlin.Unit
  fun    fun io.modelcontextprotocol.kotlin.sdk.client.Client.setLoggingLevel(io.modelcontextprotocol.kotlin.sdk.LoggingLevel, io.modelcontextprotocol.kotlin.sdk.shared.RequestOptions?): io.modelcontextprotocol.kotlin.sdk.EmptyRequestResult
  fun    fun io.modelcontextprotocol.kotlin.sdk.client.Client.subscribeResource(io.modelcontextprotocol.kotlin.sdk.SubscribeRequest, io.modelcontextprotocol.kotlin.sdk.shared.RequestOptions?): io.modelcontextprotocol.kotlin.sdk.EmptyRequestResult
  fun    fun io.modelcontextprotocol.kotlin.sdk.client.Client.unsubscribeResource(io.modelcontextprotocol.kotlin.sdk.UnsubscribeRequest, io.modelcontextprotocol.kotlin.sdk.shared.RequestOptions?): io.modelcontextprotocol.kotlin.sdk.EmptyRequestResult
  val/var val io.modelcontextprotocol.kotlin.sdk.client.Client.capabilities: io.modelcontextprotocol.kotlin.sdk.ClientCapabilities
  val/var val io.modelcontextprotocol.kotlin.sdk.client.Client.clientInfo: io.modelcontextprotocol.kotlin.sdk.Implementation
  val/var var io.modelcontextprotocol.kotlin.sdk.client.Client.serverCapabilities: io.modelcontextprotocol.kotlin.sdk.ServerCapabilities?
  val/var var io.modelcontextprotocol.kotlin.sdk.client.Client.serverInstructions: kotlin.String?
  val/var var io.modelcontextprotocol.kotlin.sdk.client.Client.serverVersion: io.modelcontextprotocol.kotlin.sdk.Implementation?

### io.modelcontextprotocol.kotlin.sdk.client.ClientKt

### io.modelcontextprotocol.kotlin.sdk.client.ClientOptions
  ctor  fun `<init>`(io.modelcontextprotocol.kotlin.sdk.ClientCapabilities, kotlin.Boolean): io.modelcontextprotocol.kotlin.sdk.client.ClientOptions
  val/var val io.modelcontextprotocol.kotlin.sdk.client.ClientOptions.capabilities: io.modelcontextprotocol.kotlin.sdk.ClientCapabilities

### io.modelcontextprotocol.kotlin.sdk.client.KtorClientKt

### io.modelcontextprotocol.kotlin.sdk.client.SSEClientTransportKt

### io.modelcontextprotocol.kotlin.sdk.client.SseClientTransport
  ctor  fun `<init>`(io.ktor.client.HttpClient, kotlin.String?, kotlin.time.Duration?, io.ktor.client.request.HttpRequestBuilder.() -> kotlin.Unit): io.modelcontextprotocol.kotlin.sdk.client.SseClientTransport
  fun    fun io.modelcontextprotocol.kotlin.sdk.client.SseClientTransport.close(): kotlin.Unit
  fun    fun io.modelcontextprotocol.kotlin.sdk.client.SseClientTransport.closeResources(): kotlin.Unit
  fun    fun io.modelcontextprotocol.kotlin.sdk.client.SseClientTransport.handleEndpoint(kotlin.String): kotlin.Unit
  fun    fun io.modelcontextprotocol.kotlin.sdk.client.SseClientTransport.handleMessage(kotlin.String): kotlin.Unit
  fun    fun io.modelcontextprotocol.kotlin.sdk.client.SseClientTransport.send(io.modelcontextprotocol.kotlin.sdk.JSONRPCMessage): kotlin.Unit
  fun    fun io.modelcontextprotocol.kotlin.sdk.client.SseClientTransport.start(): kotlin.Unit
  fun    fun io.modelcontextprotocol.kotlin.sdk.client.SseClientTransport.(kotlinx.coroutines.CoroutineScope.)collectMessages(): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.client.SseClientTransport.baseUrl: kotlin.String
  val/var val io.modelcontextprotocol.kotlin.sdk.client.SseClientTransport.client: io.ktor.client.HttpClient
  val/var val io.modelcontextprotocol.kotlin.sdk.client.SseClientTransport.endpoint: kotlinx.coroutines.CompletableDeferred<kotlin.String>
  val/var val io.modelcontextprotocol.kotlin.sdk.client.SseClientTransport.initialized: kotlin.concurrent.atomics.AtomicBoolean
  val/var var io.modelcontextprotocol.kotlin.sdk.client.SseClientTransport.job: kotlinx.coroutines.Job?
  val/var val io.modelcontextprotocol.kotlin.sdk.client.SseClientTransport.logger: io.github.oshai.kotlinlogging.KLogger
  val/var val io.modelcontextprotocol.kotlin.sdk.client.SseClientTransport.reconnectionTime: kotlin.time.Duration?
  val/var val io.modelcontextprotocol.kotlin.sdk.client.SseClientTransport.requestBuilder: io.ktor.client.request.HttpRequestBuilder.() -> kotlin.Unit
  val/var var io.modelcontextprotocol.kotlin.sdk.client.SseClientTransport.scope: kotlinx.coroutines.CoroutineScope
  val/var var io.modelcontextprotocol.kotlin.sdk.client.SseClientTransport.session: io.ktor.client.plugins.sse.ClientSSESession
  val/var val io.modelcontextprotocol.kotlin.sdk.client.SseClientTransport.urlString: kotlin.String?

### io.modelcontextprotocol.kotlin.sdk.client.StdioClientTransport
  ctor  fun `<init>`(kotlinx.io.Source, kotlinx.io.Sink): io.modelcontextprotocol.kotlin.sdk.client.StdioClientTransport
  fun    fun io.modelcontextprotocol.kotlin.sdk.client.StdioClientTransport.close(): kotlin.Unit
  fun    fun io.modelcontextprotocol.kotlin.sdk.client.StdioClientTransport.processReadBuffer(): kotlin.Unit
  fun    fun io.modelcontextprotocol.kotlin.sdk.client.StdioClientTransport.send(io.modelcontextprotocol.kotlin.sdk.JSONRPCMessage): kotlin.Unit
  fun    fun io.modelcontextprotocol.kotlin.sdk.client.StdioClientTransport.start(): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.client.StdioClientTransport.initialized: kotlin.concurrent.atomics.AtomicBoolean
  val/var val io.modelcontextprotocol.kotlin.sdk.client.StdioClientTransport.input: kotlinx.io.Source
  val/var val io.modelcontextprotocol.kotlin.sdk.client.StdioClientTransport.ioCoroutineContext: kotlin.coroutines.CoroutineContext
  val/var var io.modelcontextprotocol.kotlin.sdk.client.StdioClientTransport.job: kotlinx.coroutines.Job?
  val/var val io.modelcontextprotocol.kotlin.sdk.client.StdioClientTransport.logger: io.github.oshai.kotlinlogging.KLogger
  val/var val io.modelcontextprotocol.kotlin.sdk.client.StdioClientTransport.output: kotlinx.io.Sink
  val/var val io.modelcontextprotocol.kotlin.sdk.client.StdioClientTransport.readBuffer: io.modelcontextprotocol.kotlin.sdk.shared.ReadBuffer
  val/var val io.modelcontextprotocol.kotlin.sdk.client.StdioClientTransport.scope: kotlinx.coroutines.CoroutineScope
  val/var val io.modelcontextprotocol.kotlin.sdk.client.StdioClientTransport.sendChannel: kotlinx.coroutines.channels.Channel<io.modelcontextprotocol.kotlin.sdk.JSONRPCMessage>

### io.modelcontextprotocol.kotlin.sdk.client.StreamableHttpClientTransport
  ctor  fun `<init>`(io.ktor.client.HttpClient, kotlin.String, kotlin.time.Duration?, io.ktor.client.request.HttpRequestBuilder.() -> kotlin.Unit): io.modelcontextprotocol.kotlin.sdk.client.StreamableHttpClientTransport
  fun    fun io.modelcontextprotocol.kotlin.sdk.client.StreamableHttpClientTransport.applyCommonHeaders(io.ktor.client.request.HttpRequestBuilder): kotlin.Unit
  fun    fun io.modelcontextprotocol.kotlin.sdk.client.StreamableHttpClientTransport.close(): kotlin.Unit
  fun    fun io.modelcontextprotocol.kotlin.sdk.client.StreamableHttpClientTransport.collectSse(io.ktor.client.plugins.sse.ClientSSESession, io.modelcontextprotocol.kotlin.sdk.RequestId?, ((kotlin.String) -> kotlin.Unit)?): kotlin.Unit
  fun    fun io.modelcontextprotocol.kotlin.sdk.client.StreamableHttpClientTransport.handleInlineSse(io.ktor.client.statement.HttpResponse, io.modelcontextprotocol.kotlin.sdk.RequestId?, ((kotlin.String) -> kotlin.Unit)?): kotlin.Unit
  fun    fun io.modelcontextprotocol.kotlin.sdk.client.StreamableHttpClientTransport.send(io.modelcontextprotocol.kotlin.sdk.JSONRPCMessage): kotlin.Unit
  fun    fun io.modelcontextprotocol.kotlin.sdk.client.StreamableHttpClientTransport.send(io.modelcontextprotocol.kotlin.sdk.JSONRPCMessage, kotlin.String?, ((kotlin.String) -> kotlin.Unit)?): kotlin.Unit
  fun    fun io.modelcontextprotocol.kotlin.sdk.client.StreamableHttpClientTransport.start(): kotlin.Unit
  fun    fun io.modelcontextprotocol.kotlin.sdk.client.StreamableHttpClientTransport.startSseSession(kotlin.String?, io.modelcontextprotocol.kotlin.sdk.RequestId?, ((kotlin.String) -> kotlin.Unit)?): kotlin.Unit
  fun    fun io.modelcontextprotocol.kotlin.sdk.client.StreamableHttpClientTransport.terminateSession(): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.client.StreamableHttpClientTransport.client: io.ktor.client.HttpClient
  val/var val io.modelcontextprotocol.kotlin.sdk.client.StreamableHttpClientTransport.initialized: kotlin.concurrent.atomics.AtomicBoolean
  val/var var io.modelcontextprotocol.kotlin.sdk.client.StreamableHttpClientTransport.lastEventId: kotlin.String?
  val/var var io.modelcontextprotocol.kotlin.sdk.client.StreamableHttpClientTransport.protocolVersion: kotlin.String?
  val/var val io.modelcontextprotocol.kotlin.sdk.client.StreamableHttpClientTransport.reconnectionTime: kotlin.time.Duration?
  val/var val io.modelcontextprotocol.kotlin.sdk.client.StreamableHttpClientTransport.requestBuilder: io.ktor.client.request.HttpRequestBuilder.() -> kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.client.StreamableHttpClientTransport.scope: kotlinx.coroutines.CoroutineScope
  val/var var io.modelcontextprotocol.kotlin.sdk.client.StreamableHttpClientTransport.sessionId: kotlin.String?
  val/var var io.modelcontextprotocol.kotlin.sdk.client.StreamableHttpClientTransport.sseJob: kotlinx.coroutines.Job?
  val/var var io.modelcontextprotocol.kotlin.sdk.client.StreamableHttpClientTransport.sseSession: io.ktor.client.plugins.sse.ClientSSESession?
  val/var val io.modelcontextprotocol.kotlin.sdk.client.StreamableHttpClientTransport.url: kotlin.String

### io.modelcontextprotocol.kotlin.sdk.client.StreamableHttpClientTransportKt

### io.modelcontextprotocol.kotlin.sdk.client.StreamableHttpError
  ctor  fun `<init>`(kotlin.Int?, kotlin.String?): io.modelcontextprotocol.kotlin.sdk.client.StreamableHttpError
  val/var val io.modelcontextprotocol.kotlin.sdk.client.StreamableHttpError.code: kotlin.Int?

### io.modelcontextprotocol.kotlin.sdk.client.StreamableHttpMcpKtorClientExtensionsKt

### io.modelcontextprotocol.kotlin.sdk.client.WebSocketClientTransport
  ctor  fun `<init>`(io.ktor.client.HttpClient, kotlin.String?, io.ktor.client.request.HttpRequestBuilder.() -> kotlin.Unit): io.modelcontextprotocol.kotlin.sdk.client.WebSocketClientTransport
  fun    fun io.modelcontextprotocol.kotlin.sdk.client.WebSocketClientTransport.initializeSession(): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.client.WebSocketClientTransport.client: io.ktor.client.HttpClient
  val/var val io.modelcontextprotocol.kotlin.sdk.client.WebSocketClientTransport.requestBuilder: io.ktor.client.request.HttpRequestBuilder.() -> kotlin.Unit
  val/var var io.modelcontextprotocol.kotlin.sdk.client.WebSocketClientTransport.session: io.ktor.websocket.WebSocketSession
  val/var val io.modelcontextprotocol.kotlin.sdk.client.WebSocketClientTransport.urlString: kotlin.String?

### io.modelcontextprotocol.kotlin.sdk.client.WebSocketClientTransportKt

### io.modelcontextprotocol.kotlin.sdk.client.WebSocketMcpKtorClientExtensionsKt

### io.modelcontextprotocol.kotlin.sdk.internal.Utils_jvmKt

### io.modelcontextprotocol.kotlin.sdk.server.KtorServerKt

### io.modelcontextprotocol.kotlin.sdk.server.RegisteredPrompt
  ctor  fun `<init>`(io.modelcontextprotocol.kotlin.sdk.Prompt, suspend (io.modelcontextprotocol.kotlin.sdk.GetPromptRequest) -> io.modelcontextprotocol.kotlin.sdk.GetPromptResult): io.modelcontextprotocol.kotlin.sdk.server.RegisteredPrompt
  fun    fun io.modelcontextprotocol.kotlin.sdk.server.RegisteredPrompt.component1(): io.modelcontextprotocol.kotlin.sdk.Prompt
  fun    fun io.modelcontextprotocol.kotlin.sdk.server.RegisteredPrompt.component2(): suspend (io.modelcontextprotocol.kotlin.sdk.GetPromptRequest) -> io.modelcontextprotocol.kotlin.sdk.GetPromptResult
  fun    fun io.modelcontextprotocol.kotlin.sdk.server.RegisteredPrompt.copy(io.modelcontextprotocol.kotlin.sdk.Prompt, suspend (io.modelcontextprotocol.kotlin.sdk.GetPromptRequest) -> io.modelcontextprotocol.kotlin.sdk.GetPromptResult): io.modelcontextprotocol.kotlin.sdk.server.RegisteredPrompt
  fun    fun io.modelcontextprotocol.kotlin.sdk.server.RegisteredPrompt.equals(kotlin.Any?): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.server.RegisteredPrompt.hashCode(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.server.RegisteredPrompt.toString(): kotlin.String
  val/var val io.modelcontextprotocol.kotlin.sdk.server.RegisteredPrompt.messageProvider: suspend (io.modelcontextprotocol.kotlin.sdk.GetPromptRequest) -> io.modelcontextprotocol.kotlin.sdk.GetPromptResult
  val/var val io.modelcontextprotocol.kotlin.sdk.server.RegisteredPrompt.prompt: io.modelcontextprotocol.kotlin.sdk.Prompt

### io.modelcontextprotocol.kotlin.sdk.server.RegisteredResource
  ctor  fun `<init>`(io.modelcontextprotocol.kotlin.sdk.Resource, suspend (io.modelcontextprotocol.kotlin.sdk.ReadResourceRequest) -> io.modelcontextprotocol.kotlin.sdk.ReadResourceResult): io.modelcontextprotocol.kotlin.sdk.server.RegisteredResource
  fun    fun io.modelcontextprotocol.kotlin.sdk.server.RegisteredResource.component1(): io.modelcontextprotocol.kotlin.sdk.Resource
  fun    fun io.modelcontextprotocol.kotlin.sdk.server.RegisteredResource.component2(): suspend (io.modelcontextprotocol.kotlin.sdk.ReadResourceRequest) -> io.modelcontextprotocol.kotlin.sdk.ReadResourceResult
  fun    fun io.modelcontextprotocol.kotlin.sdk.server.RegisteredResource.copy(io.modelcontextprotocol.kotlin.sdk.Resource, suspend (io.modelcontextprotocol.kotlin.sdk.ReadResourceRequest) -> io.modelcontextprotocol.kotlin.sdk.ReadResourceResult): io.modelcontextprotocol.kotlin.sdk.server.RegisteredResource
  fun    fun io.modelcontextprotocol.kotlin.sdk.server.RegisteredResource.equals(kotlin.Any?): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.server.RegisteredResource.hashCode(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.server.RegisteredResource.toString(): kotlin.String
  val/var val io.modelcontextprotocol.kotlin.sdk.server.RegisteredResource.readHandler: suspend (io.modelcontextprotocol.kotlin.sdk.ReadResourceRequest) -> io.modelcontextprotocol.kotlin.sdk.ReadResourceResult
  val/var val io.modelcontextprotocol.kotlin.sdk.server.RegisteredResource.resource: io.modelcontextprotocol.kotlin.sdk.Resource

### io.modelcontextprotocol.kotlin.sdk.server.RegisteredTool
  ctor  fun `<init>`(io.modelcontextprotocol.kotlin.sdk.Tool, suspend (io.modelcontextprotocol.kotlin.sdk.CallToolRequest) -> io.modelcontextprotocol.kotlin.sdk.CallToolResult): io.modelcontextprotocol.kotlin.sdk.server.RegisteredTool
  fun    fun io.modelcontextprotocol.kotlin.sdk.server.RegisteredTool.component1(): io.modelcontextprotocol.kotlin.sdk.Tool
  fun    fun io.modelcontextprotocol.kotlin.sdk.server.RegisteredTool.component2(): suspend (io.modelcontextprotocol.kotlin.sdk.CallToolRequest) -> io.modelcontextprotocol.kotlin.sdk.CallToolResult
  fun    fun io.modelcontextprotocol.kotlin.sdk.server.RegisteredTool.copy(io.modelcontextprotocol.kotlin.sdk.Tool, suspend (io.modelcontextprotocol.kotlin.sdk.CallToolRequest) -> io.modelcontextprotocol.kotlin.sdk.CallToolResult): io.modelcontextprotocol.kotlin.sdk.server.RegisteredTool
  fun    fun io.modelcontextprotocol.kotlin.sdk.server.RegisteredTool.equals(kotlin.Any?): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.server.RegisteredTool.hashCode(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.server.RegisteredTool.toString(): kotlin.String
  val/var val io.modelcontextprotocol.kotlin.sdk.server.RegisteredTool.handler: suspend (io.modelcontextprotocol.kotlin.sdk.CallToolRequest) -> io.modelcontextprotocol.kotlin.sdk.CallToolResult
  val/var val io.modelcontextprotocol.kotlin.sdk.server.RegisteredTool.tool: io.modelcontextprotocol.kotlin.sdk.Tool

### io.modelcontextprotocol.kotlin.sdk.server.SSEServerTransportKt

### io.modelcontextprotocol.kotlin.sdk.server.Server
  ctor  fun `<init>`(io.modelcontextprotocol.kotlin.sdk.Implementation, io.modelcontextprotocol.kotlin.sdk.server.ServerOptions, kotlin.String): io.modelcontextprotocol.kotlin.sdk.server.Server
  ctor  fun `<init>`(io.modelcontextprotocol.kotlin.sdk.Implementation, io.modelcontextprotocol.kotlin.sdk.server.ServerOptions, (() -> kotlin.String)?): io.modelcontextprotocol.kotlin.sdk.server.Server
  fun    fun io.modelcontextprotocol.kotlin.sdk.server.Server.addPrompt(io.modelcontextprotocol.kotlin.sdk.Prompt, suspend (io.modelcontextprotocol.kotlin.sdk.GetPromptRequest) -> io.modelcontextprotocol.kotlin.sdk.GetPromptResult): kotlin.Unit
  fun    fun io.modelcontextprotocol.kotlin.sdk.server.Server.addPrompt(kotlin.String, kotlin.String?, kotlin.collections.List<io.modelcontextprotocol.kotlin.sdk.PromptArgument>?, suspend (io.modelcontextprotocol.kotlin.sdk.GetPromptRequest) -> io.modelcontextprotocol.kotlin.sdk.GetPromptResult): kotlin.Unit
  fun    fun io.modelcontextprotocol.kotlin.sdk.server.Server.addPrompts(kotlin.collections.List<io.modelcontextprotocol.kotlin.sdk.server.RegisteredPrompt>): kotlin.Unit
  fun    fun io.modelcontextprotocol.kotlin.sdk.server.Server.addResource(kotlin.String, kotlin.String, kotlin.String, kotlin.String, suspend (io.modelcontextprotocol.kotlin.sdk.ReadResourceRequest) -> io.modelcontextprotocol.kotlin.sdk.ReadResourceResult): kotlin.Unit
  fun    fun io.modelcontextprotocol.kotlin.sdk.server.Server.addResources(kotlin.collections.List<io.modelcontextprotocol.kotlin.sdk.server.RegisteredResource>): kotlin.Unit
  fun    fun io.modelcontextprotocol.kotlin.sdk.server.Server.addTool(io.modelcontextprotocol.kotlin.sdk.Tool, suspend (io.modelcontextprotocol.kotlin.sdk.CallToolRequest) -> io.modelcontextprotocol.kotlin.sdk.CallToolResult): kotlin.Unit
  fun    fun io.modelcontextprotocol.kotlin.sdk.server.Server.addTool(kotlin.String, kotlin.String, io.modelcontextprotocol.kotlin.sdk.Tool.Input, kotlin.String?, io.modelcontextprotocol.kotlin.sdk.Tool.Output?, io.modelcontextprotocol.kotlin.sdk.ToolAnnotations?, suspend (io.modelcontextprotocol.kotlin.sdk.CallToolRequest) -> io.modelcontextprotocol.kotlin.sdk.CallToolResult): kotlin.Unit
  fun    fun io.modelcontextprotocol.kotlin.sdk.server.Server.addTools(kotlin.collections.List<io.modelcontextprotocol.kotlin.sdk.server.RegisteredTool>): kotlin.Unit
  fun    fun io.modelcontextprotocol.kotlin.sdk.server.Server.close(): kotlin.Unit
  fun    fun io.modelcontextprotocol.kotlin.sdk.server.Server.connect(io.modelcontextprotocol.kotlin.sdk.shared.Transport): io.modelcontextprotocol.kotlin.sdk.server.ServerSession
  fun    fun io.modelcontextprotocol.kotlin.sdk.server.Server.handleCallTool(io.modelcontextprotocol.kotlin.sdk.CallToolRequest): io.modelcontextprotocol.kotlin.sdk.CallToolResult
  fun    fun io.modelcontextprotocol.kotlin.sdk.server.Server.handleGetPrompt(io.modelcontextprotocol.kotlin.sdk.GetPromptRequest): io.modelcontextprotocol.kotlin.sdk.GetPromptResult
  fun    fun io.modelcontextprotocol.kotlin.sdk.server.Server.handleListPrompts(): io.modelcontextprotocol.kotlin.sdk.ListPromptsResult
  fun    fun io.modelcontextprotocol.kotlin.sdk.server.Server.handleListResourceTemplates(): io.modelcontextprotocol.kotlin.sdk.ListResourceTemplatesResult
  fun    fun io.modelcontextprotocol.kotlin.sdk.server.Server.handleListResources(): io.modelcontextprotocol.kotlin.sdk.ListResourcesResult
  fun    fun io.modelcontextprotocol.kotlin.sdk.server.Server.handleListTools(): io.modelcontextprotocol.kotlin.sdk.ListToolsResult
  fun    fun io.modelcontextprotocol.kotlin.sdk.server.Server.handleReadResource(io.modelcontextprotocol.kotlin.sdk.ReadResourceRequest): io.modelcontextprotocol.kotlin.sdk.ReadResourceResult
  fun    fun io.modelcontextprotocol.kotlin.sdk.server.Server.onClose(() -> kotlin.Unit): kotlin.Unit
  fun    fun io.modelcontextprotocol.kotlin.sdk.server.Server.onConnect(() -> kotlin.Unit): kotlin.Unit
  fun    fun io.modelcontextprotocol.kotlin.sdk.server.Server.onInitialized(() -> kotlin.Unit): kotlin.Unit
  fun    fun io.modelcontextprotocol.kotlin.sdk.server.Server.removePrompt(kotlin.String): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.server.Server.removePrompts(kotlin.collections.List<kotlin.String>): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.server.Server.removeResource(kotlin.String): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.server.Server.removeResources(kotlin.collections.List<kotlin.String>): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.server.Server.removeTool(kotlin.String): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.server.Server.removeTools(kotlin.collections.List<kotlin.String>): kotlin.Int
  val/var var io.modelcontextprotocol.kotlin.sdk.server.Server._onClose: () -> kotlin.Unit
  val/var var io.modelcontextprotocol.kotlin.sdk.server.Server._onConnect: () -> kotlin.Unit
  val/var var io.modelcontextprotocol.kotlin.sdk.server.Server._onInitialized: () -> kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.server.Server.instructionsProvider: (() -> kotlin.String)?
  val/var val io.modelcontextprotocol.kotlin.sdk.server.Server.options: io.modelcontextprotocol.kotlin.sdk.server.ServerOptions
  val/var val io.modelcontextprotocol.kotlin.sdk.server.Server.prompts: kotlin.collections.Map<kotlin.String, io.modelcontextprotocol.kotlin.sdk.server.RegisteredPrompt>
  val/var val io.modelcontextprotocol.kotlin.sdk.server.Server.resources: kotlin.collections.Map<kotlin.String, io.modelcontextprotocol.kotlin.sdk.server.RegisteredResource>
  val/var val io.modelcontextprotocol.kotlin.sdk.server.Server.serverInfo: io.modelcontextprotocol.kotlin.sdk.Implementation
  val/var val io.modelcontextprotocol.kotlin.sdk.server.Server.tools: kotlin.collections.Map<kotlin.String, io.modelcontextprotocol.kotlin.sdk.server.RegisteredTool>

### io.modelcontextprotocol.kotlin.sdk.server.ServerKt

### io.modelcontextprotocol.kotlin.sdk.server.ServerOptions
  ctor  fun `<init>`(io.modelcontextprotocol.kotlin.sdk.ServerCapabilities, kotlin.Boolean): io.modelcontextprotocol.kotlin.sdk.server.ServerOptions
  val/var val io.modelcontextprotocol.kotlin.sdk.server.ServerOptions.capabilities: io.modelcontextprotocol.kotlin.sdk.ServerCapabilities

### io.modelcontextprotocol.kotlin.sdk.server.ServerSession
  ctor  fun `<init>`(io.modelcontextprotocol.kotlin.sdk.Implementation, io.modelcontextprotocol.kotlin.sdk.server.ServerOptions, kotlin.String?): io.modelcontextprotocol.kotlin.sdk.server.ServerSession
  fun    fun io.modelcontextprotocol.kotlin.sdk.server.ServerSession.assertCapabilityForMethod(io.modelcontextprotocol.kotlin.sdk.Method): kotlin.Unit
  fun    fun io.modelcontextprotocol.kotlin.sdk.server.ServerSession.assertNotificationCapability(io.modelcontextprotocol.kotlin.sdk.Method): kotlin.Unit
  fun    fun io.modelcontextprotocol.kotlin.sdk.server.ServerSession.assertRequestHandlerCapability(io.modelcontextprotocol.kotlin.sdk.Method): kotlin.Unit
  fun    fun io.modelcontextprotocol.kotlin.sdk.server.ServerSession.createElicitation(kotlin.String, io.modelcontextprotocol.kotlin.sdk.CreateElicitationRequest.RequestedSchema, io.modelcontextprotocol.kotlin.sdk.shared.RequestOptions?): io.modelcontextprotocol.kotlin.sdk.CreateElicitationResult
  fun    fun io.modelcontextprotocol.kotlin.sdk.server.ServerSession.createMessage(io.modelcontextprotocol.kotlin.sdk.CreateMessageRequest, io.modelcontextprotocol.kotlin.sdk.shared.RequestOptions?): io.modelcontextprotocol.kotlin.sdk.CreateMessageResult
  fun    fun io.modelcontextprotocol.kotlin.sdk.server.ServerSession.handleInitialize(io.modelcontextprotocol.kotlin.sdk.InitializeRequest): io.modelcontextprotocol.kotlin.sdk.InitializeResult
  fun    fun io.modelcontextprotocol.kotlin.sdk.server.ServerSession.listRoots(kotlinx.serialization.json.JsonObject, io.modelcontextprotocol.kotlin.sdk.shared.RequestOptions?): io.modelcontextprotocol.kotlin.sdk.ListRootsResult
  fun    fun io.modelcontextprotocol.kotlin.sdk.server.ServerSession.onClose(() -> kotlin.Unit): kotlin.Unit
  fun    fun io.modelcontextprotocol.kotlin.sdk.server.ServerSession.onClose(): kotlin.Unit
  fun    fun io.modelcontextprotocol.kotlin.sdk.server.ServerSession.onInitialized(() -> kotlin.Unit): kotlin.Unit
  fun    fun io.modelcontextprotocol.kotlin.sdk.server.ServerSession.ping(): io.modelcontextprotocol.kotlin.sdk.EmptyRequestResult
  fun    fun io.modelcontextprotocol.kotlin.sdk.server.ServerSession.sendLoggingMessage(io.modelcontextprotocol.kotlin.sdk.LoggingMessageNotification): kotlin.Unit
  fun    fun io.modelcontextprotocol.kotlin.sdk.server.ServerSession.sendPromptListChanged(): kotlin.Unit
  fun    fun io.modelcontextprotocol.kotlin.sdk.server.ServerSession.sendResourceListChanged(): kotlin.Unit
  fun    fun io.modelcontextprotocol.kotlin.sdk.server.ServerSession.sendResourceUpdated(io.modelcontextprotocol.kotlin.sdk.ResourceUpdatedNotification): kotlin.Unit
  fun    fun io.modelcontextprotocol.kotlin.sdk.server.ServerSession.sendToolListChanged(): kotlin.Unit
  val/var var io.modelcontextprotocol.kotlin.sdk.server.ServerSession._onClose: () -> kotlin.Unit
  val/var var io.modelcontextprotocol.kotlin.sdk.server.ServerSession._onInitialized: () -> kotlin.Unit
  val/var var io.modelcontextprotocol.kotlin.sdk.server.ServerSession.clientCapabilities: io.modelcontextprotocol.kotlin.sdk.ClientCapabilities?
  val/var var io.modelcontextprotocol.kotlin.sdk.server.ServerSession.clientVersion: io.modelcontextprotocol.kotlin.sdk.Implementation?
  val/var val io.modelcontextprotocol.kotlin.sdk.server.ServerSession.instructions: kotlin.String?
  val/var val io.modelcontextprotocol.kotlin.sdk.server.ServerSession.serverCapabilities: io.modelcontextprotocol.kotlin.sdk.ServerCapabilities
  val/var val io.modelcontextprotocol.kotlin.sdk.server.ServerSession.serverInfo: io.modelcontextprotocol.kotlin.sdk.Implementation

### io.modelcontextprotocol.kotlin.sdk.server.ServerSessionKt

### io.modelcontextprotocol.kotlin.sdk.server.SseServerTransport
  ctor  fun `<init>`(kotlin.String, io.ktor.server.sse.ServerSSESession): io.modelcontextprotocol.kotlin.sdk.server.SseServerTransport
  fun    fun io.modelcontextprotocol.kotlin.sdk.server.SseServerTransport.close(): kotlin.Unit
  fun    fun io.modelcontextprotocol.kotlin.sdk.server.SseServerTransport.handleMessage(kotlin.String): kotlin.Unit
  fun    fun io.modelcontextprotocol.kotlin.sdk.server.SseServerTransport.handlePostMessage(io.ktor.server.application.ApplicationCall): kotlin.Unit
  fun    fun io.modelcontextprotocol.kotlin.sdk.server.SseServerTransport.send(io.modelcontextprotocol.kotlin.sdk.JSONRPCMessage): kotlin.Unit
  fun    fun io.modelcontextprotocol.kotlin.sdk.server.SseServerTransport.start(): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.server.SseServerTransport.endpoint: kotlin.String
  val/var val io.modelcontextprotocol.kotlin.sdk.server.SseServerTransport.initialized: kotlin.concurrent.atomics.AtomicBoolean
  val/var val io.modelcontextprotocol.kotlin.sdk.server.SseServerTransport.session: io.ktor.server.sse.ServerSSESession
  val/var val io.modelcontextprotocol.kotlin.sdk.server.SseServerTransport.sessionId: kotlin.String

### io.modelcontextprotocol.kotlin.sdk.server.SseTransportManager
  ctor  fun `<init>`(kotlin.collections.Map<kotlin.String, io.modelcontextprotocol.kotlin.sdk.server.SseServerTransport>): io.modelcontextprotocol.kotlin.sdk.server.SseTransportManager
  fun    fun io.modelcontextprotocol.kotlin.sdk.server.SseTransportManager.addTransport(io.modelcontextprotocol.kotlin.sdk.server.SseServerTransport): kotlin.Unit
  fun    fun io.modelcontextprotocol.kotlin.sdk.server.SseTransportManager.getTransport(kotlin.String): io.modelcontextprotocol.kotlin.sdk.server.SseServerTransport?
  fun    fun io.modelcontextprotocol.kotlin.sdk.server.SseTransportManager.removeTransport(kotlin.String): kotlin.Unit

### io.modelcontextprotocol.kotlin.sdk.server.StdioServerTransport
  ctor  fun `<init>`(kotlinx.io.Source, kotlinx.io.Sink): io.modelcontextprotocol.kotlin.sdk.server.StdioServerTransport
  fun    fun io.modelcontextprotocol.kotlin.sdk.server.StdioServerTransport.close(): kotlin.Unit
  fun    fun io.modelcontextprotocol.kotlin.sdk.server.StdioServerTransport.processReadBuffer(): kotlin.Unit
  fun    fun io.modelcontextprotocol.kotlin.sdk.server.StdioServerTransport.send(io.modelcontextprotocol.kotlin.sdk.JSONRPCMessage): kotlin.Unit
  fun    fun io.modelcontextprotocol.kotlin.sdk.server.StdioServerTransport.start(): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.server.StdioServerTransport.coroutineContext: kotlin.coroutines.CoroutineContext
  val/var val io.modelcontextprotocol.kotlin.sdk.server.StdioServerTransport.initialized: kotlin.concurrent.atomics.AtomicBoolean
  val/var val io.modelcontextprotocol.kotlin.sdk.server.StdioServerTransport.inputStream: kotlinx.io.Source
  val/var val io.modelcontextprotocol.kotlin.sdk.server.StdioServerTransport.logger: io.github.oshai.kotlinlogging.KLogger
  val/var val io.modelcontextprotocol.kotlin.sdk.server.StdioServerTransport.outputWriter: kotlinx.io.Sink
  val/var val io.modelcontextprotocol.kotlin.sdk.server.StdioServerTransport.readBuffer: io.modelcontextprotocol.kotlin.sdk.shared.ReadBuffer
  val/var val io.modelcontextprotocol.kotlin.sdk.server.StdioServerTransport.readChannel: kotlinx.coroutines.channels.Channel<kotlin.ByteArray>
  val/var var io.modelcontextprotocol.kotlin.sdk.server.StdioServerTransport.readingJob: kotlinx.coroutines.Job?
  val/var val io.modelcontextprotocol.kotlin.sdk.server.StdioServerTransport.scope: kotlinx.coroutines.CoroutineScope
  val/var var io.modelcontextprotocol.kotlin.sdk.server.StdioServerTransport.sendingJob: kotlinx.coroutines.Job?
  val/var val io.modelcontextprotocol.kotlin.sdk.server.StdioServerTransport.writeChannel: kotlinx.coroutines.channels.Channel<io.modelcontextprotocol.kotlin.sdk.JSONRPCMessage>

### io.modelcontextprotocol.kotlin.sdk.server.WebSocketMcpKtorServerExtensionsKt

### io.modelcontextprotocol.kotlin.sdk.server.WebSocketMcpServerTransport
  ctor  fun `<init>`(io.ktor.server.websocket.WebSocketServerSession): io.modelcontextprotocol.kotlin.sdk.server.WebSocketMcpServerTransport
  fun    fun io.modelcontextprotocol.kotlin.sdk.server.WebSocketMcpServerTransport.initializeSession(): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.server.WebSocketMcpServerTransport.session: io.ktor.server.websocket.WebSocketServerSession

### io.modelcontextprotocol.kotlin.sdk.server.WebSocketMcpServerTransportKt

### io.modelcontextprotocol.kotlin.sdk.shared.AbstractTransport
  ctor  fun `<init>`(): io.modelcontextprotocol.kotlin.sdk.shared.AbstractTransport
  fun    fun io.modelcontextprotocol.kotlin.sdk.shared.AbstractTransport.onClose(() -> kotlin.Unit): kotlin.Unit
  fun    fun io.modelcontextprotocol.kotlin.sdk.shared.AbstractTransport.onError((kotlin.Throwable) -> kotlin.Unit): kotlin.Unit
  fun    fun io.modelcontextprotocol.kotlin.sdk.shared.AbstractTransport.onMessage(suspend (io.modelcontextprotocol.kotlin.sdk.JSONRPCMessage) -> kotlin.Unit): kotlin.Unit
  val/var var io.modelcontextprotocol.kotlin.sdk.shared.AbstractTransport._onClose: () -> kotlin.Unit
  val/var var io.modelcontextprotocol.kotlin.sdk.shared.AbstractTransport._onError: (kotlin.Throwable) -> kotlin.Unit
  val/var var io.modelcontextprotocol.kotlin.sdk.shared.AbstractTransport._onMessage: suspend (io.modelcontextprotocol.kotlin.sdk.JSONRPCMessage) -> kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.shared.AbstractTransport._onMessageInitialized: kotlinx.coroutines.CompletableDeferred<kotlin.Unit>

### io.modelcontextprotocol.kotlin.sdk.shared.Protocol
  ctor  fun `<init>`(io.modelcontextprotocol.kotlin.sdk.shared.ProtocolOptions?): io.modelcontextprotocol.kotlin.sdk.shared.Protocol
  fun    fun io.modelcontextprotocol.kotlin.sdk.shared.Protocol.assertCapabilityForMethod(io.modelcontextprotocol.kotlin.sdk.Method): kotlin.Unit
  fun    fun io.modelcontextprotocol.kotlin.sdk.shared.Protocol.assertNotificationCapability(io.modelcontextprotocol.kotlin.sdk.Method): kotlin.Unit
  fun    fun io.modelcontextprotocol.kotlin.sdk.shared.Protocol.assertRequestHandlerCapability(io.modelcontextprotocol.kotlin.sdk.Method): kotlin.Unit
  fun    fun io.modelcontextprotocol.kotlin.sdk.shared.Protocol.close(): kotlin.Unit
  fun    fun io.modelcontextprotocol.kotlin.sdk.shared.Protocol.connect(io.modelcontextprotocol.kotlin.sdk.shared.Transport): kotlin.Unit
  fun    fun io.modelcontextprotocol.kotlin.sdk.shared.Protocol.doClose(): kotlin.Unit
  fun    fun io.modelcontextprotocol.kotlin.sdk.shared.Protocol.notification(io.modelcontextprotocol.kotlin.sdk.Notification): kotlin.Unit
  fun    fun io.modelcontextprotocol.kotlin.sdk.shared.Protocol.onClose(): kotlin.Unit
  fun    fun io.modelcontextprotocol.kotlin.sdk.shared.Protocol.onError(kotlin.Throwable): kotlin.Unit
  fun    fun io.modelcontextprotocol.kotlin.sdk.shared.Protocol.onNotification(io.modelcontextprotocol.kotlin.sdk.JSONRPCNotification): kotlin.Unit
  fun    fun io.modelcontextprotocol.kotlin.sdk.shared.Protocol.onProgress(io.modelcontextprotocol.kotlin.sdk.ProgressNotification): kotlin.Unit
  fun    fun io.modelcontextprotocol.kotlin.sdk.shared.Protocol.onRequest(io.modelcontextprotocol.kotlin.sdk.JSONRPCRequest): kotlin.Unit
  fun    fun io.modelcontextprotocol.kotlin.sdk.shared.Protocol.onResponse(io.modelcontextprotocol.kotlin.sdk.JSONRPCResponse?, io.modelcontextprotocol.kotlin.sdk.JSONRPCError?): kotlin.Unit
  fun    fun io.modelcontextprotocol.kotlin.sdk.shared.Protocol.removeNotificationHandler(io.modelcontextprotocol.kotlin.sdk.Method): kotlin.Unit
  fun    fun io.modelcontextprotocol.kotlin.sdk.shared.Protocol.removeRequestHandler(io.modelcontextprotocol.kotlin.sdk.Method): kotlin.Unit
  fun    fun io.modelcontextprotocol.kotlin.sdk.shared.Protocol.request(io.modelcontextprotocol.kotlin.sdk.Request, io.modelcontextprotocol.kotlin.sdk.shared.RequestOptions?): T
  fun    fun io.modelcontextprotocol.kotlin.sdk.shared.Protocol.setNotificationHandler(io.modelcontextprotocol.kotlin.sdk.Method, (notification: T) -> kotlinx.coroutines.Deferred<kotlin.Unit>): kotlin.Unit
  fun    fun io.modelcontextprotocol.kotlin.sdk.shared.Protocol.setRequestHandler(io.modelcontextprotocol.kotlin.sdk.Method, suspend (T, io.modelcontextprotocol.kotlin.sdk.shared.RequestHandlerExtra) -> io.modelcontextprotocol.kotlin.sdk.RequestResult?): kotlin.Unit
  fun    fun io.modelcontextprotocol.kotlin.sdk.shared.Protocol.setRequestHandler(kotlin.reflect.KType, io.modelcontextprotocol.kotlin.sdk.Method, suspend (T, io.modelcontextprotocol.kotlin.sdk.shared.RequestHandlerExtra) -> io.modelcontextprotocol.kotlin.sdk.RequestResult?): kotlin.Unit
  val/var var io.modelcontextprotocol.kotlin.sdk.shared.Protocol.fallbackNotificationHandler: (suspend (notification: io.modelcontextprotocol.kotlin.sdk.JSONRPCNotification) -> kotlin.Unit)?
  val/var var io.modelcontextprotocol.kotlin.sdk.shared.Protocol.fallbackRequestHandler: (suspend (request: io.modelcontextprotocol.kotlin.sdk.JSONRPCRequest, extra: io.modelcontextprotocol.kotlin.sdk.shared.RequestHandlerExtra) -> io.modelcontextprotocol.kotlin.sdk.RequestResult?)?
  val/var val io.modelcontextprotocol.kotlin.sdk.shared.Protocol.notificationHandlers: kotlin.collections.Map<kotlin.String, suspend (notification: io.modelcontextprotocol.kotlin.sdk.JSONRPCNotification) -> kotlin.Unit>
  val/var val io.modelcontextprotocol.kotlin.sdk.shared.Protocol.options: io.modelcontextprotocol.kotlin.sdk.shared.ProtocolOptions?
  val/var val io.modelcontextprotocol.kotlin.sdk.shared.Protocol.progressHandlers: kotlin.collections.Map<io.modelcontextprotocol.kotlin.sdk.RequestId, io.modelcontextprotocol.kotlin.sdk.shared.ProgressCallback /* = (io.modelcontextprotocol.kotlin.sdk.Progress) -> kotlin.Unit */>
  val/var val io.modelcontextprotocol.kotlin.sdk.shared.Protocol.requestHandlers: kotlin.collections.Map<kotlin.String, suspend (request: io.modelcontextprotocol.kotlin.sdk.JSONRPCRequest, extra: io.modelcontextprotocol.kotlin.sdk.shared.RequestHandlerExtra) -> io.modelcontextprotocol.kotlin.sdk.RequestResult?>
  val/var val io.modelcontextprotocol.kotlin.sdk.shared.Protocol.responseHandlers: kotlin.collections.Map<io.modelcontextprotocol.kotlin.sdk.RequestId, (response: io.modelcontextprotocol.kotlin.sdk.JSONRPCResponse?, error: kotlin.Exception? /* = java.lang.Exception? */) -> kotlin.Unit>
  val/var var io.modelcontextprotocol.kotlin.sdk.shared.Protocol.transport: io.modelcontextprotocol.kotlin.sdk.shared.Transport?

### io.modelcontextprotocol.kotlin.sdk.shared.ProtocolKt

### io.modelcontextprotocol.kotlin.sdk.shared.ProtocolOptions
  ctor  fun `<init>`(kotlin.Boolean, kotlin.time.Duration): io.modelcontextprotocol.kotlin.sdk.shared.ProtocolOptions
  val/var var io.modelcontextprotocol.kotlin.sdk.shared.ProtocolOptions.enforceStrictCapabilities: kotlin.Boolean
  val/var var io.modelcontextprotocol.kotlin.sdk.shared.ProtocolOptions.timeout: kotlin.time.Duration

### io.modelcontextprotocol.kotlin.sdk.shared.ReadBuffer
  ctor  fun `<init>`(): io.modelcontextprotocol.kotlin.sdk.shared.ReadBuffer
  fun    fun io.modelcontextprotocol.kotlin.sdk.shared.ReadBuffer.append(kotlin.ByteArray): kotlin.Unit
  fun    fun io.modelcontextprotocol.kotlin.sdk.shared.ReadBuffer.clear(): kotlin.Unit
  fun    fun io.modelcontextprotocol.kotlin.sdk.shared.ReadBuffer.readMessage(): io.modelcontextprotocol.kotlin.sdk.JSONRPCMessage?
  val/var val io.modelcontextprotocol.kotlin.sdk.shared.ReadBuffer.buffer: kotlinx.io.Buffer
  val/var val io.modelcontextprotocol.kotlin.sdk.shared.ReadBuffer.logger: io.github.oshai.kotlinlogging.KLogger

### io.modelcontextprotocol.kotlin.sdk.shared.ReadBufferKt

### io.modelcontextprotocol.kotlin.sdk.shared.RequestHandlerExtra
  ctor  fun `<init>`(): io.modelcontextprotocol.kotlin.sdk.shared.RequestHandlerExtra

### io.modelcontextprotocol.kotlin.sdk.shared.RequestOptions
  ctor  fun `<init>`(io.modelcontextprotocol.kotlin.sdk.shared.ProgressCallback? /* = ((io.modelcontextprotocol.kotlin.sdk.Progress) -> kotlin.Unit)? */, kotlin.time.Duration): io.modelcontextprotocol.kotlin.sdk.shared.RequestOptions
  fun    fun io.modelcontextprotocol.kotlin.sdk.shared.RequestOptions.component1(): io.modelcontextprotocol.kotlin.sdk.shared.ProgressCallback? /* = ((io.modelcontextprotocol.kotlin.sdk.Progress) -> kotlin.Unit)? */
  fun    fun io.modelcontextprotocol.kotlin.sdk.shared.RequestOptions.component2(): kotlin.time.Duration
  fun    fun io.modelcontextprotocol.kotlin.sdk.shared.RequestOptions.copy(io.modelcontextprotocol.kotlin.sdk.shared.ProgressCallback? /* = ((io.modelcontextprotocol.kotlin.sdk.Progress) -> kotlin.Unit)? */, kotlin.time.Duration): io.modelcontextprotocol.kotlin.sdk.shared.RequestOptions
  fun    fun io.modelcontextprotocol.kotlin.sdk.shared.RequestOptions.equals(kotlin.Any?): kotlin.Boolean
  fun    fun io.modelcontextprotocol.kotlin.sdk.shared.RequestOptions.hashCode(): kotlin.Int
  fun    fun io.modelcontextprotocol.kotlin.sdk.shared.RequestOptions.toString(): kotlin.String
  val/var val io.modelcontextprotocol.kotlin.sdk.shared.RequestOptions.onProgress: io.modelcontextprotocol.kotlin.sdk.shared.ProgressCallback? /* = ((io.modelcontextprotocol.kotlin.sdk.Progress) -> kotlin.Unit)? */
  val/var val io.modelcontextprotocol.kotlin.sdk.shared.RequestOptions.timeout: kotlin.time.Duration

### io.modelcontextprotocol.kotlin.sdk.shared.Transport
  fun    fun io.modelcontextprotocol.kotlin.sdk.shared.Transport.close(): kotlin.Unit
  fun    fun io.modelcontextprotocol.kotlin.sdk.shared.Transport.onClose(() -> kotlin.Unit): kotlin.Unit
  fun    fun io.modelcontextprotocol.kotlin.sdk.shared.Transport.onError((kotlin.Throwable) -> kotlin.Unit): kotlin.Unit
  fun    fun io.modelcontextprotocol.kotlin.sdk.shared.Transport.onMessage(suspend (io.modelcontextprotocol.kotlin.sdk.JSONRPCMessage) -> kotlin.Unit): kotlin.Unit
  fun    fun io.modelcontextprotocol.kotlin.sdk.shared.Transport.send(io.modelcontextprotocol.kotlin.sdk.JSONRPCMessage): kotlin.Unit
  fun    fun io.modelcontextprotocol.kotlin.sdk.shared.Transport.start(): kotlin.Unit

### io.modelcontextprotocol.kotlin.sdk.shared.WebSocketMcpTransport
  ctor  fun `<init>`(): io.modelcontextprotocol.kotlin.sdk.shared.WebSocketMcpTransport
  fun    fun io.modelcontextprotocol.kotlin.sdk.shared.WebSocketMcpTransport.close(): kotlin.Unit
  fun    fun io.modelcontextprotocol.kotlin.sdk.shared.WebSocketMcpTransport.initializeSession(): kotlin.Unit
  fun    fun io.modelcontextprotocol.kotlin.sdk.shared.WebSocketMcpTransport.send(io.modelcontextprotocol.kotlin.sdk.JSONRPCMessage): kotlin.Unit
  fun    fun io.modelcontextprotocol.kotlin.sdk.shared.WebSocketMcpTransport.start(): kotlin.Unit
  val/var val io.modelcontextprotocol.kotlin.sdk.shared.WebSocketMcpTransport.initialized: kotlin.concurrent.atomics.AtomicBoolean
  val/var val io.modelcontextprotocol.kotlin.sdk.shared.WebSocketMcpTransport.scope: kotlinx.coroutines.CoroutineScope
  val/var val io.modelcontextprotocol.kotlin.sdk.shared.WebSocketMcpTransport.session: io.ktor.websocket.WebSocketSession

### io.modelcontextprotocol.kotlin.sdk.shared.WebSocketMcpTransportKt

